   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	usart_init
  20              		.thumb
  21              		.thumb_func
  23              	usart_init:
  24              	.LFB29:
  25              		.file 1 "../src/uart.c"
   1:../src/uart.c **** /*
   2:../src/uart.c ****  * uart.c
   3:../src/uart.c ****  *
   4:../src/uart.c ****  *  Created on: Apr 12, 2012
   5:../src/uart.c ****  *      Author: alexs
   6:../src/uart.c ****  */
   7:../src/uart.c **** 
   8:../src/uart.c **** #include "stm32f10x_gpio.h"
   9:../src/uart.c **** #include "stm32f10x_usart.h"
  10:../src/uart.c **** 
  11:../src/uart.c **** void usart_init( int baudrate )
  12:../src/uart.c **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 8AB0     		sub	sp, sp, #40
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 48
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  13:../src/uart.c **** 
  14:../src/uart.c ****   RCC_APB2PeriphClockCmd(   RCC_APB2Periph_USART1 |
  42              		.loc 1 14 0
  43 0008 44F20500 		movw	r0, #16389
  44 000c 4FF00101 		mov	r1, #1
  45 0010 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  15:../src/uart.c ****       RCC_APB2Periph_GPIOA  |
  16:../src/uart.c ****       RCC_APB2Periph_AFIO,
  17:../src/uart.c ****       ENABLE);
  18:../src/uart.c **** 
  19:../src/uart.c ****   //GPIO_PinRemapConfig(GPIO_Remap_USART1, ENABLE);
  20:../src/uart.c **** 
  21:../src/uart.c ****   // start with pin configuration
  22:../src/uart.c ****   GPIO_InitTypeDef GPIO_init;
  23:../src/uart.c **** 
  24:../src/uart.c ****   GPIO_init.GPIO_Pin   = GPIO_Pin_10;
  46              		.loc 1 24 0
  47 0014 4FF48063 		mov	r3, #1024
  48 0018 BB84     		strh	r3, [r7, #36]	@ movhi
  25:../src/uart.c ****   GPIO_init.GPIO_Mode  = GPIO_Mode_IN_FLOATING;
  49              		.loc 1 25 0
  50 001a 4FF00403 		mov	r3, #4
  51 001e 87F82730 		strb	r3, [r7, #39]
  26:../src/uart.c ****   GPIO_init.GPIO_Speed = GPIO_Speed_50MHz;
  52              		.loc 1 26 0
  53 0022 4FF00303 		mov	r3, #3
  54 0026 87F82630 		strb	r3, [r7, #38]
  27:../src/uart.c ****   GPIO_Init(GPIOA, &GPIO_init);
  55              		.loc 1 27 0
  56 002a 07F12403 		add	r3, r7, #36
  57 002e 4FF40060 		mov	r0, #2048
  58 0032 C4F20100 		movt	r0, 16385
  59 0036 1946     		mov	r1, r3
  60 0038 FFF7FEFF 		bl	GPIO_Init
  28:../src/uart.c **** 
  29:../src/uart.c ****   GPIO_init.GPIO_Pin   = GPIO_Pin_9;
  61              		.loc 1 29 0
  62 003c 4FF40073 		mov	r3, #512
  63 0040 BB84     		strh	r3, [r7, #36]	@ movhi
  30:../src/uart.c ****   GPIO_init.GPIO_Mode  = GPIO_Mode_AF_PP;
  64              		.loc 1 30 0
  65 0042 4FF01803 		mov	r3, #24
  66 0046 87F82730 		strb	r3, [r7, #39]
  31:../src/uart.c ****   GPIO_init.GPIO_Speed = GPIO_Speed_50MHz;
  67              		.loc 1 31 0
  68 004a 4FF00303 		mov	r3, #3
  69 004e 87F82630 		strb	r3, [r7, #38]
  32:../src/uart.c ****   GPIO_Init(GPIOA, &GPIO_init);
  70              		.loc 1 32 0
  71 0052 07F12403 		add	r3, r7, #36
  72 0056 4FF40060 		mov	r0, #2048
  73 005a C4F20100 		movt	r0, 16385
  74 005e 1946     		mov	r1, r3
  75 0060 FFF7FEFF 		bl	GPIO_Init
  33:../src/uart.c **** 
  34:../src/uart.c ****   // usart peripheral confguration
  35:../src/uart.c ****   USART_InitTypeDef USART_init;
  36:../src/uart.c ****   USART_ClockInitTypeDef USART_clockinit;
  37:../src/uart.c **** 
  38:../src/uart.c ****   USART_ClockStructInit(&USART_clockinit);
  76              		.loc 1 38 0
  77 0064 07F10C03 		add	r3, r7, #12
  78 0068 1846     		mov	r0, r3
  79 006a FFF7FEFF 		bl	USART_ClockStructInit
  39:../src/uart.c ****   USART_ClockInit(USART1, &USART_clockinit);
  80              		.loc 1 39 0
  81 006e 07F10C03 		add	r3, r7, #12
  82 0072 4FF46050 		mov	r0, #14336
  83 0076 C4F20100 		movt	r0, 16385
  84 007a 1946     		mov	r1, r3
  85 007c FFF7FEFF 		bl	USART_ClockInit
  40:../src/uart.c **** 
  41:../src/uart.c ****   USART_init.USART_BaudRate   = baudrate;
  86              		.loc 1 41 0
  87 0080 7B68     		ldr	r3, [r7, #4]
  88 0082 7B61     		str	r3, [r7, #20]
  42:../src/uart.c ****   USART_init.USART_WordLength = USART_WordLength_8b;
  89              		.loc 1 42 0
  90 0084 4FF00003 		mov	r3, #0
  91 0088 3B83     		strh	r3, [r7, #24]	@ movhi
  43:../src/uart.c ****   USART_init.USART_Parity     = USART_Parity_No;
  92              		.loc 1 43 0
  93 008a 4FF00003 		mov	r3, #0
  94 008e BB83     		strh	r3, [r7, #28]	@ movhi
  44:../src/uart.c ****   USART_init.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;
  95              		.loc 1 44 0
  96 0090 4FF00C03 		mov	r3, #12
  97 0094 FB83     		strh	r3, [r7, #30]	@ movhi
  45:../src/uart.c ****   USART_init.USART_StopBits   = USART_StopBits_1;
  98              		.loc 1 45 0
  99 0096 4FF00003 		mov	r3, #0
 100 009a 7B83     		strh	r3, [r7, #26]	@ movhi
  46:../src/uart.c ****   USART_init.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 101              		.loc 1 46 0
 102 009c 4FF00003 		mov	r3, #0
 103 00a0 3B84     		strh	r3, [r7, #32]	@ movhi
  47:../src/uart.c **** 
  48:../src/uart.c ****   USART_Init(USART1, &USART_init);
 104              		.loc 1 48 0
 105 00a2 07F11403 		add	r3, r7, #20
 106 00a6 4FF46050 		mov	r0, #14336
 107 00aa C4F20100 		movt	r0, 16385
 108 00ae 1946     		mov	r1, r3
 109 00b0 FFF7FEFF 		bl	USART_Init
  49:../src/uart.c **** 
  50:../src/uart.c ****   USART_Cmd(USART1, ENABLE);
 110              		.loc 1 50 0
 111 00b4 4FF46050 		mov	r0, #14336
 112 00b8 C4F20100 		movt	r0, 16385
 113 00bc 4FF00101 		mov	r1, #1
 114 00c0 FFF7FEFF 		bl	USART_Cmd
  51:../src/uart.c **** 
  52:../src/uart.c ****   USART_SendData(USART1, (uint8_t) 'a');
 115              		.loc 1 52 0
 116 00c4 4FF46050 		mov	r0, #14336
 117 00c8 C4F20100 		movt	r0, 16385
 118 00cc 4FF06101 		mov	r1, #97
 119 00d0 FFF7FEFF 		bl	USART_SendData
  53:../src/uart.c ****   //Loop until the end of transmission
  54:../src/uart.c ****   while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 120              		.loc 1 54 0
 121 00d4 00BF     		nop
 122              	.L2:
 123              		.loc 1 54 0 is_stmt 0 discriminator 1
 124 00d6 4FF46050 		mov	r0, #14336
 125 00da C4F20100 		movt	r0, 16385
 126 00de 4FF04001 		mov	r1, #64
 127 00e2 FFF7FEFF 		bl	USART_GetFlagStatus
 128 00e6 0346     		mov	r3, r0
 129 00e8 002B     		cmp	r3, #0
 130 00ea F4D0     		beq	.L2
  55:../src/uart.c ****     {
  56:../src/uart.c ****     }
  57:../src/uart.c ****   USART_SendData(USART1, (uint8_t) 'a');
 131              		.loc 1 57 0 is_stmt 1
 132 00ec 4FF46050 		mov	r0, #14336
 133 00f0 C4F20100 		movt	r0, 16385
 134 00f4 4FF06101 		mov	r1, #97
 135 00f8 FFF7FEFF 		bl	USART_SendData
  58:../src/uart.c ****   //Loop until the end of transmission
  59:../src/uart.c ****   while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 136              		.loc 1 59 0
 137 00fc 00BF     		nop
 138              	.L3:
 139              		.loc 1 59 0 is_stmt 0 discriminator 1
 140 00fe 4FF46050 		mov	r0, #14336
 141 0102 C4F20100 		movt	r0, 16385
 142 0106 4FF04001 		mov	r1, #64
 143 010a FFF7FEFF 		bl	USART_GetFlagStatus
 144 010e 0346     		mov	r3, r0
 145 0110 002B     		cmp	r3, #0
 146 0112 F4D0     		beq	.L3
  60:../src/uart.c ****     {
  61:../src/uart.c ****     }
  62:../src/uart.c ****   USART_SendData(USART1, (uint8_t) 'a');
 147              		.loc 1 62 0 is_stmt 1
 148 0114 4FF46050 		mov	r0, #14336
 149 0118 C4F20100 		movt	r0, 16385
 150 011c 4FF06101 		mov	r1, #97
 151 0120 FFF7FEFF 		bl	USART_SendData
  63:../src/uart.c ****   //Loop until the end of transmission
  64:../src/uart.c ****   while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 152              		.loc 1 64 0
 153 0124 00BF     		nop
 154              	.L4:
 155              		.loc 1 64 0 is_stmt 0 discriminator 1
 156 0126 4FF46050 		mov	r0, #14336
 157 012a C4F20100 		movt	r0, 16385
 158 012e 4FF04001 		mov	r1, #64
 159 0132 FFF7FEFF 		bl	USART_GetFlagStatus
 160 0136 0346     		mov	r3, r0
 161 0138 002B     		cmp	r3, #0
 162 013a F4D0     		beq	.L4
  65:../src/uart.c ****     {
  66:../src/uart.c ****     }
  67:../src/uart.c **** 
  68:../src/uart.c **** }
 163              		.loc 1 68 0 is_stmt 1
 164 013c 07F12807 		add	r7, r7, #40
 165 0140 BD46     		mov	sp, r7
 166 0142 80BD     		pop	{r7, pc}
 167              		.cfi_endproc
 168              	.LFE29:
 170              		.align	2
 171              		.global	usart1_put
 172              		.thumb
 173              		.thumb_func
 175              	usart1_put:
 176              	.LFB30:
  69:../src/uart.c **** 
  70:../src/uart.c **** 
  71:../src/uart.c **** 
  72:../src/uart.c **** 
  73:../src/uart.c **** void usart1_put(uint8_t ch)
  74:../src/uart.c **** {
 177              		.loc 1 74 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0144 80B5     		push	{r7, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0146 82B0     		sub	sp, sp, #8
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 16
 189 0148 00AF     		add	r7, sp, #0
 190              	.LCFI5:
 191              		.cfi_def_cfa_register 7
 192 014a 0346     		mov	r3, r0
 193 014c FB71     		strb	r3, [r7, #7]
  75:../src/uart.c **** #ifdef BUFFERED
  76:../src/uart.c ****   //put char to the buffer
  77:../src/uart.c ****   BufferPut(&U1Tx, ch);
  78:../src/uart.c ****   //enable Transmit Data Register empty interrupt
  79:../src/uart.c ****   USART_ITConfig(USART1, USART_IT_TXE, ENABLE);
  80:../src/uart.c **** #else
  81:../src/uart.c ****   USART_SendData(USART1, (uint8_t) ch);
 194              		.loc 1 81 0
 195 014e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 196 0150 9BB2     		uxth	r3, r3
 197 0152 4FF46050 		mov	r0, #14336
 198 0156 C4F20100 		movt	r0, 16385
 199 015a 1946     		mov	r1, r3
 200 015c FFF7FEFF 		bl	USART_SendData
  82:../src/uart.c ****   //Loop until the end of transmission
  83:../src/uart.c ****   while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 201              		.loc 1 83 0
 202 0160 00BF     		nop
 203              	.L6:
 204              		.loc 1 83 0 is_stmt 0 discriminator 1
 205 0162 4FF46050 		mov	r0, #14336
 206 0166 C4F20100 		movt	r0, 16385
 207 016a 4FF04001 		mov	r1, #64
 208 016e FFF7FEFF 		bl	USART_GetFlagStatus
 209 0172 0346     		mov	r3, r0
 210 0174 002B     		cmp	r3, #0
 211 0176 F4D0     		beq	.L6
  84:../src/uart.c ****     {
  85:../src/uart.c ****     }
  86:../src/uart.c **** #endif
  87:../src/uart.c **** }
 212              		.loc 1 87 0 is_stmt 1
 213 0178 07F10807 		add	r7, r7, #8
 214 017c BD46     		mov	sp, r7
 215 017e 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE30:
 219              		.align	2
 220              		.global	usart1_get
 221              		.thumb
 222              		.thumb_func
 224              	usart1_get:
 225              	.LFB31:
  88:../src/uart.c **** 
  89:../src/uart.c **** 
  90:../src/uart.c **** uint8_t usart1_get(void)
  91:../src/uart.c **** {
 226              		.loc 1 91 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0180 80B5     		push	{r7, lr}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0182 00AF     		add	r7, sp, #0
 236              	.LCFI7:
 237              		.cfi_def_cfa_register 7
  92:../src/uart.c **** #ifdef BUFFERED
  93:../src/uart.c ****   uint8_t ch;
  94:../src/uart.c ****   //check if buffer is empty
  95:../src/uart.c ****   while (BufferIsEmpty(U1Rx) ==SUCCESS);
  96:../src/uart.c ****   BufferGet(&U1Rx, &ch);
  97:../src/uart.c ****   return ch;
  98:../src/uart.c **** #else
  99:../src/uart.c ****   while ( USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == RESET);
 238              		.loc 1 99 0
 239 0184 00BF     		nop
 240              	.L8:
 241              		.loc 1 99 0 is_stmt 0 discriminator 1
 242 0186 4FF46050 		mov	r0, #14336
 243 018a C4F20100 		movt	r0, 16385
 244 018e 4FF02001 		mov	r1, #32
 245 0192 FFF7FEFF 		bl	USART_GetFlagStatus
 246 0196 0346     		mov	r3, r0
 247 0198 002B     		cmp	r3, #0
 248 019a F4D0     		beq	.L8
 100:../src/uart.c ****   return (uint8_t)USART_ReceiveData(USART1);
 249              		.loc 1 100 0 is_stmt 1
 250 019c 4FF46050 		mov	r0, #14336
 251 01a0 C4F20100 		movt	r0, 16385
 252 01a4 FFF7FEFF 		bl	USART_ReceiveData
 253 01a8 0346     		mov	r3, r0
 254 01aa DBB2     		uxtb	r3, r3
 101:../src/uart.c **** #endif
 102:../src/uart.c **** }
 255              		.loc 1 102 0
 256 01ac 1846     		mov	r0, r3
 257 01ae 80BD     		pop	{r7, pc}
 258              		.cfi_endproc
 259              	.LFE31:
 261              	.Letext0:
 262              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.7.0/../../../../arm-none-eabi/include/stdint.h"
 263              		.file 3 "../CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 264              		.file 4 "../STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 265              		.file 5 "../STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 266              		.file 6 "../CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart.c
     /tmp/ccTCuTJa.s:18     .text:0000000000000000 $t
     /tmp/ccTCuTJa.s:23     .text:0000000000000000 usart_init
     /tmp/ccTCuTJa.s:175    .text:0000000000000144 usart1_put
     /tmp/ccTCuTJa.s:224    .text:0000000000000180 usart1_get
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.stm32f10x.h.51.f8e02decc61d103e6060acb7056f1e5e
                           .group:0000000000000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:0000000000000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:0000000000000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:0000000000000000 wm4.stm32f10x.h.522.9a9f642c8c562acb4a63ad5d933b7c01
                           .group:0000000000000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.6e7f2924f39c60c10815105b99b8b446
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.968bcf08d813e68e57c280a4da69fa5a
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.46.4096b03458401eca76553253bd40f29d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
GPIO_Init
USART_ClockStructInit
USART_ClockInit
USART_Init
USART_Cmd
USART_SendData
USART_GetFlagStatus
USART_ReceiveData
