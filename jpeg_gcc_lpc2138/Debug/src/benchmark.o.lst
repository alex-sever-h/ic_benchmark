   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"benchmark.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.int_to_a,"ax",%progbits
  17              		.align	2
  18              		.global	int_to_a
  20              	int_to_a:
  21              	.LFB0:
  22              		.file 1 "../src/benchmark.c"
   1:../src/benchmark.c **** 
   2:../src/benchmark.c **** #include <stdlib.h>
   3:../src/benchmark.c **** #include <string.h>
   4:../src/benchmark.c **** #include "../inc_lpc/lpc213x.h"
   5:../src/benchmark.c **** #include "../inc/timer.h"
   6:../src/benchmark.c **** #include "../inc/uart.h"
   7:../src/benchmark.c **** #include "../inc/benchmark.h"
   8:../src/benchmark.c **** 
   9:../src/benchmark.c **** 
  10:../src/benchmark.c **** #define SMALLTIME 15000
  11:../src/benchmark.c **** 
  12:../src/benchmark.c **** 
  13:../src/benchmark.c **** /* Procedure for the assignment of structures,          */
  14:../src/benchmark.c **** /* if the C compiler doesn't support this feature       */
  15:../src/benchmark.c **** #ifdef  NOSTRUCTASSIGN
  16:../src/benchmark.c **** 
  17:../src/benchmark.c **** memcpy (d, s, l)
  18:../src/benchmark.c **** register char   *d;
  19:../src/benchmark.c **** register char   *s;
  20:../src/benchmark.c **** register int    l;
  21:../src/benchmark.c **** {
  22:../src/benchmark.c ****   while (l--) *d++ = *s++;
  23:../src/benchmark.c **** }
  24:../src/benchmark.c **** #define structassign(d, s)      memcpy(&(d), &(s), sizeof(d))
  25:../src/benchmark.c **** 
  26:../src/benchmark.c **** #else
  27:../src/benchmark.c **** 
  28:../src/benchmark.c **** #define structassign(d, s)      d = s
  29:../src/benchmark.c **** 
  30:../src/benchmark.c **** #endif
  31:../src/benchmark.c **** 
  32:../src/benchmark.c **** 
  33:../src/benchmark.c **** typedef       enum    {Ident_1, Ident_2, Ident_3, Ident_4, Ident_5}
  34:../src/benchmark.c **** Enumeration;
  35:../src/benchmark.c **** 
  36:../src/benchmark.c **** #ifndef NULL
  37:../src/benchmark.c **** #define NULL 0
  38:../src/benchmark.c **** #endif
  39:../src/benchmark.c **** /* Value of a Null pointer */
  40:../src/benchmark.c **** 
  41:../src/benchmark.c **** 
  42:../src/benchmark.c **** #define true  1
  43:../src/benchmark.c **** #define false 0
  44:../src/benchmark.c **** /* Value for booleans */
  45:../src/benchmark.c **** 
  46:../src/benchmark.c **** 
  47:../src/benchmark.c **** 
  48:../src/benchmark.c **** /*********************************************************************
  49:../src/benchmark.c ****  ********* TYPEDEFS
  50:../src/benchmark.c ****  *********************************************************************/
  51:../src/benchmark.c **** 
  52:../src/benchmark.c **** 
  53:../src/benchmark.c **** typedef int     One_Thirty;
  54:../src/benchmark.c **** typedef int     One_Fifty;
  55:../src/benchmark.c **** typedef char    Capital_Letter;
  56:../src/benchmark.c **** typedef int     Boolean;
  57:../src/benchmark.c **** typedef char    Str_30 [31];
  58:../src/benchmark.c **** typedef int     Arr_1_Dim [50];
  59:../src/benchmark.c **** typedef int     Arr_2_Dim [50] [50];
  60:../src/benchmark.c **** 
  61:../src/benchmark.c **** typedef struct record
  62:../src/benchmark.c **** {
  63:../src/benchmark.c ****   struct record *Ptr_Comp;
  64:../src/benchmark.c ****   Enumeration    Discr;
  65:../src/benchmark.c ****   union {
  66:../src/benchmark.c ****     struct {
  67:../src/benchmark.c ****       Enumeration Enum_Comp;
  68:../src/benchmark.c ****       int         Int_Comp;
  69:../src/benchmark.c ****       char        Str_Comp [31];
  70:../src/benchmark.c ****     } var_1;
  71:../src/benchmark.c ****     struct {
  72:../src/benchmark.c ****       Enumeration E_Comp_2;
  73:../src/benchmark.c ****       char        Str_2_Comp [31];
  74:../src/benchmark.c ****     } var_2;
  75:../src/benchmark.c ****     struct {
  76:../src/benchmark.c ****       char        Ch_1_Comp;
  77:../src/benchmark.c ****       char        Ch_2_Comp;
  78:../src/benchmark.c ****     } var_3;
  79:../src/benchmark.c ****   } variant;
  80:../src/benchmark.c **** } Rec_Type, *Rec_Pointer;
  81:../src/benchmark.c **** 
  82:../src/benchmark.c **** int dhrystone (void);
  83:../src/benchmark.c **** void Proc_1 (Rec_Pointer Ptr_Val_Par);
  84:../src/benchmark.c **** void Proc_2 (One_Fifty *Int_Par_Ref);
  85:../src/benchmark.c **** void Proc_3 (Rec_Pointer *Ptr_Ref_Par);
  86:../src/benchmark.c **** void Proc_4 (void);
  87:../src/benchmark.c **** void Proc_5 (void);
  88:../src/benchmark.c **** void Proc_6 (Enumeration  Enum_Val_Par, Enumeration *Enum_Ref_Par);
  89:../src/benchmark.c **** void Proc_7 (One_Fifty Int_1_Par_Val,
  90:../src/benchmark.c ****     One_Fifty Int_2_Par_Val,
  91:../src/benchmark.c ****     One_Fifty *Int_Par_Ref);
  92:../src/benchmark.c **** void Proc_8 (Arr_1_Dim Arr_1_Par_Ref,
  93:../src/benchmark.c ****     Arr_2_Dim Arr_2_Par_Ref,
  94:../src/benchmark.c ****     int Int_1_Par_Val,
  95:../src/benchmark.c ****     int Int_2_Par_Val);
  96:../src/benchmark.c **** 
  97:../src/benchmark.c **** Enumeration Func_1 (Capital_Letter Ch_1_Par_Val, Capital_Letter Ch_2_Par_Val);
  98:../src/benchmark.c **** Boolean Func_2 (Str_30 Str_1_Par_Ref, Str_30 Str_2_Par_Ref);
  99:../src/benchmark.c **** Boolean Func_3 (Enumeration Enum_Par_Val);
 100:../src/benchmark.c **** 
 101:../src/benchmark.c **** 
 102:../src/benchmark.c **** /*********************************************************************
 103:../src/benchmark.c ****  ********* Global Variables:
 104:../src/benchmark.c ****  *********************************************************************/
 105:../src/benchmark.c **** 
 106:../src/benchmark.c **** Rec_Pointer     Ptr_Glob,
 107:../src/benchmark.c **** Next_Ptr_Glob;
 108:../src/benchmark.c **** int             Int_Glob;
 109:../src/benchmark.c **** Boolean         Bool_Glob;
 110:../src/benchmark.c **** char            Ch_1_Glob,
 111:../src/benchmark.c **** Ch_2_Glob;
 112:../src/benchmark.c **** int             Arr_1_Glob [50];
 113:../src/benchmark.c **** int             Arr_2_Glob [50] [50];
 114:../src/benchmark.c **** 
 115:../src/benchmark.c **** extern  int     Int_Glob;
 116:../src/benchmark.c **** extern  char    Ch_1_Glob;
 117:../src/benchmark.c **** 
 118:../src/benchmark.c **** #ifndef REG
 119:../src/benchmark.c **** Boolean Reg = false;
 120:../src/benchmark.c **** #define REG
 121:../src/benchmark.c **** /* REG becomes defined as empty */
 122:../src/benchmark.c **** /* i.e. no register variables   */
 123:../src/benchmark.c **** #else
 124:../src/benchmark.c **** Boolean Reg = true;
 125:../src/benchmark.c **** #endif
 126:../src/benchmark.c **** 
 127:../src/benchmark.c **** 
 128:../src/benchmark.c **** int int_to_a(char * str, int number)
 129:../src/benchmark.c **** {
  23              		.loc 1 129 0
  24              		.cfi_startproc
  25              		@ Function supports interworking.
  26              		@ args = 0, pretend = 0, frame = 40
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28              	.LVL0:
  29 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
 130:../src/benchmark.c ****   if(str == NULL)
  36              		.loc 1 130 0
  37 0004 006050E2 		subs	r6, r0, #0
 129:../src/benchmark.c **** {
  38              		.loc 1 129 0
  39 0008 28D04DE2 		sub	sp, sp, #40
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 129:../src/benchmark.c **** {
  42              		.loc 1 129 0
  43 000c 01C0A0E1 		mov	ip, r1
  44              		.loc 1 130 0
  45 0010 3100000A 		beq	.L10
 131:../src/benchmark.c ****     return 1;
 132:../src/benchmark.c **** 
 133:../src/benchmark.c ****   if (number > 0)
  46              		.loc 1 133 0
  47 0014 000051E3 		cmp	r1, #0
  48 0018 220000DA 		ble	.L3
  49              	.LVL1:
  50              	.LBB36:
 134:../src/benchmark.c ****     {
 135:../src/benchmark.c ****       int i;
 136:../src/benchmark.c ****       int pos = 0;
 137:../src/benchmark.c ****       int digit;
 138:../src/benchmark.c ****       int digitfound = 0;
 139:../src/benchmark.c ****       const int units[] =
  51              		.loc 1 139 0
  52 001c C0509FE5 		ldr	r5, .L17
  53 0020 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
  54              	.LVL2:
  55 0024 0D40A0E1 		mov	r4, sp
  56 0028 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
  57 002c 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
  58 0030 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
  59 0034 030095E8 		ldmia	r5, {r0, r1}
  60              	.LBE36:
 138:../src/benchmark.c ****       int digitfound = 0;
  61              		.loc 1 138 0
  62 0038 0020A0E3 		mov	r2, #0
  63              	.LBB37:
  64              		.loc 1 139 0
  65 003c 030084E8 		stmia	r4, {r0, r1}
  66              	.LVL3:
 128:../src/benchmark.c **** int int_to_a(char * str, int number)
  67              		.loc 1 128 0
  68 0040 04104DE2 		sub	r1, sp, #4
  69 0044 24008DE2 		add	r0, sp, #36
  70              	.LBE37:
 136:../src/benchmark.c ****       int pos = 0;
  71              		.loc 1 136 0
  72 0048 0240A0E1 		mov	r4, r2
  73              	.LVL4:
  74              	.L8:
  75              	.LBB38:
 140:../src/benchmark.c ****           { 1000000000,
 141:../src/benchmark.c ****               100000000,
 142:../src/benchmark.c ****               10000000,
 143:../src/benchmark.c ****               1000000,
 144:../src/benchmark.c ****               100000,
 145:../src/benchmark.c ****               10000,
 146:../src/benchmark.c ****               1000,
 147:../src/benchmark.c ****               100,
 148:../src/benchmark.c ****               10,
 149:../src/benchmark.c ****               1};
 150:../src/benchmark.c ****       int unit;
 151:../src/benchmark.c **** 
 152:../src/benchmark.c **** 
 153:../src/benchmark.c **** 
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 155:../src/benchmark.c ****         {
 156:../src/benchmark.c ****           unit  = units[i];
  76              		.loc 1 156 0
  77 004c 0430B1E5 		ldr	r3, [r1, #4]!
  78              	.LVL5:
 157:../src/benchmark.c ****           digit = 0;
 158:../src/benchmark.c **** 
 159:../src/benchmark.c ****           while (number >= unit)
  79              		.loc 1 159 0
  80 0050 0C0053E1 		cmp	r3, ip
  81 0054 0F0000CA 		bgt	.L4
  82 0058 0020A0E3 		mov	r2, #0
  83              	.LVL6:
  84              	.L5:
 160:../src/benchmark.c ****             {
 161:../src/benchmark.c ****               digit++;
 162:../src/benchmark.c ****               number -= unit;
  85              		.loc 1 162 0
  86 005c 0CC063E0 		rsb	ip, r3, ip
  87              	.LVL7:
 159:../src/benchmark.c ****           while (number >= unit)
  88              		.loc 1 159 0
  89 0060 0C0053E1 		cmp	r3, ip
 161:../src/benchmark.c ****               digit++;
  90              		.loc 1 161 0
  91 0064 012082E2 		add	r2, r2, #1
  92              	.LVL8:
 159:../src/benchmark.c ****           while (number >= unit)
  93              		.loc 1 159 0
  94 0068 FBFFFFDA 		ble	.L5
  95              	.LVL9:
  96              	.L6:
 163:../src/benchmark.c ****             }
 164:../src/benchmark.c **** 
 165:../src/benchmark.c ****           if (digit != 0) digitfound = 1;
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
  97              		.loc 1 166 0 discriminator 1
  98 006c 302082E2 		add	r2, r2, #48
  99 0070 0420C6E7 		strb	r2, [r6, r4]
 100 0074 0120A0E3 		mov	r2, #1
 101 0078 024084E0 		add	r4, r4, r2
 102              	.LVL10:
 103              	.L7:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 104              		.loc 1 154 0
 105 007c 000051E1 		cmp	r1, r0
 106 0080 F1FFFF1A 		bne	.L8
 167:../src/benchmark.c ****         }
 168:../src/benchmark.c ****       str[pos] = '\0';
 107              		.loc 1 168 0
 108 0084 0000A0E3 		mov	r0, #0
 109 0088 0400C6E7 		strb	r0, [r6, r4]
 110              	.LVL11:
 111              	.L2:
 112              	.LBE38:
 169:../src/benchmark.c ****     }
 170:../src/benchmark.c ****   else if (number == 0)
 171:../src/benchmark.c ****     {
 172:../src/benchmark.c ****       str[0] = '0';
 173:../src/benchmark.c ****       str[1] = '\0';
 174:../src/benchmark.c ****     }
 175:../src/benchmark.c ****   else
 176:../src/benchmark.c ****     {
 177:../src/benchmark.c ****       str[0] = '-';
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 179:../src/benchmark.c ****     }
 180:../src/benchmark.c **** 
 181:../src/benchmark.c ****   return 0;
 182:../src/benchmark.c **** }
 113              		.loc 1 182 0
 114 008c 28D08DE2 		add	sp, sp, #40
 115 0090 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 116 0094 1EFF2FE1 		bx	lr
 117              	.LVL12:
 118              	.L4:
 119              	.LBB39:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 120              		.loc 1 166 0
 121 0098 000052E3 		cmp	r2, #0
 122 009c F6FFFF0A 		beq	.L7
 123 00a0 0020A0E3 		mov	r2, #0
 124              	.LVL13:
 125 00a4 F0FFFFEA 		b	.L6
 126              	.LVL14:
 127              	.L3:
 128              	.LBE39:
 170:../src/benchmark.c ****   else if (number == 0)
 129              		.loc 1 170 0
 130 00a8 0400001A 		bne	.L9
 172:../src/benchmark.c ****       str[0] = '0';
 131              		.loc 1 172 0
 132 00ac 3030A0E3 		mov	r3, #48
 133 00b0 0030C6E5 		strb	r3, [r6, #0]
 173:../src/benchmark.c ****       str[1] = '\0';
 134              		.loc 1 173 0
 135 00b4 0110C6E5 		strb	r1, [r6, #1]
 181:../src/benchmark.c ****   return 0;
 136              		.loc 1 181 0
 137 00b8 0100A0E1 		mov	r0, r1
 138              	.LVL15:
 139 00bc F2FFFFEA 		b	.L2
 140              	.LVL16:
 141              	.L9:
 142              	.LBB40:
 143              	.LBB41:
 177:../src/benchmark.c ****       str[0] = '-';
 144              		.loc 1 177 0
 145 00c0 0600A0E1 		mov	r0, r6
 146              	.LVL17:
 147 00c4 2D30A0E3 		mov	r3, #45
 148 00c8 0130C0E4 		strb	r3, [r0], #1
 149              	.LVL18:
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 150              		.loc 1 178 0
 151 00cc 001061E2 		rsb	r1, r1, #0
 152              	.LVL19:
 153 00d0 FEFFFFEB 		bl	int_to_a
 154              	.LVL20:
 155 00d4 0000A0E3 		mov	r0, #0
 156 00d8 EBFFFFEA 		b	.L2
 157              	.LVL21:
 158              	.L10:
 159              	.LBE41:
 160              	.LBE40:
 131:../src/benchmark.c ****     return 1;
 161              		.loc 1 131 0
 162 00dc 0100A0E3 		mov	r0, #1
 163              	.LVL22:
 164 00e0 E9FFFFEA 		b	.L2
 165              	.L18:
 166              		.align	2
 167              	.L17:
 168 00e4 00000000 		.word	.LANCHOR0
 169              		.cfi_endproc
 170              	.LFE0:
 172              		.section	.text.Proc_1,"ax",%progbits
 173              		.align	2
 174              		.global	Proc_1
 176              	Proc_1:
 177              	.LFB3:
 183:../src/benchmark.c **** 
 184:../src/benchmark.c **** 
 185:../src/benchmark.c **** 
 186:../src/benchmark.c **** void start_benchmark(void)
 187:../src/benchmark.c **** {
 188:../src/benchmark.c ****   dhrystone();
 189:../src/benchmark.c **** }
 190:../src/benchmark.c **** 
 191:../src/benchmark.c **** 
 192:../src/benchmark.c **** 
 193:../src/benchmark.c **** int dhrystone (void)
 194:../src/benchmark.c **** /*****/
 195:../src/benchmark.c **** 
 196:../src/benchmark.c **** /* main program, corresponds to procedures        */
 197:../src/benchmark.c **** /* Main and Proc_0 in the Ada version             */
 198:../src/benchmark.c **** {
 199:../src/benchmark.c ****   One_Fifty       Int_1_Loc;
 200:../src/benchmark.c ****   REG One_Fifty   Int_2_Loc;
 201:../src/benchmark.c ****   One_Fifty       Int_3_Loc;
 202:../src/benchmark.c ****   REG char        Ch_Index;
 203:../src/benchmark.c ****   Enumeration     Enum_Loc;
 204:../src/benchmark.c ****   Str_30          Str_1_Loc;
 205:../src/benchmark.c ****   Str_30          Str_2_Loc;
 206:../src/benchmark.c ****   REG int         Run_Index;
 207:../src/benchmark.c ****   REG int         loops;
 208:../src/benchmark.c **** 
 209:../src/benchmark.c ****   char buffer[15];
 210:../src/benchmark.c ****   unsigned int ms;
 211:../src/benchmark.c **** 
 212:../src/benchmark.c ****   /* Initializations */
 213:../src/benchmark.c **** 
 214:../src/benchmark.c ****   Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 216:../src/benchmark.c **** 
 217:../src/benchmark.c ****   Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
 218:../src/benchmark.c ****   Ptr_Glob->Discr                       = Ident_1;
 219:../src/benchmark.c ****   Ptr_Glob->variant.var_1.Enum_Comp     = Ident_3;
 220:../src/benchmark.c ****   Ptr_Glob->variant.var_1.Int_Comp      = 40;
 221:../src/benchmark.c ****   strcpy (Ptr_Glob->variant.var_1.Str_Comp,
 222:../src/benchmark.c ****       "DHRYSTONE PROGRAM, SOME STRING");
 223:../src/benchmark.c ****   strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
 224:../src/benchmark.c **** 
 225:../src/benchmark.c ****   Arr_2_Glob [8][7] = 10;
 226:../src/benchmark.c ****   /* Was missing in published program. Without this statement,    */
 227:../src/benchmark.c ****   /* Arr_2_Glob [8][7] would have an undefined value.             */
 228:../src/benchmark.c ****   /* Warning: With 16-Bit processors and Number_Of_Runs > 32000,  */
 229:../src/benchmark.c ****   /* overflow may occur for this array element.                   */
 230:../src/benchmark.c **** 
 231:../src/benchmark.c ****   loops = 5000000;
 232:../src/benchmark.c **** 
 233:../src/benchmark.c ****   puts_UART ("\n");
 234:../src/benchmark.c ****   puts_UART ("Dhrystone Benchmark, Version 2.1 (Language: C)\n");
 235:../src/benchmark.c ****   puts_UART ("\n");
 236:../src/benchmark.c **** 
 237:../src/benchmark.c **** 
 238:../src/benchmark.c **** 
 239:../src/benchmark.c **** 
 240:../src/benchmark.c ****   /***************/
 241:../src/benchmark.c ****   /* Start timer */
 242:../src/benchmark.c ****   /***************/
 243:../src/benchmark.c **** 
 244:../src/benchmark.c ****   do
 245:../src/benchmark.c ****     {
 246:../src/benchmark.c **** 
 247:../src/benchmark.c ****       puts_UART ("The number of runs through the benchmark: ");
 248:../src/benchmark.c ****       int_to_a( buffer, loops );
 249:../src/benchmark.c ****       puts_UART( buffer );
 250:../src/benchmark.c ****       puts_UART ("\n");
 251:../src/benchmark.c **** 
 252:../src/benchmark.c ****       // RESET TIMER ***************************************************
 253:../src/benchmark.c ****       reset_counter();
 254:../src/benchmark.c **** 
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 256:../src/benchmark.c ****         {
 257:../src/benchmark.c **** 
 258:../src/benchmark.c ****           Proc_5();
 259:../src/benchmark.c ****           Proc_4();
 260:../src/benchmark.c ****           /* Ch_1_Glob == 'A', Ch_2_Glob == 'B', Bool_Glob == true */
 261:../src/benchmark.c ****           Int_1_Loc = 2;
 262:../src/benchmark.c ****           Int_2_Loc = 3;
 263:../src/benchmark.c ****           strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
 264:../src/benchmark.c ****           Enum_Loc = Ident_2;
 265:../src/benchmark.c ****           Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
 266:../src/benchmark.c ****           /* Bool_Glob == 1 */
 267:../src/benchmark.c ****           while (Int_1_Loc < Int_2_Loc)  /* loop body executed once */
 268:../src/benchmark.c ****             {
 269:../src/benchmark.c ****               Int_3_Loc = 5 * Int_1_Loc - Int_2_Loc;
 270:../src/benchmark.c ****               /* Int_3_Loc == 7 */
 271:../src/benchmark.c ****               Proc_7 (Int_1_Loc, Int_2_Loc, &Int_3_Loc);
 272:../src/benchmark.c ****               /* Int_3_Loc == 7 */
 273:../src/benchmark.c ****               Int_1_Loc += 1;
 274:../src/benchmark.c ****             } /* while */
 275:../src/benchmark.c ****           /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
 276:../src/benchmark.c ****           Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
 277:../src/benchmark.c ****           /* Int_Glob == 5 */
 278:../src/benchmark.c ****           Proc_1 (Ptr_Glob);
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 280:../src/benchmark.c ****             /* loop body executed twice */
 281:../src/benchmark.c ****             {
 282:../src/benchmark.c ****               if (Enum_Loc == Func_1 (Ch_Index, 'C'))
 283:../src/benchmark.c ****                 /* then, not executed */
 284:../src/benchmark.c ****                 {
 285:../src/benchmark.c ****                   Proc_6 (Ident_1, &Enum_Loc);
 286:../src/benchmark.c ****                   strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
 287:../src/benchmark.c ****                   Int_2_Loc = Run_Index;
 288:../src/benchmark.c ****                   Int_Glob = Run_Index;
 289:../src/benchmark.c ****                 }
 290:../src/benchmark.c ****             }
 291:../src/benchmark.c ****           /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
 292:../src/benchmark.c ****           Int_2_Loc = Int_2_Loc * Int_1_Loc;
 293:../src/benchmark.c ****           Int_1_Loc = Int_2_Loc / Int_3_Loc;
 294:../src/benchmark.c ****           Int_2_Loc = 7 * (Int_2_Loc - Int_3_Loc) - Int_1_Loc;
 295:../src/benchmark.c ****           /* Int_1_Loc == 1, Int_2_Loc == 13, Int_3_Loc == 7 */
 296:../src/benchmark.c ****           Proc_2 (&Int_1_Loc);
 297:../src/benchmark.c ****           /* Int_1_Loc == 5 */
 298:../src/benchmark.c **** 
 299:../src/benchmark.c ****         } /* loop "for Run_Index" */
 300:../src/benchmark.c **** 
 301:../src/benchmark.c ****       // READ TIMER ***************************************************
 302:../src/benchmark.c ****       ms = read_counter();
 303:../src/benchmark.c **** 
 304:../src/benchmark.c ****       if(ms < SMALLTIME)
 305:../src/benchmark.c ****         {
 306:../src/benchmark.c ****           loops *= 2;
 307:../src/benchmark.c ****           Arr_2_Glob [8][7] = 10;
 308:../src/benchmark.c ****         }
 309:../src/benchmark.c ****     } while(ms < SMALLTIME);
 310:../src/benchmark.c **** 
 311:../src/benchmark.c **** 
 312:../src/benchmark.c ****   #define CHECK_RESULTS
 313:../src/benchmark.c **** #ifdef CHECK_RESULTS
 314:../src/benchmark.c ****   puts_UART ("Execution ends\n");
 315:../src/benchmark.c ****   puts_UART ("\n");
 316:../src/benchmark.c ****   puts_UART ("Final values of the variables used in the benchmark:\n");
 317:../src/benchmark.c ****   puts_UART ("\n");
 318:../src/benchmark.c ****   puts_UART ("Int_Glob:            %d\n");
 319:../src/benchmark.c ****   int_to_a(buffer, Int_Glob );
 320:../src/benchmark.c ****   puts_UART( buffer );
 321:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 322:../src/benchmark.c ****   int_to_a(buffer, 5);
 323:../src/benchmark.c ****   puts_UART( buffer );
 324:../src/benchmark.c ****   puts_UART ("Bool_Glob:           %d\n");
 325:../src/benchmark.c ****   int_to_a(buffer, Bool_Glob);
 326:../src/benchmark.c ****   puts_UART( buffer );
 327:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 328:../src/benchmark.c ****   int_to_a(buffer, 1);
 329:../src/benchmark.c ****   puts_UART( buffer );
 330:../src/benchmark.c ****   puts_UART ("Ch_1_Glob:           %c\n");
 331:../src/benchmark.c ****   int_to_a(buffer, Ch_1_Glob);
 332:../src/benchmark.c ****   puts_UART( buffer );
 333:../src/benchmark.c ****   puts_UART ("        should be:   %c\n");
 334:../src/benchmark.c ****   puts_UART( "A" );
 335:../src/benchmark.c ****   puts_UART ("Ch_2_Glob:           %c\n" );
 336:../src/benchmark.c ****   int_to_a(buffer, Ch_2_Glob);
 337:../src/benchmark.c ****   puts_UART( buffer );
 338:../src/benchmark.c ****   puts_UART ("        should be:   %c\n" );
 339:../src/benchmark.c ****   puts_UART( "B" );
 340:../src/benchmark.c ****   puts_UART ("Arr_1_Glob[8]:       %d\n");
 341:../src/benchmark.c ****   int_to_a(buffer, Arr_1_Glob[8]);
 342:../src/benchmark.c ****   puts_UART( buffer );
 343:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 344:../src/benchmark.c ****   int_to_a(buffer, 7);
 345:../src/benchmark.c ****   puts_UART( buffer );
 346:../src/benchmark.c ****   puts_UART ("Arr_2_Glob[8][7]:    %d\n");
 347:../src/benchmark.c ****   int_to_a(buffer, Arr_2_Glob[8][7]);
 348:../src/benchmark.c ****   puts_UART( buffer );
 349:../src/benchmark.c ****   puts_UART ("        should be:   loops + 10\n");
 350:../src/benchmark.c ****   puts_UART ("Ptr_Glob->\n");
 351:../src/benchmark.c ****   puts_UART ("  Ptr_Comp:          %d\n");
 352:../src/benchmark.c ****   int_to_a(buffer, (int) Ptr_Glob->Ptr_Comp);
 353:../src/benchmark.c ****   puts_UART( buffer );
 354:../src/benchmark.c ****   puts_UART ("        should be:   (implementation-dependent)\n");
 355:../src/benchmark.c ****   puts_UART ("  Discr:             %d\n");
 356:../src/benchmark.c ****   int_to_a(buffer, Ptr_Glob->Discr);
 357:../src/benchmark.c ****   puts_UART( buffer );
 358:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 359:../src/benchmark.c ****   puts_UART( "0" );
 360:../src/benchmark.c ****   puts_UART ("  Enum_Comp:         %d\n");
 361:../src/benchmark.c ****   int_to_a(buffer, Ptr_Glob->variant.var_1.Enum_Comp);
 362:../src/benchmark.c ****   puts_UART( buffer );
 363:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 364:../src/benchmark.c ****   int_to_a(buffer, 2);
 365:../src/benchmark.c ****   puts_UART( buffer );
 366:../src/benchmark.c ****   puts_UART ("  Int_Comp:          %d\n");
 367:../src/benchmark.c ****   int_to_a(buffer,  Ptr_Glob->variant.var_1.Int_Comp);
 368:../src/benchmark.c ****   puts_UART( buffer );
 369:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 370:../src/benchmark.c ****   int_to_a(buffer, 17);
 371:../src/benchmark.c ****   puts_UART( buffer );
 372:../src/benchmark.c ****   puts_UART ("  Str_Comp:          %s\n");
 373:../src/benchmark.c ****   puts_UART( Ptr_Glob->variant.var_1.Str_Comp );
 374:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
 375:../src/benchmark.c ****   puts_UART ("Next_Ptr_Glob->\n");
 376:../src/benchmark.c ****   puts_UART ("  Ptr_Comp:          %d\n");
 377:../src/benchmark.c ****   int_to_a(buffer, (int) Next_Ptr_Glob->Ptr_Comp);
 378:../src/benchmark.c ****   puts_UART( buffer );
 379:../src/benchmark.c ****   puts_UART ("        should be:   (implementation-dependent), same as above\n");
 380:../src/benchmark.c ****   puts_UART ("  Discr:             %d\n");
 381:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->Discr);
 382:../src/benchmark.c ****   puts_UART( buffer );
 383:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 384:../src/benchmark.c ****   int_to_a(buffer, 0);
 385:../src/benchmark.c ****   puts_UART( buffer );
 386:../src/benchmark.c ****   puts_UART ("  Enum_Comp:         %d\n");
 387:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->variant.var_1.Enum_Comp);
 388:../src/benchmark.c ****   puts_UART( buffer );
 389:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 390:../src/benchmark.c ****   int_to_a(buffer, 1);
 391:../src/benchmark.c ****   puts_UART( buffer );
 392:../src/benchmark.c ****   puts_UART ("  Int_Comp:          %d\n");
 393:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->variant.var_1.Int_Comp);
 394:../src/benchmark.c ****   puts_UART( buffer );
 395:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 396:../src/benchmark.c ****   int_to_a(buffer, 18);
 397:../src/benchmark.c ****   puts_UART( buffer );
 398:../src/benchmark.c ****   puts_UART ("  Str_Comp:          %s\n");
 399:../src/benchmark.c ****   puts_UART ( Next_Ptr_Glob->variant.var_1.Str_Comp);
 400:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
 401:../src/benchmark.c ****   puts_UART ("Int_1_Loc:           %d\n");
 402:../src/benchmark.c ****   int_to_a(buffer, Int_1_Loc);
 403:../src/benchmark.c ****   puts_UART( buffer );
 404:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 405:../src/benchmark.c ****   int_to_a(buffer, 5);
 406:../src/benchmark.c ****   puts_UART( buffer );
 407:../src/benchmark.c ****   puts_UART ("Int_2_Loc:           %d\n" );
 408:../src/benchmark.c ****   int_to_a(buffer, Int_2_Loc);
 409:../src/benchmark.c ****   puts_UART( buffer );
 410:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 411:../src/benchmark.c ****   int_to_a(buffer, 13);
 412:../src/benchmark.c ****   puts_UART( buffer );
 413:../src/benchmark.c ****   puts_UART ("Int_3_Loc:           %d\n");
 414:../src/benchmark.c ****   int_to_a(buffer, Int_3_Loc);
 415:../src/benchmark.c ****   puts_UART( buffer );
 416:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 417:../src/benchmark.c ****   int_to_a(buffer, 7);
 418:../src/benchmark.c ****   puts_UART( buffer );
 419:../src/benchmark.c ****   puts_UART ("Enum_Loc:            %d\n");
 420:../src/benchmark.c ****   int_to_a(buffer, Enum_Loc);
 421:../src/benchmark.c ****   puts_UART( buffer );
 422:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 423:../src/benchmark.c ****   int_to_a(buffer, 1);
 424:../src/benchmark.c ****   puts_UART( buffer );
 425:../src/benchmark.c ****   puts_UART ("Str_1_Loc:           %s\n");
 426:../src/benchmark.c ****   puts_UART( Str_1_Loc );
 427:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, 1'ST STRING\n");
 428:../src/benchmark.c ****   puts_UART ("Str_2_Loc:           %s\n");
 429:../src/benchmark.c ****   puts_UART( Str_2_Loc );
 430:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, 2'ND STRING\n");
 431:../src/benchmark.c ****   puts_UART ("\n");
 432:../src/benchmark.c **** #endif
 433:../src/benchmark.c **** 
 434:../src/benchmark.c ****   puts_UART("Test runned successfully !!!\n");
 435:../src/benchmark.c **** 
 436:../src/benchmark.c ****   puts_UART ("LOOPS: ");
 437:../src/benchmark.c ****   int_to_a( buffer, loops );
 438:../src/benchmark.c ****   puts_UART( buffer );
 439:../src/benchmark.c ****   puts_UART ("\n");
 440:../src/benchmark.c **** 
 441:../src/benchmark.c ****   puts_UART ("TIME : ");
 442:../src/benchmark.c ****   int_to_a( buffer, ms );
 443:../src/benchmark.c ****   puts_UART( buffer );
 444:../src/benchmark.c ****   puts_UART ("\n");
 445:../src/benchmark.c **** 
 446:../src/benchmark.c ****   return 0;
 447:../src/benchmark.c **** }
 448:../src/benchmark.c **** 
 449:../src/benchmark.c **** 
 450:../src/benchmark.c **** void Proc_1 (Rec_Pointer Ptr_Val_Par)
 451:../src/benchmark.c **** /******************/
 452:../src/benchmark.c **** /* executed once */
 453:../src/benchmark.c **** {
 178              		.loc 1 453 0
 179              		.cfi_startproc
 180              		@ Function supports interworking.
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL23:
 185 0000 F0052DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl}
 186              	.LCFI2:
 187              		.cfi_def_cfa_offset 24
 188              		.cfi_offset 4, -24
 189              		.cfi_offset 5, -20
 190              		.cfi_offset 6, -16
 191              		.cfi_offset 7, -12
 192              		.cfi_offset 8, -8
 193              		.cfi_offset 10, -4
 454:../src/benchmark.c ****   REG Rec_Pointer Next_Record = Ptr_Val_Par->Ptr_Comp;
 455:../src/benchmark.c ****   /* == Ptr_Glob_Next */
 456:../src/benchmark.c ****   /* Local variable, initialized with Ptr_Val_Par->Ptr_Comp,    */
 457:../src/benchmark.c ****   /* corresponds to "rename" in Ada, "with" in Pascal           */
 458:../src/benchmark.c **** 
 459:../src/benchmark.c ****   structassign (*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob);
 194              		.loc 1 459 0
 195 0004 08719FE5 		ldr	r7, .L33
 196 0008 008097E5 		ldr	r8, [r7, #0]
 454:../src/benchmark.c ****   REG Rec_Pointer Next_Record = Ptr_Val_Par->Ptr_Comp;
 197              		.loc 1 454 0
 198 000c 005090E5 		ldr	r5, [r0, #0]
 199              	.LVL24:
 200              		.loc 1 459 0
 201 0010 0840A0E1 		mov	r4, r8
 453:../src/benchmark.c **** {
 202              		.loc 1 453 0
 203 0014 0060A0E1 		mov	r6, r0
 204              		.loc 1 459 0
 205 0018 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 206              	.LVL25:
 207 001c 05C0A0E1 		mov	ip, r5
 208 0020 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 209 0024 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 210 0028 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 460:../src/benchmark.c ****   Ptr_Val_Par->variant.var_1.Int_Comp = 5;
 461:../src/benchmark.c ****   Next_Record->variant.var_1.Int_Comp = Ptr_Val_Par->variant.var_1.Int_Comp;
 462:../src/benchmark.c ****   Next_Record->Ptr_Comp = Ptr_Val_Par->Ptr_Comp;
 211              		.loc 1 462 0
 212 002c 00A096E5 		ldr	sl, [r6, #0]
 459:../src/benchmark.c ****   structassign (*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob);
 213              		.loc 1 459 0
 214 0030 0F0094E8 		ldmia	r4, {r0, r1, r2, r3}
 215 0034 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
 216              		.loc 1 462 0
 217 0038 00A085E5 		str	sl, [r5, #0]
 218              	.LVL26:
 219              	.LBB56:
 220              	.LBB57:
 463:../src/benchmark.c ****   Proc_3 (&Next_Record->Ptr_Comp);
 464:../src/benchmark.c ****   /* Ptr_Val_Par->Ptr_Comp->Ptr_Comp == Ptr_Glob->Ptr_Comp */
 465:../src/benchmark.c ****   if (Next_Record->Discr == Ident_1)
 466:../src/benchmark.c ****     /* then, executed */
 467:../src/benchmark.c ****     {
 468:../src/benchmark.c ****       Next_Record->variant.var_1.Int_Comp = 6;
 469:../src/benchmark.c ****       Proc_6 (Ptr_Val_Par->variant.var_1.Enum_Comp,
 470:../src/benchmark.c ****           &Next_Record->variant.var_1.Enum_Comp);
 471:../src/benchmark.c ****       Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
 472:../src/benchmark.c ****       Proc_7 (Next_Record->variant.var_1.Int_Comp, 10,
 473:../src/benchmark.c ****           &Next_Record->variant.var_1.Int_Comp);
 474:../src/benchmark.c ****     }
 475:../src/benchmark.c ****   else /* not executed */
 476:../src/benchmark.c ****     structassign (*Ptr_Val_Par, *Ptr_Val_Par->Ptr_Comp);
 477:../src/benchmark.c **** } /* Proc_1 */
 478:../src/benchmark.c **** 
 479:../src/benchmark.c **** 
 480:../src/benchmark.c **** void Proc_2 (One_Fifty *Int_Par_Ref)
 481:../src/benchmark.c **** /******************/
 482:../src/benchmark.c **** /* executed once */
 483:../src/benchmark.c **** /* *Int_Par_Ref == 1, becomes 4 */
 484:../src/benchmark.c **** {
 485:../src/benchmark.c ****   One_Fifty  Int_Loc;
 486:../src/benchmark.c ****   Enumeration   Enum_Loc;
 487:../src/benchmark.c **** 
 488:../src/benchmark.c ****   Int_Loc = *Int_Par_Ref + 10;
 489:../src/benchmark.c ****   do /* executed once */
 490:../src/benchmark.c ****     if (Ch_1_Glob == 'A')
 491:../src/benchmark.c ****       /* then, executed */
 492:../src/benchmark.c ****       {
 493:../src/benchmark.c ****         Int_Loc -= 1;
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 495:../src/benchmark.c ****         Enum_Loc = Ident_1;
 496:../src/benchmark.c ****       } /* if */
 497:../src/benchmark.c ****   while (Enum_Loc != Ident_1); /* true */
 498:../src/benchmark.c **** } /* Proc_2 */
 499:../src/benchmark.c **** 
 500:../src/benchmark.c **** 
 501:../src/benchmark.c **** void Proc_3 (Rec_Pointer *Ptr_Ref_Par)
 502:../src/benchmark.c **** /******************/
 503:../src/benchmark.c **** /* executed once */
 504:../src/benchmark.c **** /* Ptr_Ref_Par becomes Ptr_Glob */
 505:../src/benchmark.c **** {
 506:../src/benchmark.c ****   if (Ptr_Glob != NULL)
 507:../src/benchmark.c ****     /* then, executed */
 508:../src/benchmark.c ****     *Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
 221              		.loc 1 508 0
 222 003c 002098E5 		ldr	r2, [r8, #0]
 223              	.LBE57:
 224              	.LBE56:
 460:../src/benchmark.c ****   Ptr_Val_Par->variant.var_1.Int_Comp = 5;
 225              		.loc 1 460 0
 226 0040 0530A0E3 		mov	r3, #5
 227 0044 0C3086E5 		str	r3, [r6, #12]
 228              	.LBB65:
 229              	.LBB62:
 230              		.loc 1 508 0
 231 0048 002085E5 		str	r2, [r5, #0]
 509:../src/benchmark.c ****   Proc_7 (10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
 232              		.loc 1 509 0
 233 004c C4209FE5 		ldr	r2, .L33+4
 234 0050 001092E5 		ldr	r1, [r2, #0]
 235 0054 002097E5 		ldr	r2, [r7, #0]
 236              	.LVL27:
 237              	.LBE62:
 238              	.LBE65:
 461:../src/benchmark.c ****   Next_Record->variant.var_1.Int_Comp = Ptr_Val_Par->variant.var_1.Int_Comp;
 239              		.loc 1 461 0
 240 0058 0C3085E5 		str	r3, [r5, #12]
 465:../src/benchmark.c ****   if (Next_Record->Discr == Ident_1)
 241              		.loc 1 465 0
 242 005c 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 243              	.LBB66:
 244              	.LBB63:
 245              	.LBB58:
 246              	.LBB59:
 510:../src/benchmark.c **** } /* Proc_3 */
 511:../src/benchmark.c **** 
 512:../src/benchmark.c **** 
 513:../src/benchmark.c **** void Proc_4 (void) /* without parameters */
 514:../src/benchmark.c **** /*******/
 515:../src/benchmark.c **** /* executed once */
 516:../src/benchmark.c **** {
 517:../src/benchmark.c ****   Boolean Bool_Loc;
 518:../src/benchmark.c **** 
 519:../src/benchmark.c ****   Bool_Loc = Ch_1_Glob == 'A';
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 521:../src/benchmark.c ****   Ch_2_Glob = 'B';
 522:../src/benchmark.c **** } /* Proc_4 */
 523:../src/benchmark.c **** 
 524:../src/benchmark.c **** 
 525:../src/benchmark.c **** void Proc_5 (void) /* without parameters */
 526:../src/benchmark.c **** /*******/
 527:../src/benchmark.c **** /* executed once */
 528:../src/benchmark.c **** {
 529:../src/benchmark.c ****   Ch_1_Glob = 'A';
 530:../src/benchmark.c ****   Bool_Glob = false;
 531:../src/benchmark.c **** } /* Proc_5 */
 532:../src/benchmark.c **** 
 533:../src/benchmark.c **** 
 534:../src/benchmark.c **** void Proc_6 (Enumeration Enum_Val_Par, Enumeration *Enum_Ref_Par)
 535:../src/benchmark.c **** /*********************************/
 536:../src/benchmark.c **** /* executed once */
 537:../src/benchmark.c **** /* Enum_Val_Par == Ident_3, Enum_Ref_Par becomes Ident_2 */
 538:../src/benchmark.c **** {
 539:../src/benchmark.c ****   *Enum_Ref_Par = Enum_Val_Par;
 540:../src/benchmark.c ****   if (! Func_3 (Enum_Val_Par))
 541:../src/benchmark.c ****     /* then, not executed */
 542:../src/benchmark.c ****     *Enum_Ref_Par = Ident_4;
 543:../src/benchmark.c ****   switch (Enum_Val_Par)
 544:../src/benchmark.c ****   {
 545:../src/benchmark.c ****   case Ident_1:
 546:../src/benchmark.c ****     *Enum_Ref_Par = Ident_1;
 547:../src/benchmark.c ****     break;
 548:../src/benchmark.c ****   case Ident_2:
 549:../src/benchmark.c ****     if (Int_Glob > 100)
 550:../src/benchmark.c ****       *Enum_Ref_Par = Ident_1;
 551:../src/benchmark.c ****     else
 552:../src/benchmark.c ****       *Enum_Ref_Par = Ident_4;
 553:../src/benchmark.c ****     break;
 554:../src/benchmark.c ****   case Ident_3: /* executed */
 555:../src/benchmark.c ****     *Enum_Ref_Par = Ident_2;
 556:../src/benchmark.c ****     break;
 557:../src/benchmark.c ****   case Ident_4:
 558:../src/benchmark.c ****     break;
 559:../src/benchmark.c ****   case Ident_5:
 560:../src/benchmark.c ****     *Enum_Ref_Par = Ident_3;
 561:../src/benchmark.c ****     break;
 562:../src/benchmark.c ****   } /* switch */
 563:../src/benchmark.c **** } /* Proc_6 */
 564:../src/benchmark.c **** 
 565:../src/benchmark.c **** 
 566:../src/benchmark.c **** void Proc_7 (One_Fifty Int_1_Par_Val,
 567:../src/benchmark.c ****     One_Fifty Int_2_Par_Val,
 568:../src/benchmark.c ****     One_Fifty *Int_Par_Ref )
 569:../src/benchmark.c **** /**********************************************/
 570:../src/benchmark.c **** /* executed three times                                      */
 571:../src/benchmark.c **** /* first call:      Int_1_Par_Val == 2, Int_2_Par_Val == 3,  */
 572:../src/benchmark.c **** /*                  Int_Par_Ref becomes 7                    */
 573:../src/benchmark.c **** /* second call:     Int_1_Par_Val == 10, Int_2_Par_Val == 5, */
 574:../src/benchmark.c **** /*                  Int_Par_Ref becomes 17                   */
 575:../src/benchmark.c **** /* third call:      Int_1_Par_Val == 6, Int_2_Par_Val == 10, */
 576:../src/benchmark.c **** /*                  Int_Par_Ref becomes 18                   */
 577:../src/benchmark.c **** {
 578:../src/benchmark.c ****   One_Fifty Int_Loc;
 579:../src/benchmark.c **** 
 580:../src/benchmark.c ****   Int_Loc = Int_1_Par_Val + 2;
 581:../src/benchmark.c ****   *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
 247              		.loc 1 581 0
 248 0060 0C0081E2 		add	r0, r1, #12
 249              	.LBE59:
 250              	.LBE58:
 251              	.LBE63:
 252              	.LBE66:
 465:../src/benchmark.c ****   if (Next_Record->Discr == Ident_1)
 253              		.loc 1 465 0
 254 0064 000053E3 		cmp	r3, #0
 255              	.LBB67:
 256              	.LBB64:
 257              	.LBB61:
 258              	.LBB60:
 259              		.loc 1 581 0
 260 0068 0C0082E5 		str	r0, [r2, #12]
 261              	.LBE60:
 262              	.LBE61:
 263              	.LBE64:
 264              	.LBE67:
 465:../src/benchmark.c ****   if (Next_Record->Discr == Ident_1)
 265              		.loc 1 465 0
 266 006c 0900000A 		beq	.L32
 476:../src/benchmark.c ****     structassign (*Ptr_Val_Par, *Ptr_Val_Par->Ptr_Comp);
 267              		.loc 1 476 0
 268 0070 004096E5 		ldr	r4, [r6, #0]
 269 0074 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 270              	.LVL28:
 271 0078 06C0A0E1 		mov	ip, r6
 272 007c 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 273 0080 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 274 0084 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 275 0088 0F0094E8 		ldmia	r4, {r0, r1, r2, r3}
 276 008c 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
 277              	.L19:
 477:../src/benchmark.c **** } /* Proc_1 */
 278              		.loc 1 477 0
 279 0090 F005BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
 280 0094 1EFF2FE1 		bx	lr
 281              	.LVL29:
 282              	.L32:
 469:../src/benchmark.c ****       Proc_6 (Ptr_Val_Par->variant.var_1.Enum_Comp,
 283              		.loc 1 469 0
 284 0098 0830D6E5 		ldrb	r3, [r6, #8]	@ zero_extendqisi2
 285              	.LVL30:
 468:../src/benchmark.c ****       Next_Record->variant.var_1.Int_Comp = 6;
 286              		.loc 1 468 0
 287 009c 0600A0E3 		mov	r0, #6
 288              	.LBB68:
 289              	.LBB69:
 290              	.LBB70:
 291              	.LBB71:
 582:../src/benchmark.c **** } /* Proc_7 */
 583:../src/benchmark.c **** 
 584:../src/benchmark.c **** 
 585:../src/benchmark.c **** void Proc_8 (Arr_1_Dim Arr_1_Par_Ref,
 586:../src/benchmark.c ****     Arr_2_Dim Arr_2_Par_Ref,
 587:../src/benchmark.c ****     int Int_1_Par_Val,
 588:../src/benchmark.c ****     int Int_2_Par_Val)
 589:../src/benchmark.c **** /*********************************************************************/
 590:../src/benchmark.c **** /* executed once      */
 591:../src/benchmark.c **** /* Int_Par_Val_1 == 3 */
 592:../src/benchmark.c **** /* Int_Par_Val_2 == 7 */
 593:../src/benchmark.c **** {
 594:../src/benchmark.c ****   REG One_Fifty Int_Index;
 595:../src/benchmark.c ****   REG One_Fifty Int_Loc;
 596:../src/benchmark.c **** 
 597:../src/benchmark.c ****   Int_Loc = Int_1_Par_Val + 5;
 598:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
 599:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
 600:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
 601:../src/benchmark.c ****   for (Int_Index = Int_Loc; Int_Index <= Int_Loc+1; ++Int_Index)
 602:../src/benchmark.c ****     Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
 603:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
 604:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
 605:../src/benchmark.c ****   Int_Glob = 5;
 606:../src/benchmark.c **** } /* Proc_8 */
 607:../src/benchmark.c **** 
 608:../src/benchmark.c **** 
 609:../src/benchmark.c **** Enumeration Func_1 (Capital_Letter Ch_1_Par_Val, Capital_Letter Ch_2_Par_Val)
 610:../src/benchmark.c **** /*************************************************/
 611:../src/benchmark.c **** /* executed three times                                         */
 612:../src/benchmark.c **** /* first call:      Ch_1_Par_Val == 'H', Ch_2_Par_Val == 'R'    */
 613:../src/benchmark.c **** /* second call:     Ch_1_Par_Val == 'A', Ch_2_Par_Val == 'C'    */
 614:../src/benchmark.c **** /* third call:      Ch_1_Par_Val == 'B', Ch_2_Par_Val == 'C'    */
 615:../src/benchmark.c **** {
 616:../src/benchmark.c ****   Capital_Letter        Ch_1_Loc;
 617:../src/benchmark.c ****   Capital_Letter        Ch_2_Loc;
 618:../src/benchmark.c **** 
 619:../src/benchmark.c ****   Ch_1_Loc = Ch_1_Par_Val;
 620:../src/benchmark.c ****   Ch_2_Loc = Ch_1_Loc;
 621:../src/benchmark.c ****   if (Ch_2_Loc != Ch_2_Par_Val)
 622:../src/benchmark.c ****     /* then, executed */
 623:../src/benchmark.c ****     return (Ident_1);
 624:../src/benchmark.c ****   else  /* not executed */
 625:../src/benchmark.c ****     {
 626:../src/benchmark.c ****       Ch_1_Glob = Ch_1_Loc;
 627:../src/benchmark.c ****       return (Ident_2);
 628:../src/benchmark.c ****     }
 629:../src/benchmark.c **** } /* Func_1 */
 630:../src/benchmark.c **** 
 631:../src/benchmark.c **** 
 632:../src/benchmark.c **** Boolean Func_2 (Str_30  Str_1_Par_Ref, Str_30  Str_2_Par_Ref)
 633:../src/benchmark.c **** /*************************************************/
 634:../src/benchmark.c **** /* executed once */
 635:../src/benchmark.c **** /* Str_1_Par_Ref == "DHRYSTONE PROGRAM, 1'ST STRING" */
 636:../src/benchmark.c **** /* Str_2_Par_Ref == "DHRYSTONE PROGRAM, 2'ND STRING" */
 637:../src/benchmark.c **** {
 638:../src/benchmark.c ****   REG One_Thirty      Int_Loc;
 639:../src/benchmark.c ****   Capital_Letter      Ch_Loc;
 640:../src/benchmark.c **** 
 641:../src/benchmark.c ****   Int_Loc = 2;
 642:../src/benchmark.c ****   while (Int_Loc <= 2) /* loop body executed once */
 643:../src/benchmark.c ****     if (Func_1 (Str_1_Par_Ref[Int_Loc],
 644:../src/benchmark.c ****         Str_2_Par_Ref[Int_Loc+1]) == Ident_1)
 645:../src/benchmark.c ****       /* then, executed */
 646:../src/benchmark.c ****       {
 647:../src/benchmark.c ****         Ch_Loc = 'A';
 648:../src/benchmark.c ****         Int_Loc += 1;
 649:../src/benchmark.c ****       } /* if, while */
 650:../src/benchmark.c **** 
 651:../src/benchmark.c ****   if (Ch_Loc >= 'W' && Ch_Loc < 'Z')
 652:../src/benchmark.c ****     /* then, not executed */
 653:../src/benchmark.c ****     Int_Loc = 7;
 654:../src/benchmark.c ****   if (Ch_Loc == 'R')
 655:../src/benchmark.c ****     /* then, not executed */
 656:../src/benchmark.c ****     return (true);
 657:../src/benchmark.c ****   else /* executed */
 658:../src/benchmark.c ****     {
 659:../src/benchmark.c ****       if (strcmp (Str_1_Par_Ref, Str_2_Par_Ref) > 0)
 660:../src/benchmark.c ****         /* then, not executed */
 661:../src/benchmark.c ****         {
 662:../src/benchmark.c ****           Int_Loc += 7;
 663:../src/benchmark.c ****           Int_Glob = Int_Loc;
 664:../src/benchmark.c ****           return (true);
 665:../src/benchmark.c ****         }
 666:../src/benchmark.c ****       else /* executed */
 667:../src/benchmark.c ****         return (false);
 668:../src/benchmark.c ****     } /* if Ch_Loc */
 669:../src/benchmark.c **** } /* Func_2 */
 670:../src/benchmark.c **** 
 671:../src/benchmark.c **** 
 672:../src/benchmark.c **** Boolean Func_3 (Enumeration Enum_Par_Val)
 673:../src/benchmark.c **** /***************************/
 674:../src/benchmark.c **** /* executed once        */
 675:../src/benchmark.c **** /* Enum_Par_Val == Ident_3 */
 676:../src/benchmark.c **** {
 677:../src/benchmark.c ****   Enumeration Enum_Loc;
 678:../src/benchmark.c **** 
 679:../src/benchmark.c ****   Enum_Loc = Enum_Par_Val;
 680:../src/benchmark.c ****   if (Enum_Loc == Ident_3)
 292              		.loc 1 680 0
 293 00a0 020053E3 		cmp	r3, #2
 294              	.LBE71:
 295              	.LBE70:
 296              	.LBE69:
 297              	.LBE68:
 468:../src/benchmark.c ****       Next_Record->variant.var_1.Int_Comp = 6;
 298              		.loc 1 468 0
 299 00a4 0C0085E5 		str	r0, [r5, #12]
 300              	.LBB78:
 301              	.LBB76:
 539:../src/benchmark.c ****   *Enum_Ref_Par = Enum_Val_Par;
 302              		.loc 1 539 0
 303 00a8 0830C5E5 		strb	r3, [r5, #8]
 304              	.LVL31:
 305              	.LBB73:
 306              	.LBB72:
 307              		.loc 1 680 0
 308 00ac 0900000A 		beq	.L21
 309 00b0 0300A0E3 		mov	r0, #3
 310 00b4 0800C5E5 		strb	r0, [r5, #8]
 311              	.LBE72:
 312              	.LBE73:
 543:../src/benchmark.c ****   switch (Enum_Val_Par)
 313              		.loc 1 543 0
 314 00b8 040053E3 		cmp	r3, #4
 315 00bc 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 316 00c0 060000EA 		b	.L22
 317              	.L26:
 318 00c4 FC000000 		.word	.L31
 319 00c8 F4000000 		.word	.L24
 320 00cc D8000000 		.word	.L21
 321 00d0 E0000000 		.word	.L22
 322 00d4 08010000 		.word	.L25
 323              	.L21:
 555:../src/benchmark.c ****     *Enum_Ref_Par = Ident_2;
 324              		.loc 1 555 0
 325 00d8 0130A0E3 		mov	r3, #1
 326 00dc 0830C5E5 		strb	r3, [r5, #8]
 327              	.L22:
 328              	.LBE76:
 329              	.LBE78:
 471:../src/benchmark.c ****       Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
 330              		.loc 1 471 0
 331 00e0 003092E5 		ldr	r3, [r2, #0]
 332 00e4 003085E5 		str	r3, [r5, #0]
 333              	.LVL32:
 334              	.LBB79:
 335              	.LBB80:
 581:../src/benchmark.c ****   *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
 336              		.loc 1 581 0
 337 00e8 1230A0E3 		mov	r3, #18
 338 00ec 0C3085E5 		str	r3, [r5, #12]
 339 00f0 E6FFFFEA 		b	.L19
 340              	.LVL33:
 341              	.L24:
 342              	.LBE80:
 343              	.LBE79:
 344              	.LBB81:
 345              	.LBB77:
 346              	.LBB74:
 347              	.LBB75:
 549:../src/benchmark.c ****     if (Int_Glob > 100)
 348              		.loc 1 549 0
 349 00f4 640051E3 		cmp	r1, #100
 350 00f8 F8FFFFDA 		ble	.L22
 351              	.LVL34:
 352              	.L31:
 550:../src/benchmark.c ****       *Enum_Ref_Par = Ident_1;
 353              		.loc 1 550 0
 354 00fc 0030A0E3 		mov	r3, #0
 355 0100 0830C5E5 		strb	r3, [r5, #8]
 356 0104 F5FFFFEA 		b	.L22
 357              	.L25:
 358              	.LBE75:
 359              	.LBE74:
 560:../src/benchmark.c ****     *Enum_Ref_Par = Ident_3;
 360              		.loc 1 560 0
 361 0108 0230A0E3 		mov	r3, #2
 362 010c 0830C5E5 		strb	r3, [r5, #8]
 363 0110 F2FFFFEA 		b	.L22
 364              	.L34:
 365              		.align	2
 366              	.L33:
 367 0114 00000000 		.word	Ptr_Glob
 368 0118 00000000 		.word	Int_Glob
 369              	.LBE77:
 370              	.LBE81:
 371              		.cfi_endproc
 372              	.LFE3:
 374              		.section	.text.dhrystone,"ax",%progbits
 375              		.align	2
 376              		.global	dhrystone
 378              	dhrystone:
 379              	.LFB2:
 198:../src/benchmark.c **** {
 380              		.loc 1 198 0
 381              		.cfi_startproc
 382              		@ Function supports interworking.
 383              		@ args = 0, pretend = 0, frame = 136
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 386              	.LCFI3:
 387              		.cfi_def_cfa_offset 36
 388              		.cfi_offset 4, -36
 389              		.cfi_offset 5, -32
 390              		.cfi_offset 6, -28
 391              		.cfi_offset 7, -24
 392              		.cfi_offset 8, -20
 393              		.cfi_offset 9, -16
 394              		.cfi_offset 10, -12
 395              		.cfi_offset 11, -8
 396              		.cfi_offset 14, -4
 214:../src/benchmark.c ****   Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 397              		.loc 1 214 0
 398 0004 3000A0E3 		mov	r0, #48
 198:../src/benchmark.c **** {
 399              		.loc 1 198 0
 400 0008 8CD04DE2 		sub	sp, sp, #140
 401              	.LCFI4:
 402              		.cfi_def_cfa_offset 176
 214:../src/benchmark.c ****   Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 403              		.loc 1 214 0
 404 000c FEFFFFEB 		bl	malloc
 405              	.LVL35:
 406 0010 D8139FE5 		ldr	r1, .L425+156
 407 0014 0060A0E1 		mov	r6, r0
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 408              		.loc 1 215 0
 409 0018 3000A0E3 		mov	r0, #48
 214:../src/benchmark.c ****   Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 410              		.loc 1 214 0
 411 001c 006081E5 		str	r6, [r1, #0]
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 412              		.loc 1 215 0
 413 0020 FEFFFFEB 		bl	malloc
 414              	.LVL36:
 221:../src/benchmark.c ****   strcpy (Ptr_Glob->variant.var_1.Str_Comp,
 415              		.loc 1 221 0
 416 0024 28C39FE5 		ldr	ip, .L425
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 417              		.loc 1 215 0
 418 0028 0050A0E1 		mov	r5, r0
 221:../src/benchmark.c ****   strcpy (Ptr_Glob->variant.var_1.Str_Comp,
 419              		.loc 1 221 0
 420 002c 0F00BCE8 		ldmia	ip!, {r0, r1, r2, r3}
 421 0030 10E085E2 		add	lr, r5, #16
 422 0034 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 423 0038 0F009CE8 		ldmia	ip, {r0, r1, r2, r3}
 424 003c 0700AEE8 		stmia	lr!, {r0, r1, r2}
 223:../src/benchmark.c ****   strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
 425              		.loc 1 223 0
 426 0040 10439FE5 		ldr	r4, .L425+4
 221:../src/benchmark.c ****   strcpy (Ptr_Glob->variant.var_1.Str_Comp,
 427              		.loc 1 221 0
 428 0044 B230CEE0 		strh	r3, [lr], #2	@ movhi
 429 0048 2378A0E1 		mov	r7, r3, lsr #16
 223:../src/benchmark.c ****   strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
 430              		.loc 1 223 0
 431 004c 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 432 0050 20C08DE2 		add	ip, sp, #32
 433 0054 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 434 0058 0F0094E8 		ldmia	r4, {r0, r1, r2, r3}
 218:../src/benchmark.c ****   Ptr_Glob->Discr                       = Ident_1;
 435              		.loc 1 218 0
 436 005c 0040A0E3 		mov	r4, #0
 437 0060 0440C5E5 		strb	r4, [r5, #4]
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 438              		.loc 1 215 0
 439 0064 F0929FE5 		ldr	r9, .L425+8
 219:../src/benchmark.c ****   Ptr_Glob->variant.var_1.Enum_Comp     = Ident_3;
 440              		.loc 1 219 0
 441 0068 0240A0E3 		mov	r4, #2
 442 006c 0840C5E5 		strb	r4, [r5, #8]
 220:../src/benchmark.c ****   Ptr_Glob->variant.var_1.Int_Comp      = 40;
 443              		.loc 1 220 0
 444 0070 2840A0E3 		mov	r4, #40
 445 0074 0C4085E5 		str	r4, [r5, #12]
 215:../src/benchmark.c ****   Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
 446              		.loc 1 215 0
 447 0078 005089E5 		str	r5, [r9, #0]
 217:../src/benchmark.c ****   Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
 448              		.loc 1 217 0
 449 007c 006085E5 		str	r6, [r5, #0]
 221:../src/benchmark.c ****   strcpy (Ptr_Glob->variant.var_1.Str_Comp,
 450              		.loc 1 221 0
 451 0080 0070CEE5 		strb	r7, [lr, #0]
 223:../src/benchmark.c ****   strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
 452              		.loc 1 223 0
 453 0084 0700ACE8 		stmia	ip!, {r0, r1, r2}
 454 0088 B230CCE0 		strh	r3, [ip], #2	@ movhi
 225:../src/benchmark.c ****   Arr_2_Glob [8][7] = 10;
 455              		.loc 1 225 0
 456 008c CC429FE5 		ldr	r4, .L425+12
 223:../src/benchmark.c ****   strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
 457              		.loc 1 223 0
 458 0090 2338A0E1 		mov	r3, r3, lsr #16
 459 0094 0030CCE5 		strb	r3, [ip, #0]
 233:../src/benchmark.c ****   puts_UART ("\n");
 460              		.loc 1 233 0
 461 0098 F0029FE5 		ldr	r0, .L425+60
 225:../src/benchmark.c ****   Arr_2_Glob [8][7] = 10;
 462              		.loc 1 225 0
 463 009c 0A30A0E3 		mov	r3, #10
 464 00a0 5C3684E5 		str	r3, [r4, #1628]
 465              	.LVL37:
 233:../src/benchmark.c ****   puts_UART ("\n");
 466              		.loc 1 233 0
 467 00a4 FEFFFFEB 		bl	puts_UART
 468              	.LVL38:
 234:../src/benchmark.c ****   puts_UART ("Dhrystone Benchmark, Version 2.1 (Language: C)\n");
 469              		.loc 1 234 0
 470 00a8 B4029FE5 		ldr	r0, .L425+16
 471 00ac FEFFFFEB 		bl	puts_UART
 472              	.LVL39:
 231:../src/benchmark.c ****   loops = 5000000;
 473              		.loc 1 231 0
 474 00b0 B0529FE5 		ldr	r5, .L425+20
 235:../src/benchmark.c ****   puts_UART ("\n");
 475              		.loc 1 235 0
 476 00b4 D4029FE5 		ldr	r0, .L425+60
 477 00b8 FEFFFFEB 		bl	puts_UART
 478              	.LVL40:
 479 00bc 84C08DE2 		add	ip, sp, #132
 231:../src/benchmark.c ****   loops = 5000000;
 480              		.loc 1 231 0
 481 00c0 0C508DE5 		str	r5, [sp, #12]
 482 00c4 A0729FE5 		ldr	r7, .L425+24
 483 00c8 A0529FE5 		ldr	r5, .L425+28
 484 00cc 04C08DE5 		str	ip, [sp, #4]
 485              	.LBB310:
 486              	.LBB311:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 487              		.loc 1 520 0
 488 00d0 C4829FE5 		ldr	r8, .L425+72
 521:../src/benchmark.c ****   Ch_2_Glob = 'B';
 489              		.loc 1 521 0
 490 00d4 D4A29FE5 		ldr	sl, .L425+92
 491              	.LVL41:
 492              	.L51:
 493              	.LBE311:
 494              	.LBE310:
 247:../src/benchmark.c ****       puts_UART ("The number of runs through the benchmark: ");
 495              		.loc 1 247 0
 496 00d8 94029FE5 		ldr	r0, .L425+32
 497 00dc FEFFFFEB 		bl	puts_UART
 498              	.LVL42:
 499              	.LBB316:
 500              	.LBB317:
 139:../src/benchmark.c ****       const int units[] =
 501              		.loc 1 139 0
 502 00e0 1CE39FE5 		ldr	lr, .L425+176
 503 00e4 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 504 00e8 60C08DE2 		add	ip, sp, #96
 505 00ec 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 506 00f0 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 507 00f4 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 508 00f8 03009EE8 		ldmia	lr, {r0, r1}
 509              	.LBE317:
 510              	.LBE316:
 193:../src/benchmark.c **** int dhrystone (void)
 511              		.loc 1 193 0
 512 00fc 0C309DE5 		ldr	r3, [sp, #12]
 513              	.LBB322:
 514              	.LBB318:
 139:../src/benchmark.c ****       const int units[] =
 515              		.loc 1 139 0
 516 0100 03008CE8 		stmia	ip, {r0, r1}
 517              	.LVL43:
 518              	.LBE318:
 519              	.LBE322:
 138:../src/benchmark.c ****       int digitfound = 0;
 520              		.loc 1 138 0
 521 0104 0010A0E3 		mov	r1, #0
 522              	.LBB323:
 523              	.LBB319:
 193:../src/benchmark.c **** int dhrystone (void)
 524              		.loc 1 193 0
 525 0108 5C008DE2 		add	r0, sp, #92
 526              	.LBE319:
 527              	.LBE323:
 136:../src/benchmark.c ****       int pos = 0;
 528              		.loc 1 136 0
 529 010c 01C0A0E1 		mov	ip, r1
 530              	.LVL44:
 531              	.L40:
 532              	.LBB324:
 533              	.LBB320:
 156:../src/benchmark.c ****           unit  = units[i];
 534              		.loc 1 156 0
 535 0110 0420B0E5 		ldr	r2, [r0, #4]!
 536              	.LVL45:
 159:../src/benchmark.c ****           while (number >= unit)
 537              		.loc 1 159 0
 538 0114 030052E1 		cmp	r2, r3
 539 0118 890000CA 		bgt	.L36
 540 011c 0010A0E3 		mov	r1, #0
 541              	.LVL46:
 542              	.L37:
 162:../src/benchmark.c ****               number -= unit;
 543              		.loc 1 162 0
 544 0120 033062E0 		rsb	r3, r2, r3
 545              	.LVL47:
 159:../src/benchmark.c ****           while (number >= unit)
 546              		.loc 1 159 0
 547 0124 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 548              		.loc 1 161 0
 549 0128 011081E2 		add	r1, r1, #1
 550              	.LVL48:
 159:../src/benchmark.c ****           while (number >= unit)
 551              		.loc 1 159 0
 552 012c FBFFFFDA 		ble	.L37
 553              	.LVL49:
 554              	.L38:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 555              		.loc 1 166 0
 556 0130 88E08DE2 		add	lr, sp, #136
 557 0134 0C208EE0 		add	r2, lr, ip
 558              	.LVL50:
 559 0138 301081E2 		add	r1, r1, #48
 560 013c 781042E5 		strb	r1, [r2, #-120]
 561 0140 01C08CE2 		add	ip, ip, #1
 562              	.LVL51:
 563 0144 0110A0E3 		mov	r1, #1
 564              	.LVL52:
 565              	.L39:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 566              		.loc 1 154 0
 567 0148 04209DE5 		ldr	r2, [sp, #4]
 568 014c 020050E1 		cmp	r0, r2
 569 0150 EEFFFF1A 		bne	.L40
 168:../src/benchmark.c ****       str[pos] = '\0';
 570              		.loc 1 168 0
 571 0154 88308DE2 		add	r3, sp, #136
 572              	.LVL53:
 573 0158 0CC083E0 		add	ip, r3, ip
 574              	.LVL54:
 575 015c 0030A0E3 		mov	r3, #0
 576 0160 78304CE5 		strb	r3, [ip, #-120]
 577              	.LBE320:
 578              	.LBE324:
 249:../src/benchmark.c ****       puts_UART( buffer );
 579              		.loc 1 249 0
 580 0164 10008DE2 		add	r0, sp, #16
 581              	.LVL55:
 582 0168 FEFFFFEB 		bl	puts_UART
 583              	.LVL56:
 250:../src/benchmark.c ****       puts_UART ("\n");
 584              		.loc 1 250 0
 585 016c 1C029FE5 		ldr	r0, .L425+60
 586 0170 FEFFFFEB 		bl	puts_UART
 587              	.LVL57:
 253:../src/benchmark.c ****       reset_counter();
 588              		.loc 1 253 0
 589 0174 FEFFFFEB 		bl	reset_counter
 590              	.LVL58:
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 591              		.loc 1 255 0
 592 0178 01C0A0E3 		mov	ip, #1
 593 017c 08C08DE5 		str	ip, [sp, #8]
 594              	.LVL59:
 595              	.L49:
 263:../src/benchmark.c ****           strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
 596              		.loc 1 263 0
 597 0180 F0E19FE5 		ldr	lr, .L425+36
 598 0184 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 599 0188 40C08DE2 		add	ip, sp, #64
 600 018c 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 601 0190 0F009EE8 		ldmia	lr, {r0, r1, r2, r3}
 602 0194 0700ACE8 		stmia	ip!, {r0, r1, r2}
 603 0198 2210DDE5 		ldrb	r1, [sp, #34]	@ zero_extendqisi2
 604 019c 4320DDE5 		ldrb	r2, [sp, #67]	@ zero_extendqisi2
 605 01a0 020051E1 		cmp	r1, r2
 606              	.LBB325:
 607              	.LBB326:
 529:../src/benchmark.c ****   Ch_1_Glob = 'A';
 608              		.loc 1 529 0
 609 01a4 F8119FE5 		ldr	r1, .L425+80
 610 01a8 41E0A0E3 		mov	lr, #65
 611              	.LBE326:
 612              	.LBE325:
 613              	.LBB328:
 614              	.LBB312:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 615              		.loc 1 520 0
 616 01ac E8219FE5 		ldr	r2, .L425+72
 617              	.LBE312:
 618              	.LBE328:
 263:../src/benchmark.c ****           strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
 619              		.loc 1 263 0
 620 01b0 B230CCE0 		strh	r3, [ip], #2	@ movhi
 621              	.LBB329:
 622              	.LBB313:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 623              		.loc 1 520 0
 624 01b4 0160A0E3 		mov	r6, #1
 625              	.LBE313:
 626              	.LBE329:
 627              	.LBB330:
 628              	.LBB327:
 529:../src/benchmark.c ****   Ch_1_Glob = 'A';
 629              		.loc 1 529 0
 630 01b8 00E0C1E5 		strb	lr, [r1, #0]
 631              	.LVL60:
 632              	.LBE327:
 633              	.LBE330:
 634              	.LBB331:
 635              	.LBB314:
 521:../src/benchmark.c ****   Ch_2_Glob = 'B';
 636              		.loc 1 521 0
 637 01bc ECE19FE5 		ldr	lr, .L425+92
 638              	.LBE314:
 639              	.LBE331:
 263:../src/benchmark.c ****           strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
 640              		.loc 1 263 0
 641 01c0 2338A0E1 		mov	r3, r3, lsr #16
 642              	.LBB332:
 643              	.LBB315:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 644              		.loc 1 520 0
 645 01c4 006082E5 		str	r6, [r2, #0]
 521:../src/benchmark.c ****   Ch_2_Glob = 'B';
 646              		.loc 1 521 0
 647 01c8 4220A0E3 		mov	r2, #66
 648 01cc 0020CEE5 		strb	r2, [lr, #0]
 649              	.LVL61:
 650              	.LBE315:
 651              	.LBE332:
 263:../src/benchmark.c ****           strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
 652              		.loc 1 263 0
 653 01d0 0030CCE5 		strb	r3, [ip, #0]
 654              	.LVL62:
 655 01d4 5900000A 		beq	.L420
 656              	.LVL63:
 657              	.LBB333:
 658              	.LBB334:
 659:../src/benchmark.c ****       if (strcmp (Str_1_Par_Ref, Str_2_Par_Ref) > 0)
 659              		.loc 1 659 0
 660 01d8 40108DE2 		add	r1, sp, #64
 661              	.LVL64:
 662 01dc 20008DE2 		add	r0, sp, #32
 663              	.LVL65:
 664 01e0 FEFFFFEB 		bl	strcmp
 665              	.LVL66:
 666              	.LBE334:
 667              	.LBE333:
 668              	.LBB335:
 669              	.LBB336:
 600:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
 670              		.loc 1 600 0
 671 01e4 0820A0E3 		mov	r2, #8
 603:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
 672              		.loc 1 603 0
 673 01e8 5C1694E5 		ldr	r1, [r4, #1628]
 674              	.LBE336:
 675              	.LBE335:
 265:../src/benchmark.c ****           Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
 676              		.loc 1 265 0
 677 01ec 000050E3 		cmp	r0, #0
 678              	.LBB341:
 679              	.LBB337:
 598:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
 680              		.loc 1 598 0
 681 01f0 0730A0E3 		mov	r3, #7
 600:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
 682              		.loc 1 600 0
 683 01f4 982085E5 		str	r2, [r5, #152]
 602:../src/benchmark.c ****     Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
 684              		.loc 1 602 0
 685 01f8 602684E5 		str	r2, [r4, #1632]
 686 01fc 642684E5 		str	r2, [r4, #1636]
 604:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
 687              		.loc 1 604 0
 688 0200 162CA0E3 		mov	r2, #5632
 689              	.LBE337:
 690              	.LBE341:
 265:../src/benchmark.c ****           Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
 691              		.loc 1 265 0
 692 0204 00C0A0C3 		movgt	ip, #0
 693 0208 01C0A0D3 		movle	ip, #1
 694              	.LBB342:
 695              	.LBB338:
 604:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
 696              		.loc 1 604 0
 697 020c 023084E7 		str	r3, [r4, r2]
 603:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
 698              		.loc 1 603 0
 699 0210 011081E2 		add	r1, r1, #1
 598:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
 700              		.loc 1 598 0
 701 0214 203085E5 		str	r3, [r5, #32]
 599:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
 702              		.loc 1 599 0
 703 0218 243085E5 		str	r3, [r5, #36]
 704              	.LBE338:
 705              	.LBE342:
 278:../src/benchmark.c ****           Proc_1 (Ptr_Glob);
 706              		.loc 1 278 0
 707 021c 000099E5 		ldr	r0, [r9, #0]
 708              	.LBB343:
 709              	.LBB339:
 605:../src/benchmark.c ****   Int_Glob = 5;
 710              		.loc 1 605 0
 711 0220 0530A0E3 		mov	r3, #5
 712              	.LBE339:
 713              	.LBE343:
 265:../src/benchmark.c ****           Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
 714              		.loc 1 265 0
 715 0224 00C088E5 		str	ip, [r8, #0]
 716              	.LVL67:
 717              	.LBB344:
 718              	.LBB340:
 603:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
 719              		.loc 1 603 0
 720 0228 5C1684E5 		str	r1, [r4, #1628]
 605:../src/benchmark.c ****   Int_Glob = 5;
 721              		.loc 1 605 0
 722 022c 003087E5 		str	r3, [r7, #0]
 723              	.LBE340:
 724              	.LBE344:
 278:../src/benchmark.c ****           Proc_1 (Ptr_Glob);
 725              		.loc 1 278 0
 726 0230 FEFFFFEB 		bl	Proc_1
 727              	.LVL68:
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 728              		.loc 1 279 0
 729 0234 00E0DAE5 		ldrb	lr, [sl, #0]	@ zero_extendqisi2
 730 0238 40005EE3 		cmp	lr, #64
 731 023c 06B0A091 		movls	fp, r6
 732 0240 0D20A093 		movls	r2, #13
 264:../src/benchmark.c ****           Enum_Loc = Ident_2;
 733              		.loc 1 264 0
 734 0244 0B60A091 		movls	r6, fp
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 735              		.loc 1 279 0
 736 0248 2500009A 		bls	.L44
 737 024c 41C0A0E3 		mov	ip, #65
 738 0250 0320A0E3 		mov	r2, #3
 739              	.LVL69:
 740              	.L419:
 741 0254 01C08CE2 		add	ip, ip, #1
 742 0258 FFC00CE2 		and	ip, ip, #255
 743              	.LVL70:
 744 025c 0E005CE1 		cmp	ip, lr
 745 0260 1600008A 		bhi	.L423
 746              	.LVL71:
 747              	.L47:
 748              	.LBB345:
 749              	.LBB346:
 621:../src/benchmark.c ****   if (Ch_2_Loc != Ch_2_Par_Val)
 750              		.loc 1 621 0
 751 0264 43005CE3 		cmp	ip, #67
 626:../src/benchmark.c ****       Ch_1_Glob = Ch_1_Loc;
 752              		.loc 1 626 0
 753 0268 34119F05 		ldreq	r1, .L425+80
 627:../src/benchmark.c ****       return (Ident_2);
 754              		.loc 1 627 0
 755 026c 0130A003 		moveq	r3, #1
 623:../src/benchmark.c ****     return (Ident_1);
 756              		.loc 1 623 0
 757 0270 0030A013 		movne	r3, #0
 626:../src/benchmark.c ****       Ch_1_Glob = Ch_1_Loc;
 758              		.loc 1 626 0
 759 0274 00C0C105 		streqb	ip, [r1, #0]
 760              	.LBE346:
 761              	.LBE345:
 282:../src/benchmark.c ****               if (Enum_Loc == Func_1 (Ch_Index, 'C'))
 762              		.loc 1 282 0
 763 0278 060053E1 		cmp	r3, r6
 764 027c F4FFFF1A 		bne	.L419
 765              	.LVL72:
 286:../src/benchmark.c ****                   strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
 766              		.loc 1 286 0
 767 0280 F4B09FE5 		ldr	fp, .L425+40
 768 0284 0F00BBE8 		ldmia	fp!, {r0, r1, r2, r3}
 769 0288 40608DE2 		add	r6, sp, #64
 770              	.LVL73:
 771 028c 0F00A6E8 		stmia	r6!, {r0, r1, r2, r3}
 772              	.LVL74:
 773 0290 0F009BE8 		ldmia	fp, {r0, r1, r2, r3}
 774 0294 0700A6E8 		stmia	r6!, {r0, r1, r2}
 775              	.LVL75:
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 776              		.loc 1 279 0
 777 0298 01C08CE2 		add	ip, ip, #1
 286:../src/benchmark.c ****                   strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
 778              		.loc 1 286 0
 779 029c B230C6E0 		strh	r3, [r6], #2	@ movhi
 780              	.LVL76:
 288:../src/benchmark.c ****                   Int_Glob = Run_Index;
 781              		.loc 1 288 0
 782 02a0 08209DE5 		ldr	r2, [sp, #8]
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 783              		.loc 1 279 0
 784 02a4 FFC00CE2 		and	ip, ip, #255
 286:../src/benchmark.c ****                   strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
 785              		.loc 1 286 0
 786 02a8 2338A0E1 		mov	r3, r3, lsr #16
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 787              		.loc 1 279 0
 788 02ac 0E005CE1 		cmp	ip, lr
 286:../src/benchmark.c ****                   strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
 789              		.loc 1 286 0
 790 02b0 0030C6E5 		strb	r3, [r6, #0]
 791              	.LVL77:
 288:../src/benchmark.c ****                   Int_Glob = Run_Index;
 792              		.loc 1 288 0
 793 02b4 002087E5 		str	r2, [r7, #0]
 546:../src/benchmark.c ****     *Enum_Ref_Par = Ident_1;
 794              		.loc 1 546 0
 795 02b8 0060A0E3 		mov	r6, #0
 796              	.LVL78:
 279:../src/benchmark.c ****           for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
 797              		.loc 1 279 0
 798 02bc E8FFFF9A 		bls	.L47
 799              	.LVL79:
 800              	.L423:
 801 02c0 B8309FE5 		ldr	r3, .L425+44
 802 02c4 822082E0 		add	r2, r2, r2, asl #1
 803 02c8 93C2CBE0 		smull	ip, fp, r3, r2
 804 02cc C23FA0E1 		mov	r3, r2, asr #31
 805 02d0 02B08BE0 		add	fp, fp, r2
 806 02d4 072042E2 		sub	r2, r2, #7
 807 02d8 4BB163E0 		rsb	fp, r3, fp, asr #2
 808 02dc 822162E0 		rsb	r2, r2, r2, asl #3
 809 02e0 02206BE0 		rsb	r2, fp, r2
 810              	.LVL80:
 811              	.L44:
 812              	.LBB347:
 813              	.LBB348:
 490:../src/benchmark.c ****     if (Ch_1_Glob == 'A')
 814              		.loc 1 490 0
 815 02e4 B8E09FE5 		ldr	lr, .L425+80
 816 02e8 0030DEE5 		ldrb	r3, [lr, #0]	@ zero_extendqisi2
 817              	.LBE348:
 818              	.LBE347:
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 819              		.loc 1 255 0
 820 02ec 08C09DE5 		ldr	ip, [sp, #8]
 821              	.LBB352:
 822              	.LBB349:
 490:../src/benchmark.c ****     if (Ch_1_Glob == 'A')
 823              		.loc 1 490 0
 824 02f0 410053E3 		cmp	r3, #65
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 825              		.loc 1 494 0
 826 02f4 00309705 		ldreq	r3, [r7, #0]
 827              	.LBE349:
 828              	.LBE352:
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 829              		.loc 1 255 0
 830 02f8 0CE09DE5 		ldr	lr, [sp, #12]
 831              	.LBB353:
 832              	.LBB350:
 493:../src/benchmark.c ****         Int_Loc -= 1;
 833              		.loc 1 493 0
 834 02fc 09B08B02 		addeq	fp, fp, #9
 835              	.LVL81:
 836              	.LBE350:
 837              	.LBE353:
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 838              		.loc 1 255 0
 839 0300 01C08CE2 		add	ip, ip, #1
 840              	.LBB354:
 841              	.LBB351:
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 842              		.loc 1 494 0
 843 0304 0BB06300 		rsbeq	fp, r3, fp
 844              	.LVL82:
 845              	.LBE351:
 846              	.LBE354:
 255:../src/benchmark.c ****       for (Run_Index = 1; Run_Index <= loops; ++Run_Index)
 847              		.loc 1 255 0
 848 0308 0C005EE1 		cmp	lr, ip
 849 030c 08C08DE5 		str	ip, [sp, #8]
 850              	.LVL83:
 851 0310 9AFFFFAA 		bge	.L49
 852 0314 08208DE5 		str	r2, [sp, #8]
 302:../src/benchmark.c ****       ms = read_counter();
 853              		.loc 1 302 0
 854 0318 FEFFFFEB 		bl	read_counter
 855              	.LVL84:
 304:../src/benchmark.c ****       if(ms < SMALLTIME)
 856              		.loc 1 304 0
 857 031c 60309FE5 		ldr	r3, .L425+48
 858 0320 030050E1 		cmp	r0, r3
 859 0324 3700008A 		bhi	.L50
 306:../src/benchmark.c ****           loops *= 2;
 860              		.loc 1 306 0
 861 0328 0CC09DE5 		ldr	ip, [sp, #12]
 307:../src/benchmark.c ****           Arr_2_Glob [8][7] = 10;
 862              		.loc 1 307 0
 863 032c 0A30A0E3 		mov	r3, #10
 306:../src/benchmark.c ****           loops *= 2;
 864              		.loc 1 306 0
 865 0330 8CC0A0E1 		mov	ip, ip, asl #1
 866 0334 0CC08DE5 		str	ip, [sp, #12]
 867              	.LVL85:
 307:../src/benchmark.c ****           Arr_2_Glob [8][7] = 10;
 868              		.loc 1 307 0
 869 0338 5C3684E5 		str	r3, [r4, #1628]
 870 033c 65FFFFEA 		b	.L51
 871              	.LVL86:
 872              	.L420:
 873 0340 FEFFFFEA 		b	.L420
 874              	.LVL87:
 875              	.L36:
 876              	.LBB355:
 877              	.LBB321:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 878              		.loc 1 166 0
 879 0344 000051E3 		cmp	r1, #0
 880 0348 7EFFFF0A 		beq	.L39
 881 034c 0010A0E3 		mov	r1, #0
 882              	.LVL88:
 883 0350 76FFFFEA 		b	.L38
 884              	.L426:
 885              		.align	2
 886              	.L425:
 887 0354 00000000 		.word	.LC1
 888 0358 20000000 		.word	.LC2
 889 035c 00000000 		.word	Ptr_Glob
 890 0360 00000000 		.word	Arr_2_Glob
 891 0364 44000000 		.word	.LC4
 892 0368 404B4C00 		.word	5000000
 893 036c 00000000 		.word	Int_Glob
 894 0370 00000000 		.word	Arr_1_Glob
 895 0374 74000000 		.word	.LC5
 896 0378 A0000000 		.word	.LC6
 897 037c C0000000 		.word	.LC7
 898 0380 93244992 		.word	-1840700269
 899 0384 973A0000 		.word	14999
 900 0388 74040000 		.word	.LC40
 901 038c 84040000 		.word	.LC41
 902 0390 40000000 		.word	.LC3
 903 0394 BC040000 		.word	.LC42
 904 0398 FC000000 		.word	.LC9
 905 039c 00000000 		.word	Bool_Glob
 906 03a0 18010000 		.word	.LC10
 907 03a4 00000000 		.word	Ch_1_Glob
 908 03a8 50010000 		.word	.LC12
 909 03ac 54010000 		.word	.LC13
 910 03b0 00000000 		.word	Ch_2_Glob
 911 03b4 34010000 		.word	.LC11
 912 03b8 70010000 		.word	.LC14
 913 03bc 74010000 		.word	.LC15
 914 03c0 90010000 		.word	.LC16
 915 03c4 AC010000 		.word	.LC17
 916 03c8 D0010000 		.word	.LC18
 917 03cc F8010000 		.word	.LC20
 918 03d0 48020000 		.word	.LC22
 919 03d4 D8020000 		.word	.LC27
 920 03d8 DC010000 		.word	.LC19
 921 03dc EC020000 		.word	.LC28
 922 03e0 2C020000 		.word	.LC21
 923 03e4 4C020000 		.word	.LC23
 924 03e8 68020000 		.word	.LC24
 925 03ec 84020000 		.word	.LC25
 926 03f0 00000000 		.word	Next_Ptr_Glob
 927 03f4 A0020000 		.word	.LC26
 928 03f8 2C030000 		.word	.LC29
 929 03fc E0000000 		.word	.LC8
 930 0400 48030000 		.word	.LC30
 931 0404 00000000 		.word	.LANCHOR0
 932              	.LVL89:
 933              	.L50:
 934 0408 08C09DE5 		ldr	ip, [sp, #8]
 935 040c 08008DE5 		str	r0, [sp, #8]
 936              	.LBE321:
 937              	.LBE355:
 314:../src/benchmark.c ****   puts_UART ("Execution ends\n");
 938              		.loc 1 314 0
 939 0410 90001FE5 		ldr	r0, .L425+52
 940              	.LVL90:
 941 0414 00C08DE5 		str	ip, [sp, #0]
 942 0418 FEFFFFEB 		bl	puts_UART
 943              	.LVL91:
 315:../src/benchmark.c ****   puts_UART ("\n");
 944              		.loc 1 315 0
 945 041c 94001FE5 		ldr	r0, .L425+60
 946 0420 FEFFFFEB 		bl	puts_UART
 947              	.LVL92:
 316:../src/benchmark.c ****   puts_UART ("Final values of the variables used in the benchmark:\n");
 948              		.loc 1 316 0
 949 0424 A0001FE5 		ldr	r0, .L425+56
 950 0428 FEFFFFEB 		bl	puts_UART
 951              	.LVL93:
 317:../src/benchmark.c ****   puts_UART ("\n");
 952              		.loc 1 317 0
 953 042c A4001FE5 		ldr	r0, .L425+60
 954 0430 FEFFFFEB 		bl	puts_UART
 955              	.LVL94:
 318:../src/benchmark.c ****   puts_UART ("Int_Glob:            %d\n");
 956              		.loc 1 318 0
 957 0434 A8001FE5 		ldr	r0, .L425+64
 958 0438 FEFFFFEB 		bl	puts_UART
 959              	.LVL95:
 319:../src/benchmark.c ****   int_to_a(buffer, Int_Glob );
 960              		.loc 1 319 0
 961 043c 00E097E5 		ldr	lr, [r7, #0]
 962              	.LVL96:
 963              	.LBB356:
 964              	.LBB357:
 133:../src/benchmark.c ****   if (number > 0)
 965              		.loc 1 133 0
 966 0440 00005EE3 		cmp	lr, #0
 967 0444 00C09DE5 		ldr	ip, [sp, #0]
 968 0448 B90500DA 		ble	.L424
 969              	.LVL97:
 970              	.LBB358:
 139:../src/benchmark.c ****       const int units[] =
 971              		.loc 1 139 0
 972 044c 50801FE5 		ldr	r8, .L425+176
 973 0450 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 974 0454 60708DE2 		add	r7, sp, #96
 975 0458 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 976 045c 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 977 0460 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 978 0464 030098E8 		ldmia	r8, {r0, r1}
 979              	.LBE358:
 980              	.LBE357:
 981              	.LBE356:
 138:../src/benchmark.c ****       int digitfound = 0;
 982              		.loc 1 138 0
 983 0468 0020A0E3 		mov	r2, #0
 984              	.LBB375:
 985              	.LBB367:
 986              	.LBB359:
 139:../src/benchmark.c ****       const int units[] =
 987              		.loc 1 139 0
 988 046c 030087E8 		stmia	r7, {r0, r1}
 989              	.LVL98:
 193:../src/benchmark.c **** int dhrystone (void)
 990              		.loc 1 193 0
 991 0470 5C108DE2 		add	r1, sp, #92
 992              	.LBE359:
 993              	.LBE367:
 994              	.LBE375:
 136:../src/benchmark.c ****       int pos = 0;
 995              		.loc 1 136 0
 996 0474 0200A0E1 		mov	r0, r2
 997              	.LVL99:
 998              	.L56:
 999              	.LBB376:
 1000              	.LBB368:
 1001              	.LBB360:
 156:../src/benchmark.c ****           unit  = units[i];
 1002              		.loc 1 156 0
 1003 0478 0430B1E5 		ldr	r3, [r1, #4]!
 1004              	.LVL100:
 159:../src/benchmark.c ****           while (number >= unit)
 1005              		.loc 1 159 0
 1006 047c 0E0053E1 		cmp	r3, lr
 1007 0480 420500CA 		bgt	.L52
 1008 0484 0020A0E3 		mov	r2, #0
 1009              	.LVL101:
 1010              	.L53:
 162:../src/benchmark.c ****               number -= unit;
 1011              		.loc 1 162 0
 1012 0488 0EE063E0 		rsb	lr, r3, lr
 1013              	.LVL102:
 159:../src/benchmark.c ****           while (number >= unit)
 1014              		.loc 1 159 0
 1015 048c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1016              		.loc 1 161 0
 1017 0490 012082E2 		add	r2, r2, #1
 1018              	.LVL103:
 159:../src/benchmark.c ****           while (number >= unit)
 1019              		.loc 1 159 0
 1020 0494 FBFFFFDA 		ble	.L53
 1021              	.LVL104:
 1022              	.L54:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1023              		.loc 1 166 0
 1024 0498 88708DE2 		add	r7, sp, #136
 1025 049c 003087E0 		add	r3, r7, r0
 1026              	.LVL105:
 1027 04a0 302082E2 		add	r2, r2, #48
 1028 04a4 782043E5 		strb	r2, [r3, #-120]
 1029 04a8 010080E2 		add	r0, r0, #1
 1030              	.LVL106:
 1031 04ac 0120A0E3 		mov	r2, #1
 1032              	.LVL107:
 1033              	.L55:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1034              		.loc 1 154 0
 1035 04b0 04709DE5 		ldr	r7, [sp, #4]
 1036 04b4 070051E1 		cmp	r1, r7
 1037 04b8 EEFFFF1A 		bne	.L56
 168:../src/benchmark.c ****       str[pos] = '\0';
 1038              		.loc 1 168 0
 1039 04bc 88E08DE2 		add	lr, sp, #136
 1040              	.LVL108:
 1041 04c0 00008EE0 		add	r0, lr, r0
 1042              	.LVL109:
 1043 04c4 0030A0E3 		mov	r3, #0
 1044 04c8 783040E5 		strb	r3, [r0, #-120]
 1045              	.LVL110:
 1046              	.L57:
 1047              	.LBE360:
 1048              	.LBE368:
 1049              	.LBE376:
 320:../src/benchmark.c ****   puts_UART( buffer );
 1050              		.loc 1 320 0
 1051 04cc 10008DE2 		add	r0, sp, #16
 1052              	.LVL111:
 1053              	.LBB377:
 1054              	.LBB378:
 139:../src/benchmark.c ****       const int units[] =
 1055              		.loc 1 139 0
 1056 04d0 D4701FE5 		ldr	r7, .L425+176
 1057              	.LBE378:
 1058              	.LBE377:
 320:../src/benchmark.c ****   puts_UART( buffer );
 1059              		.loc 1 320 0
 1060 04d4 00C08DE5 		str	ip, [sp, #0]
 1061 04d8 FEFFFFEB 		bl	puts_UART
 1062              	.LVL112:
 321:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 1063              		.loc 1 321 0
 1064 04dc E8001FE5 		ldr	r0, .L425+168
 1065 04e0 FEFFFFEB 		bl	puts_UART
 1066              	.LVL113:
 1067              	.LBB385:
 1068              	.LBB379:
 139:../src/benchmark.c ****       const int units[] =
 1069              		.loc 1 139 0
 1070 04e4 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1071 04e8 60E08DE2 		add	lr, sp, #96
 1072 04ec 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1073 04f0 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1074 04f4 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1075 04f8 030097E8 		ldmia	r7, {r0, r1}
 1076              	.LBE379:
 1077              	.LBE385:
 1078              	.LBB386:
 1079              	.LBB369:
 1080              	.LBB361:
 136:../src/benchmark.c ****       int pos = 0;
 1081              		.loc 1 136 0
 1082 04fc 00C09DE5 		ldr	ip, [sp, #0]
 1083              	.LBE361:
 1084              	.LBE369:
 1085              	.LBE386:
 1086              	.LBB387:
 1087              	.LBB380:
 139:../src/benchmark.c ****       const int units[] =
 1088              		.loc 1 139 0
 1089 0500 03008EE8 		stmia	lr, {r0, r1}
 1090              	.LVL114:
 1091              	.LBE380:
 1092              	.LBE387:
 1093              	.LBB388:
 1094              	.LBB370:
 1095              	.LBB362:
 138:../src/benchmark.c ****       int digitfound = 0;
 1096              		.loc 1 138 0
 1097 0504 0010A0E3 		mov	r1, #0
 1098              	.LBE362:
 1099              	.LBE370:
 1100              	.LBE388:
 1101              	.LBB389:
 1102              	.LBB381:
 193:../src/benchmark.c **** int dhrystone (void)
 1103              		.loc 1 193 0
 1104 0508 5C008DE2 		add	r0, sp, #92
 1105              	.LBE381:
 1106              	.LBE389:
 1107              	.LBB390:
 1108              	.LBB371:
 1109              	.LBB363:
 1110 050c 0530A0E3 		mov	r3, #5
 136:../src/benchmark.c ****       int pos = 0;
 1111              		.loc 1 136 0
 1112 0510 01E0A0E1 		mov	lr, r1
 1113              	.LVL115:
 1114              	.L63:
 1115              	.LBE363:
 1116              	.LBE371:
 1117              	.LBE390:
 1118              	.LBB391:
 1119              	.LBB382:
 156:../src/benchmark.c ****           unit  = units[i];
 1120              		.loc 1 156 0
 1121 0514 0420B0E5 		ldr	r2, [r0, #4]!
 1122              	.LVL116:
 159:../src/benchmark.c ****           while (number >= unit)
 1123              		.loc 1 159 0
 1124 0518 020053E1 		cmp	r3, r2
 1125 051c 030500BA 		blt	.L59
 1126 0520 0010A0E3 		mov	r1, #0
 1127              	.LVL117:
 1128              	.L60:
 162:../src/benchmark.c ****               number -= unit;
 1129              		.loc 1 162 0
 1130 0524 033062E0 		rsb	r3, r2, r3
 1131              	.LVL118:
 159:../src/benchmark.c ****           while (number >= unit)
 1132              		.loc 1 159 0
 1133 0528 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 1134              		.loc 1 161 0
 1135 052c 011081E2 		add	r1, r1, #1
 1136              	.LVL119:
 159:../src/benchmark.c ****           while (number >= unit)
 1137              		.loc 1 159 0
 1138 0530 FBFFFFDA 		ble	.L60
 1139              	.LVL120:
 1140              	.L61:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1141              		.loc 1 166 0
 1142 0534 88708DE2 		add	r7, sp, #136
 1143 0538 0E2087E0 		add	r2, r7, lr
 1144              	.LVL121:
 1145 053c 301081E2 		add	r1, r1, #48
 1146 0540 781042E5 		strb	r1, [r2, #-120]
 1147 0544 01E08EE2 		add	lr, lr, #1
 1148              	.LVL122:
 1149 0548 0110A0E3 		mov	r1, #1
 1150              	.LVL123:
 1151              	.L62:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1152              		.loc 1 154 0
 1153 054c 04709DE5 		ldr	r7, [sp, #4]
 1154 0550 070050E1 		cmp	r0, r7
 1155 0554 EEFFFF1A 		bne	.L63
 168:../src/benchmark.c ****       str[pos] = '\0';
 1156              		.loc 1 168 0
 1157 0558 88108DE2 		add	r1, sp, #136
 1158              	.LVL124:
 1159 055c 0EE081E0 		add	lr, r1, lr
 1160              	.LVL125:
 1161 0560 00A0A0E3 		mov	sl, #0
 1162 0564 78A04EE5 		strb	sl, [lr, #-120]
 1163              	.LBE382:
 1164              	.LBE391:
 323:../src/benchmark.c ****   puts_UART( buffer );
 1165              		.loc 1 323 0
 1166 0568 10008DE2 		add	r0, sp, #16
 1167              	.LVL126:
 1168 056c 00C08DE5 		str	ip, [sp, #0]
 1169 0570 FEFFFFEB 		bl	puts_UART
 1170              	.LVL127:
 324:../src/benchmark.c ****   puts_UART ("Bool_Glob:           %d\n");
 1171              		.loc 1 324 0
 1172 0574 E4011FE5 		ldr	r0, .L425+68
 1173 0578 FEFFFFEB 		bl	puts_UART
 1174              	.LVL128:
 325:../src/benchmark.c ****   int_to_a(buffer, Bool_Glob);
 1175              		.loc 1 325 0
 1176 057c E8211FE5 		ldr	r2, .L425+72
 1177 0580 00E092E5 		ldr	lr, [r2, #0]
 1178              	.LVL129:
 1179              	.LBB392:
 1180              	.LBB393:
 133:../src/benchmark.c ****   if (number > 0)
 1181              		.loc 1 133 0
 1182 0584 0A005EE1 		cmp	lr, sl
 1183 0588 00C09DE5 		ldr	ip, [sp, #0]
 1184 058c 630500DA 		ble	.L64
 1185              	.LVL130:
 1186              	.LBB394:
 139:../src/benchmark.c ****       const int units[] =
 1187              		.loc 1 139 0
 1188 0590 94811FE5 		ldr	r8, .L425+176
 1189 0594 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1190 0598 60708DE2 		add	r7, sp, #96
 1191 059c 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1192 05a0 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1193 05a4 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1194 05a8 030098E8 		ldmia	r8, {r0, r1}
 1195 05ac 030087E8 		stmia	r7, {r0, r1}
 1196              	.LVL131:
 193:../src/benchmark.c **** int dhrystone (void)
 1197              		.loc 1 193 0
 1198 05b0 5C108DE2 		add	r1, sp, #92
 1199              	.LBE394:
 1200              	.LBE393:
 1201              	.LBE392:
 1202              	.LBB409:
 1203              	.LBB383:
 136:../src/benchmark.c ****       int pos = 0;
 1204              		.loc 1 136 0
 1205 05b4 0A00A0E1 		mov	r0, sl
 1206              	.LVL132:
 1207              	.L69:
 1208              	.LBE383:
 1209              	.LBE409:
 1210              	.LBB410:
 1211              	.LBB402:
 1212              	.LBB395:
 156:../src/benchmark.c ****           unit  = units[i];
 1213              		.loc 1 156 0
 1214 05b8 0430B1E5 		ldr	r3, [r1, #4]!
 1215              	.LVL133:
 159:../src/benchmark.c ****           while (number >= unit)
 1216              		.loc 1 159 0
 1217 05bc 03005EE1 		cmp	lr, r3
 1218 05c0 EE0400BA 		blt	.L65
 1219 05c4 0020A0E3 		mov	r2, #0
 1220              	.LVL134:
 1221              	.L66:
 162:../src/benchmark.c ****               number -= unit;
 1222              		.loc 1 162 0
 1223 05c8 0EE063E0 		rsb	lr, r3, lr
 1224              	.LVL135:
 159:../src/benchmark.c ****           while (number >= unit)
 1225              		.loc 1 159 0
 1226 05cc 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1227              		.loc 1 161 0
 1228 05d0 012082E2 		add	r2, r2, #1
 1229              	.LVL136:
 159:../src/benchmark.c ****           while (number >= unit)
 1230              		.loc 1 159 0
 1231 05d4 FBFFFFDA 		ble	.L66
 1232              	.LVL137:
 1233              	.L67:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1234              		.loc 1 166 0
 1235 05d8 88708DE2 		add	r7, sp, #136
 1236 05dc 003087E0 		add	r3, r7, r0
 1237              	.LVL138:
 1238 05e0 302082E2 		add	r2, r2, #48
 1239 05e4 782043E5 		strb	r2, [r3, #-120]
 1240 05e8 010080E2 		add	r0, r0, #1
 1241              	.LVL139:
 1242 05ec 01A0A0E3 		mov	sl, #1
 1243              	.LVL140:
 1244              	.L68:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1245              		.loc 1 154 0
 1246 05f0 04709DE5 		ldr	r7, [sp, #4]
 1247 05f4 070051E1 		cmp	r1, r7
 1248 05f8 EEFFFF1A 		bne	.L69
 168:../src/benchmark.c ****       str[pos] = '\0';
 1249              		.loc 1 168 0
 1250 05fc 88E08DE2 		add	lr, sp, #136
 1251              	.LVL141:
 1252 0600 00008EE0 		add	r0, lr, r0
 1253              	.LVL142:
 1254 0604 0030A0E3 		mov	r3, #0
 1255 0608 783040E5 		strb	r3, [r0, #-120]
 1256              	.LVL143:
 1257              	.L70:
 1258              	.LBE395:
 1259              	.LBE402:
 1260              	.LBE410:
 326:../src/benchmark.c ****   puts_UART( buffer );
 1261              		.loc 1 326 0
 1262 060c 10008DE2 		add	r0, sp, #16
 1263              	.LVL144:
 1264              	.LBB411:
 1265              	.LBB412:
 1266              	.LBB413:
 139:../src/benchmark.c ****       const int units[] =
 1267              		.loc 1 139 0
 1268 0610 14721FE5 		ldr	r7, .L425+176
 1269              	.LBE413:
 1270              	.LBE412:
 1271              	.LBE411:
 326:../src/benchmark.c ****   puts_UART( buffer );
 1272              		.loc 1 326 0
 1273 0614 00C08DE5 		str	ip, [sp, #0]
 1274 0618 FEFFFFEB 		bl	puts_UART
 1275              	.LVL145:
 327:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 1276              		.loc 1 327 0
 1277 061c 28021FE5 		ldr	r0, .L425+168
 1278 0620 FEFFFFEB 		bl	puts_UART
 1279              	.LVL146:
 1280              	.LBB426:
 1281              	.LBB420:
 1282              	.LBB414:
 139:../src/benchmark.c ****       const int units[] =
 1283              		.loc 1 139 0
 1284 0624 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1285 0628 60E08DE2 		add	lr, sp, #96
 1286 062c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1287 0630 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1288 0634 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1289 0638 030097E8 		ldmia	r7, {r0, r1}
 1290              	.LBE414:
 1291              	.LBE420:
 1292              	.LBE426:
 1293              	.LBB427:
 1294              	.LBB403:
 1295              	.LBB396:
 136:../src/benchmark.c ****       int pos = 0;
 1296              		.loc 1 136 0
 1297 063c 00C09DE5 		ldr	ip, [sp, #0]
 1298              	.LBE396:
 1299              	.LBE403:
 1300              	.LBE427:
 1301              	.LBB428:
 1302              	.LBB421:
 1303              	.LBB415:
 139:../src/benchmark.c ****       const int units[] =
 1304              		.loc 1 139 0
 1305 0640 03008EE8 		stmia	lr, {r0, r1}
 1306              	.LVL147:
 1307              	.LBE415:
 1308              	.LBE421:
 1309              	.LBE428:
 1310              	.LBB429:
 1311              	.LBB404:
 1312              	.LBB397:
 138:../src/benchmark.c ****       int digitfound = 0;
 1313              		.loc 1 138 0
 1314 0644 0010A0E3 		mov	r1, #0
 1315              	.LBE397:
 1316              	.LBE404:
 1317              	.LBE429:
 1318              	.LBB430:
 1319              	.LBB422:
 1320              	.LBB416:
 193:../src/benchmark.c **** int dhrystone (void)
 1321              		.loc 1 193 0
 1322 0648 5C008DE2 		add	r0, sp, #92
 1323              	.LBE416:
 1324              	.LBE422:
 1325              	.LBE430:
 1326              	.LBB431:
 1327              	.LBB405:
 1328              	.LBB398:
 1329 064c 0130A0E3 		mov	r3, #1
 136:../src/benchmark.c ****       int pos = 0;
 1330              		.loc 1 136 0
 1331 0650 01E0A0E1 		mov	lr, r1
 1332              	.LVL148:
 1333              	.L76:
 1334              	.LBE398:
 1335              	.LBE405:
 1336              	.LBE431:
 1337              	.LBB432:
 1338              	.LBB423:
 1339              	.LBB417:
 156:../src/benchmark.c ****           unit  = units[i];
 1340              		.loc 1 156 0
 1341 0654 0420B0E5 		ldr	r2, [r0, #4]!
 1342              	.LVL149:
 159:../src/benchmark.c ****           while (number >= unit)
 1343              		.loc 1 159 0
 1344 0658 030052E1 		cmp	r2, r3
 1345 065c AF0400CA 		bgt	.L72
 1346 0660 0010A0E3 		mov	r1, #0
 1347              	.LVL150:
 1348              	.L73:
 162:../src/benchmark.c ****               number -= unit;
 1349              		.loc 1 162 0
 1350 0664 033062E0 		rsb	r3, r2, r3
 1351              	.LVL151:
 159:../src/benchmark.c ****           while (number >= unit)
 1352              		.loc 1 159 0
 1353 0668 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 1354              		.loc 1 161 0
 1355 066c 011081E2 		add	r1, r1, #1
 1356              	.LVL152:
 159:../src/benchmark.c ****           while (number >= unit)
 1357              		.loc 1 159 0
 1358 0670 FBFFFFDA 		ble	.L73
 1359              	.LVL153:
 1360              	.L74:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1361              		.loc 1 166 0
 1362 0674 88708DE2 		add	r7, sp, #136
 1363 0678 0E2087E0 		add	r2, r7, lr
 1364              	.LVL154:
 1365 067c 301081E2 		add	r1, r1, #48
 1366 0680 781042E5 		strb	r1, [r2, #-120]
 1367 0684 01E08EE2 		add	lr, lr, #1
 1368              	.LVL155:
 1369 0688 0110A0E3 		mov	r1, #1
 1370              	.LVL156:
 1371              	.L75:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1372              		.loc 1 154 0
 1373 068c 04709DE5 		ldr	r7, [sp, #4]
 1374 0690 070050E1 		cmp	r0, r7
 1375 0694 EEFFFF1A 		bne	.L76
 168:../src/benchmark.c ****       str[pos] = '\0';
 1376              		.loc 1 168 0
 1377 0698 88108DE2 		add	r1, sp, #136
 1378              	.LVL157:
 1379 069c 0EE081E0 		add	lr, r1, lr
 1380              	.LVL158:
 1381 06a0 00A0A0E3 		mov	sl, #0
 1382 06a4 78A04EE5 		strb	sl, [lr, #-120]
 1383              	.LBE417:
 1384              	.LBE423:
 1385              	.LBE432:
 329:../src/benchmark.c ****   puts_UART( buffer );
 1386              		.loc 1 329 0
 1387 06a8 10008DE2 		add	r0, sp, #16
 1388              	.LVL159:
 1389 06ac 00C08DE5 		str	ip, [sp, #0]
 1390 06b0 FEFFFFEB 		bl	puts_UART
 1391              	.LVL160:
 330:../src/benchmark.c ****   puts_UART ("Ch_1_Glob:           %c\n");
 1392              		.loc 1 330 0
 1393 06b4 1C031FE5 		ldr	r0, .L425+76
 1394 06b8 FEFFFFEB 		bl	puts_UART
 1395              	.LVL161:
 331:../src/benchmark.c ****   int_to_a(buffer, Ch_1_Glob);
 1396              		.loc 1 331 0
 1397 06bc 20231FE5 		ldr	r2, .L425+80
 1398 06c0 00E0D2E5 		ldrb	lr, [r2, #0]	@ zero_extendqisi2
 1399              	.LVL162:
 1400              	.LBB433:
 1401              	.LBB434:
 133:../src/benchmark.c ****   if (number > 0)
 1402              		.loc 1 133 0
 1403 06c4 0A005EE1 		cmp	lr, sl
 1404 06c8 00C09DE5 		ldr	ip, [sp, #0]
 1405 06cc 1D05000A 		beq	.L77
 1406              	.LVL163:
 1407              	.LBB435:
 139:../src/benchmark.c ****       const int units[] =
 1408              		.loc 1 139 0
 1409 06d0 D4821FE5 		ldr	r8, .L425+176
 1410 06d4 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1411 06d8 60708DE2 		add	r7, sp, #96
 1412 06dc 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1413 06e0 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1414 06e4 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1415 06e8 030098E8 		ldmia	r8, {r0, r1}
 1416 06ec 030087E8 		stmia	r7, {r0, r1}
 1417              	.LVL164:
 193:../src/benchmark.c **** int dhrystone (void)
 1418              		.loc 1 193 0
 1419 06f0 5C108DE2 		add	r1, sp, #92
 1420              	.LBE435:
 1421              	.LBE434:
 1422              	.LBE433:
 1423              	.LBB445:
 1424              	.LBB424:
 1425              	.LBB418:
 136:../src/benchmark.c ****       int pos = 0;
 1426              		.loc 1 136 0
 1427 06f4 0A00A0E1 		mov	r0, sl
 1428              	.LVL165:
 1429              	.L82:
 1430              	.LBE418:
 1431              	.LBE424:
 1432              	.LBE445:
 1433              	.LBB446:
 1434              	.LBB440:
 1435              	.LBB436:
 156:../src/benchmark.c ****           unit  = units[i];
 1436              		.loc 1 156 0
 1437 06f8 0430B1E5 		ldr	r3, [r1, #4]!
 1438              	.LVL166:
 159:../src/benchmark.c ****           while (number >= unit)
 1439              		.loc 1 159 0
 1440 06fc 0E0053E1 		cmp	r3, lr
 1441 0700 BA0400CA 		bgt	.L78
 1442 0704 0020A0E3 		mov	r2, #0
 1443              	.LVL167:
 1444              	.L79:
 162:../src/benchmark.c ****               number -= unit;
 1445              		.loc 1 162 0
 1446 0708 0EE063E0 		rsb	lr, r3, lr
 1447              	.LVL168:
 159:../src/benchmark.c ****           while (number >= unit)
 1448              		.loc 1 159 0
 1449 070c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1450              		.loc 1 161 0
 1451 0710 012082E2 		add	r2, r2, #1
 1452              	.LVL169:
 159:../src/benchmark.c ****           while (number >= unit)
 1453              		.loc 1 159 0
 1454 0714 FBFFFFDA 		ble	.L79
 1455              	.LVL170:
 1456              	.L80:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1457              		.loc 1 166 0
 1458 0718 88708DE2 		add	r7, sp, #136
 1459 071c 003087E0 		add	r3, r7, r0
 1460              	.LVL171:
 1461 0720 302082E2 		add	r2, r2, #48
 1462 0724 782043E5 		strb	r2, [r3, #-120]
 1463 0728 010080E2 		add	r0, r0, #1
 1464              	.LVL172:
 1465 072c 01A0A0E3 		mov	sl, #1
 1466              	.LVL173:
 1467              	.L81:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1468              		.loc 1 154 0
 1469 0730 04709DE5 		ldr	r7, [sp, #4]
 1470 0734 070051E1 		cmp	r1, r7
 1471 0738 EEFFFF1A 		bne	.L82
 168:../src/benchmark.c ****       str[pos] = '\0';
 1472              		.loc 1 168 0
 1473 073c 88E08DE2 		add	lr, sp, #136
 1474              	.LVL174:
 1475 0740 00008EE0 		add	r0, lr, r0
 1476              	.LVL175:
 1477 0744 0030A0E3 		mov	r3, #0
 1478 0748 783040E5 		strb	r3, [r0, #-120]
 1479              	.LVL176:
 1480              	.L83:
 1481              	.LBE436:
 1482              	.LBE440:
 1483              	.LBE446:
 332:../src/benchmark.c ****   puts_UART( buffer );
 1484              		.loc 1 332 0
 1485 074c 10008DE2 		add	r0, sp, #16
 1486              	.LVL177:
 1487 0750 00C08DE5 		str	ip, [sp, #0]
 1488 0754 FEFFFFEB 		bl	puts_UART
 1489              	.LVL178:
 333:../src/benchmark.c ****   puts_UART ("        should be:   %c\n");
 1490              		.loc 1 333 0
 1491 0758 AC031FE5 		ldr	r0, .L425+96
 1492 075c FEFFFFEB 		bl	puts_UART
 1493              	.LVL179:
 334:../src/benchmark.c ****   puts_UART( "A" );
 1494              		.loc 1 334 0
 1495 0760 C0031FE5 		ldr	r0, .L425+84
 1496 0764 FEFFFFEB 		bl	puts_UART
 1497              	.LVL180:
 335:../src/benchmark.c ****   puts_UART ("Ch_2_Glob:           %c\n" );
 1498              		.loc 1 335 0
 1499 0768 C4031FE5 		ldr	r0, .L425+88
 1500 076c FEFFFFEB 		bl	puts_UART
 1501              	.LVL181:
 336:../src/benchmark.c ****   int_to_a(buffer, Ch_2_Glob);
 1502              		.loc 1 336 0
 1503 0770 C8131FE5 		ldr	r1, .L425+92
 1504 0774 00E0D1E5 		ldrb	lr, [r1, #0]	@ zero_extendqisi2
 1505              	.LVL182:
 1506              	.LBB447:
 1507              	.LBB448:
 133:../src/benchmark.c ****   if (number > 0)
 1508              		.loc 1 133 0
 1509 0778 00005EE3 		cmp	lr, #0
 1510 077c 00C09DE5 		ldr	ip, [sp, #0]
 1511 0780 F804000A 		beq	.L84
 1512              	.LVL183:
 1513              	.LBB449:
 139:../src/benchmark.c ****       const int units[] =
 1514              		.loc 1 139 0
 1515 0784 88831FE5 		ldr	r8, .L425+176
 1516 0788 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1517 078c 60708DE2 		add	r7, sp, #96
 1518 0790 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1519 0794 0F00B8E8 		ldmia	r8!, {r0, r1, r2, r3}
 1520 0798 0F00A7E8 		stmia	r7!, {r0, r1, r2, r3}
 1521 079c 030098E8 		ldmia	r8, {r0, r1}
 1522              	.LBE449:
 1523              	.LBE448:
 1524              	.LBE447:
 1525              	.LBB461:
 1526              	.LBB441:
 1527              	.LBB437:
 138:../src/benchmark.c ****       int digitfound = 0;
 1528              		.loc 1 138 0
 1529 07a0 0020A0E3 		mov	r2, #0
 1530              	.LBE437:
 1531              	.LBE441:
 1532              	.LBE461:
 1533              	.LBB462:
 1534              	.LBB455:
 1535              	.LBB450:
 139:../src/benchmark.c ****       const int units[] =
 1536              		.loc 1 139 0
 1537 07a4 030087E8 		stmia	r7, {r0, r1}
 1538              	.LVL184:
 193:../src/benchmark.c **** int dhrystone (void)
 1539              		.loc 1 193 0
 1540 07a8 5C108DE2 		add	r1, sp, #92
 1541              	.LBE450:
 1542              	.LBE455:
 1543              	.LBE462:
 1544              	.LBB463:
 1545              	.LBB442:
 1546              	.LBB438:
 136:../src/benchmark.c ****       int pos = 0;
 1547              		.loc 1 136 0
 1548 07ac 0200A0E1 		mov	r0, r2
 1549              	.LVL185:
 1550              	.L89:
 1551              	.LBE438:
 1552              	.LBE442:
 1553              	.LBE463:
 1554              	.LBB464:
 1555              	.LBB456:
 1556              	.LBB451:
 156:../src/benchmark.c ****           unit  = units[i];
 1557              		.loc 1 156 0
 1558 07b0 0430B1E5 		ldr	r3, [r1, #4]!
 1559              	.LVL186:
 159:../src/benchmark.c ****           while (number >= unit)
 1560              		.loc 1 159 0
 1561 07b4 0E0053E1 		cmp	r3, lr
 1562 07b8 880400CA 		bgt	.L85
 1563 07bc 0020A0E3 		mov	r2, #0
 1564              	.LVL187:
 1565              	.L86:
 162:../src/benchmark.c ****               number -= unit;
 1566              		.loc 1 162 0
 1567 07c0 0EE063E0 		rsb	lr, r3, lr
 1568              	.LVL188:
 159:../src/benchmark.c ****           while (number >= unit)
 1569              		.loc 1 159 0
 1570 07c4 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1571              		.loc 1 161 0
 1572 07c8 012082E2 		add	r2, r2, #1
 1573              	.LVL189:
 159:../src/benchmark.c ****           while (number >= unit)
 1574              		.loc 1 159 0
 1575 07cc FBFFFFDA 		ble	.L86
 1576              	.LVL190:
 1577              	.L87:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1578              		.loc 1 166 0
 1579 07d0 88708DE2 		add	r7, sp, #136
 1580 07d4 003087E0 		add	r3, r7, r0
 1581              	.LVL191:
 1582 07d8 302082E2 		add	r2, r2, #48
 1583 07dc 782043E5 		strb	r2, [r3, #-120]
 1584 07e0 010080E2 		add	r0, r0, #1
 1585              	.LVL192:
 1586 07e4 0120A0E3 		mov	r2, #1
 1587              	.LVL193:
 1588              	.L88:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1589              		.loc 1 154 0
 1590 07e8 04709DE5 		ldr	r7, [sp, #4]
 1591 07ec 070051E1 		cmp	r1, r7
 1592 07f0 EEFFFF1A 		bne	.L89
 168:../src/benchmark.c ****       str[pos] = '\0';
 1593              		.loc 1 168 0
 1594 07f4 88E08DE2 		add	lr, sp, #136
 1595              	.LVL194:
 1596 07f8 00008EE0 		add	r0, lr, r0
 1597              	.LVL195:
 1598 07fc 0030A0E3 		mov	r3, #0
 1599 0800 783040E5 		strb	r3, [r0, #-120]
 1600              	.LVL196:
 1601              	.L90:
 1602              	.LBE451:
 1603              	.LBE456:
 1604              	.LBE464:
 337:../src/benchmark.c ****   puts_UART( buffer );
 1605              		.loc 1 337 0
 1606 0804 10008DE2 		add	r0, sp, #16
 1607              	.LVL197:
 1608 0808 00C08DE5 		str	ip, [sp, #0]
 1609 080c FEFFFFEB 		bl	puts_UART
 1610              	.LVL198:
 338:../src/benchmark.c ****   puts_UART ("        should be:   %c\n" );
 1611              		.loc 1 338 0
 1612 0810 64041FE5 		ldr	r0, .L425+96
 1613 0814 FEFFFFEB 		bl	puts_UART
 1614              	.LVL199:
 339:../src/benchmark.c ****   puts_UART( "B" );
 1615              		.loc 1 339 0
 1616 0818 68041FE5 		ldr	r0, .L425+100
 1617 081c FEFFFFEB 		bl	puts_UART
 1618              	.LVL200:
 340:../src/benchmark.c ****   puts_UART ("Arr_1_Glob[8]:       %d\n");
 1619              		.loc 1 340 0
 1620 0820 6C041FE5 		ldr	r0, .L425+104
 1621 0824 FEFFFFEB 		bl	puts_UART
 1622              	.LVL201:
 341:../src/benchmark.c ****   int_to_a(buffer, Arr_1_Glob[8]);
 1623              		.loc 1 341 0
 1624 0828 20E095E5 		ldr	lr, [r5, #32]
 1625              	.LVL202:
 1626              	.LBB465:
 1627              	.LBB466:
 133:../src/benchmark.c ****   if (number > 0)
 1628              		.loc 1 133 0
 1629 082c 00005EE3 		cmp	lr, #0
 1630 0830 00C09DE5 		ldr	ip, [sp, #0]
 1631 0834 B40400DA 		ble	.L91
 1632              	.LVL203:
 1633              	.LBB467:
 139:../src/benchmark.c ****       const int units[] =
 1634              		.loc 1 139 0
 1635 0838 3C741FE5 		ldr	r7, .L425+176
 1636 083c 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1637 0840 60508DE2 		add	r5, sp, #96
 1638 0844 0F00A5E8 		stmia	r5!, {r0, r1, r2, r3}
 1639 0848 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1640 084c 0F00A5E8 		stmia	r5!, {r0, r1, r2, r3}
 1641 0850 030097E8 		ldmia	r7, {r0, r1}
 1642 0854 030085E8 		stmia	r5, {r0, r1}
 1643              	.LVL204:
 1644              	.LBE467:
 1645              	.LBE466:
 1646              	.LBE465:
 1647              	.LBB484:
 1648              	.LBB457:
 1649              	.LBB452:
 138:../src/benchmark.c ****       int digitfound = 0;
 1650              		.loc 1 138 0
 1651 0858 0050A0E3 		mov	r5, #0
 1652              	.LBE452:
 1653              	.LBE457:
 1654              	.LBE484:
 1655              	.LBB485:
 1656              	.LBB476:
 1657              	.LBB468:
 193:../src/benchmark.c **** int dhrystone (void)
 1658              		.loc 1 193 0
 1659 085c 5C108DE2 		add	r1, sp, #92
 1660              	.LBE468:
 1661              	.LBE476:
 1662              	.LBE485:
 1663              	.LBB486:
 1664              	.LBB458:
 1665              	.LBB453:
 136:../src/benchmark.c ****       int pos = 0;
 1666              		.loc 1 136 0
 1667 0860 0500A0E1 		mov	r0, r5
 1668              	.LVL205:
 1669              	.L96:
 1670              	.LBE453:
 1671              	.LBE458:
 1672              	.LBE486:
 1673              	.LBB487:
 1674              	.LBB477:
 1675              	.LBB469:
 156:../src/benchmark.c ****           unit  = units[i];
 1676              		.loc 1 156 0
 1677 0864 0430B1E5 		ldr	r3, [r1, #4]!
 1678              	.LVL206:
 159:../src/benchmark.c ****           while (number >= unit)
 1679              		.loc 1 159 0
 1680 0868 0E0053E1 		cmp	r3, lr
 1681 086c 570400CA 		bgt	.L92
 1682 0870 0020A0E3 		mov	r2, #0
 1683              	.LVL207:
 1684              	.L93:
 162:../src/benchmark.c ****               number -= unit;
 1685              		.loc 1 162 0
 1686 0874 0EE063E0 		rsb	lr, r3, lr
 1687              	.LVL208:
 159:../src/benchmark.c ****           while (number >= unit)
 1688              		.loc 1 159 0
 1689 0878 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1690              		.loc 1 161 0
 1691 087c 012082E2 		add	r2, r2, #1
 1692              	.LVL209:
 159:../src/benchmark.c ****           while (number >= unit)
 1693              		.loc 1 159 0
 1694 0880 FBFFFFDA 		ble	.L93
 165:../src/benchmark.c ****           if (digit != 0) digitfound = 1;
 1695              		.loc 1 165 0
 1696 0884 0150A0E3 		mov	r5, #1
 1697              	.LVL210:
 1698              	.L94:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1699              		.loc 1 166 0
 1700 0888 88708DE2 		add	r7, sp, #136
 1701 088c 003087E0 		add	r3, r7, r0
 1702              	.LVL211:
 1703 0890 302082E2 		add	r2, r2, #48
 1704 0894 782043E5 		strb	r2, [r3, #-120]
 1705 0898 010080E2 		add	r0, r0, #1
 1706              	.LVL212:
 1707              	.L95:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1708              		.loc 1 154 0
 1709 089c 04709DE5 		ldr	r7, [sp, #4]
 1710 08a0 070051E1 		cmp	r1, r7
 1711 08a4 EEFFFF1A 		bne	.L96
 168:../src/benchmark.c ****       str[pos] = '\0';
 1712              		.loc 1 168 0
 1713 08a8 88E08DE2 		add	lr, sp, #136
 1714              	.LVL213:
 1715 08ac 00008EE0 		add	r0, lr, r0
 1716              	.LVL214:
 1717 08b0 0030A0E3 		mov	r3, #0
 1718 08b4 783040E5 		strb	r3, [r0, #-120]
 1719              	.LVL215:
 1720              	.L97:
 1721              	.LBE469:
 1722              	.LBE477:
 1723              	.LBE487:
 342:../src/benchmark.c ****   puts_UART( buffer );
 1724              		.loc 1 342 0
 1725 08b8 10008DE2 		add	r0, sp, #16
 1726              	.LVL216:
 1727              	.LBB488:
 1728              	.LBB489:
 139:../src/benchmark.c ****       const int units[] =
 1729              		.loc 1 139 0
 1730 08bc C0541FE5 		ldr	r5, .L425+176
 1731              	.LBE489:
 1732              	.LBE488:
 342:../src/benchmark.c ****   puts_UART( buffer );
 1733              		.loc 1 342 0
 1734 08c0 00C08DE5 		str	ip, [sp, #0]
 1735 08c4 FEFFFFEB 		bl	puts_UART
 1736              	.LVL217:
 343:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 1737              		.loc 1 343 0
 1738 08c8 D4041FE5 		ldr	r0, .L425+168
 1739 08cc FEFFFFEB 		bl	puts_UART
 1740              	.LVL218:
 1741              	.LBB496:
 1742              	.LBB490:
 139:../src/benchmark.c ****       const int units[] =
 1743              		.loc 1 139 0
 1744 08d0 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 1745 08d4 60E08DE2 		add	lr, sp, #96
 1746 08d8 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1747 08dc 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 1748 08e0 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1749 08e4 030095E8 		ldmia	r5, {r0, r1}
 1750              	.LBE490:
 1751              	.LBE496:
 1752              	.LBB497:
 1753              	.LBB478:
 1754              	.LBB470:
 136:../src/benchmark.c ****       int pos = 0;
 1755              		.loc 1 136 0
 1756 08e8 00C09DE5 		ldr	ip, [sp, #0]
 1757              	.LBE470:
 1758              	.LBE478:
 1759              	.LBE497:
 1760              	.LBB498:
 1761              	.LBB491:
 139:../src/benchmark.c ****       const int units[] =
 1762              		.loc 1 139 0
 1763 08ec 03008EE8 		stmia	lr, {r0, r1}
 1764              	.LVL219:
 1765              	.LBE491:
 1766              	.LBE498:
 1767              	.LBB499:
 1768              	.LBB479:
 1769              	.LBB471:
 138:../src/benchmark.c ****       int digitfound = 0;
 1770              		.loc 1 138 0
 1771 08f0 0010A0E3 		mov	r1, #0
 1772              	.LBE471:
 1773              	.LBE479:
 1774              	.LBE499:
 1775              	.LBB500:
 1776              	.LBB492:
 193:../src/benchmark.c **** int dhrystone (void)
 1777              		.loc 1 193 0
 1778 08f4 5C008DE2 		add	r0, sp, #92
 1779              	.LBE492:
 1780              	.LBE500:
 1781              	.LBB501:
 1782              	.LBB480:
 1783              	.LBB472:
 1784 08f8 0730A0E3 		mov	r3, #7
 136:../src/benchmark.c ****       int pos = 0;
 1785              		.loc 1 136 0
 1786 08fc 01E0A0E1 		mov	lr, r1
 1787              	.LVL220:
 1788              	.L103:
 1789              	.LBE472:
 1790              	.LBE480:
 1791              	.LBE501:
 1792              	.LBB502:
 1793              	.LBB493:
 156:../src/benchmark.c ****           unit  = units[i];
 1794              		.loc 1 156 0
 1795 0900 0420B0E5 		ldr	r2, [r0, #4]!
 1796              	.LVL221:
 159:../src/benchmark.c ****           while (number >= unit)
 1797              		.loc 1 159 0
 1798 0904 020053E1 		cmp	r3, r2
 1799 0908 000400BA 		blt	.L99
 1800 090c 0010A0E3 		mov	r1, #0
 1801              	.LVL222:
 1802              	.L100:
 162:../src/benchmark.c ****               number -= unit;
 1803              		.loc 1 162 0
 1804 0910 033062E0 		rsb	r3, r2, r3
 1805              	.LVL223:
 159:../src/benchmark.c ****           while (number >= unit)
 1806              		.loc 1 159 0
 1807 0914 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 1808              		.loc 1 161 0
 1809 0918 011081E2 		add	r1, r1, #1
 1810              	.LVL224:
 159:../src/benchmark.c ****           while (number >= unit)
 1811              		.loc 1 159 0
 1812 091c FBFFFFDA 		ble	.L100
 1813              	.LVL225:
 1814              	.L101:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1815              		.loc 1 166 0
 1816 0920 88508DE2 		add	r5, sp, #136
 1817 0924 0E2085E0 		add	r2, r5, lr
 1818              	.LVL226:
 1819 0928 301081E2 		add	r1, r1, #48
 1820 092c 781042E5 		strb	r1, [r2, #-120]
 1821 0930 01E08EE2 		add	lr, lr, #1
 1822              	.LVL227:
 1823 0934 0110A0E3 		mov	r1, #1
 1824              	.LVL228:
 1825              	.L102:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1826              		.loc 1 154 0
 1827 0938 04709DE5 		ldr	r7, [sp, #4]
 1828 093c 070050E1 		cmp	r0, r7
 1829 0940 EEFFFF1A 		bne	.L103
 168:../src/benchmark.c ****       str[pos] = '\0';
 1830              		.loc 1 168 0
 1831 0944 88108DE2 		add	r1, sp, #136
 1832              	.LVL229:
 1833 0948 0EE081E0 		add	lr, r1, lr
 1834              	.LVL230:
 1835 094c 0050A0E3 		mov	r5, #0
 1836 0950 78504EE5 		strb	r5, [lr, #-120]
 1837              	.LBE493:
 1838              	.LBE502:
 345:../src/benchmark.c ****   puts_UART( buffer );
 1839              		.loc 1 345 0
 1840 0954 10008DE2 		add	r0, sp, #16
 1841              	.LVL231:
 1842 0958 00C08DE5 		str	ip, [sp, #0]
 1843 095c FEFFFFEB 		bl	puts_UART
 1844              	.LVL232:
 346:../src/benchmark.c ****   puts_UART ("Arr_2_Glob[8][7]:    %d\n");
 1845              		.loc 1 346 0
 1846 0960 A8051FE5 		ldr	r0, .L425+108
 1847 0964 FEFFFFEB 		bl	puts_UART
 1848              	.LVL233:
 347:../src/benchmark.c ****   int_to_a(buffer, Arr_2_Glob[8][7]);
 1849              		.loc 1 347 0
 1850 0968 5CE694E5 		ldr	lr, [r4, #1628]
 1851              	.LVL234:
 1852              	.LBB503:
 1853              	.LBB504:
 133:../src/benchmark.c ****   if (number > 0)
 1854              		.loc 1 133 0
 1855 096c 05005EE1 		cmp	lr, r5
 1856 0970 00C09DE5 		ldr	ip, [sp, #0]
 1857 0974 5F0400DA 		ble	.L104
 1858              	.LVL235:
 1859              	.LBB505:
 139:../src/benchmark.c ****       const int units[] =
 1860              		.loc 1 139 0
 1861 0978 7C751FE5 		ldr	r7, .L425+176
 1862 097c 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1863 0980 60408DE2 		add	r4, sp, #96
 1864 0984 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 1865 0988 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 1866 098c 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 1867 0990 030097E8 		ldmia	r7, {r0, r1}
 1868 0994 030084E8 		stmia	r4, {r0, r1}
 1869              	.LVL236:
 193:../src/benchmark.c **** int dhrystone (void)
 1870              		.loc 1 193 0
 1871 0998 5C108DE2 		add	r1, sp, #92
 1872              	.LBE505:
 1873              	.LBE504:
 1874              	.LBE503:
 1875              	.LBB518:
 1876              	.LBB494:
 136:../src/benchmark.c ****       int pos = 0;
 1877              		.loc 1 136 0
 1878 099c 0500A0E1 		mov	r0, r5
 1879              	.LVL237:
 1880              	.L109:
 1881              	.LBE494:
 1882              	.LBE518:
 1883              	.LBB519:
 1884              	.LBB512:
 1885              	.LBB506:
 156:../src/benchmark.c ****           unit  = units[i];
 1886              		.loc 1 156 0
 1887 09a0 0430B1E5 		ldr	r3, [r1, #4]!
 1888              	.LVL238:
 159:../src/benchmark.c ****           while (number >= unit)
 1889              		.loc 1 159 0
 1890 09a4 0E0053E1 		cmp	r3, lr
 1891 09a8 F00300CA 		bgt	.L105
 1892 09ac 0020A0E3 		mov	r2, #0
 1893              	.LVL239:
 1894              	.L106:
 162:../src/benchmark.c ****               number -= unit;
 1895              		.loc 1 162 0
 1896 09b0 0EE063E0 		rsb	lr, r3, lr
 1897              	.LVL240:
 159:../src/benchmark.c ****           while (number >= unit)
 1898              		.loc 1 159 0
 1899 09b4 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 1900              		.loc 1 161 0
 1901 09b8 012082E2 		add	r2, r2, #1
 1902              	.LVL241:
 159:../src/benchmark.c ****           while (number >= unit)
 1903              		.loc 1 159 0
 1904 09bc FBFFFFDA 		ble	.L106
 1905              	.LVL242:
 1906              	.L107:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 1907              		.loc 1 166 0
 1908 09c0 88408DE2 		add	r4, sp, #136
 1909 09c4 003084E0 		add	r3, r4, r0
 1910              	.LVL243:
 1911 09c8 302082E2 		add	r2, r2, #48
 1912 09cc 782043E5 		strb	r2, [r3, #-120]
 1913 09d0 010080E2 		add	r0, r0, #1
 1914              	.LVL244:
 1915 09d4 0150A0E3 		mov	r5, #1
 1916              	.LVL245:
 1917              	.L108:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 1918              		.loc 1 154 0
 1919 09d8 04709DE5 		ldr	r7, [sp, #4]
 1920 09dc 070051E1 		cmp	r1, r7
 1921 09e0 EEFFFF1A 		bne	.L109
 168:../src/benchmark.c ****       str[pos] = '\0';
 1922              		.loc 1 168 0
 1923 09e4 88E08DE2 		add	lr, sp, #136
 1924              	.LVL246:
 1925 09e8 00008EE0 		add	r0, lr, r0
 1926              	.LVL247:
 1927 09ec 0030A0E3 		mov	r3, #0
 1928 09f0 783040E5 		strb	r3, [r0, #-120]
 1929              	.LVL248:
 1930              	.L110:
 1931              	.LBE506:
 1932              	.LBE512:
 1933              	.LBE519:
 348:../src/benchmark.c ****   puts_UART( buffer );
 1934              		.loc 1 348 0
 1935 09f4 10008DE2 		add	r0, sp, #16
 1936              	.LVL249:
 1937 09f8 00C08DE5 		str	ip, [sp, #0]
 1938 09fc FEFFFFEB 		bl	puts_UART
 1939              	.LVL250:
 349:../src/benchmark.c ****   puts_UART ("        should be:   loops + 10\n");
 1940              		.loc 1 349 0
 1941 0a00 44061FE5 		ldr	r0, .L425+112
 1942 0a04 FEFFFFEB 		bl	puts_UART
 1943              	.LVL251:
 350:../src/benchmark.c ****   puts_UART ("Ptr_Glob->\n");
 1944              		.loc 1 350 0
 1945 0a08 48061FE5 		ldr	r0, .L425+116
 1946 0a0c FEFFFFEB 		bl	puts_UART
 1947              	.LVL252:
 351:../src/benchmark.c ****   puts_UART ("  Ptr_Comp:          %d\n");
 1948              		.loc 1 351 0
 1949 0a10 40061FE5 		ldr	r0, .L425+132
 1950 0a14 FEFFFFEB 		bl	puts_UART
 1951              	.LVL253:
 352:../src/benchmark.c ****   int_to_a(buffer, (int) Ptr_Glob->Ptr_Comp);
 1952              		.loc 1 352 0
 1953 0a18 003099E5 		ldr	r3, [r9, #0]
 1954 0a1c 00E093E5 		ldr	lr, [r3, #0]
 1955              	.LVL254:
 1956              	.LBB520:
 1957              	.LBB521:
 133:../src/benchmark.c ****   if (number > 0)
 1958              		.loc 1 133 0
 1959 0a20 00005EE3 		cmp	lr, #0
 1960 0a24 00C09DE5 		ldr	ip, [sp, #0]
 1961 0a28 2D0400DA 		ble	.L112
 1962              	.LVL255:
 1963              	.LBB522:
 139:../src/benchmark.c ****       const int units[] =
 1964              		.loc 1 139 0
 1965 0a2c 30561FE5 		ldr	r5, .L425+176
 1966 0a30 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 1967 0a34 60408DE2 		add	r4, sp, #96
 1968 0a38 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 1969 0a3c 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 1970 0a40 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 1971 0a44 030095E8 		ldmia	r5, {r0, r1}
 1972              	.LBE522:
 1973              	.LBE521:
 1974              	.LBE520:
 1975              	.LBB537:
 1976              	.LBB513:
 1977              	.LBB507:
 138:../src/benchmark.c ****       int digitfound = 0;
 1978              		.loc 1 138 0
 1979 0a48 0020A0E3 		mov	r2, #0
 1980              	.LBE507:
 1981              	.LBE513:
 1982              	.LBE537:
 1983              	.LBB538:
 1984              	.LBB530:
 1985              	.LBB523:
 139:../src/benchmark.c ****       const int units[] =
 1986              		.loc 1 139 0
 1987 0a4c 030084E8 		stmia	r4, {r0, r1}
 1988              	.LVL256:
 193:../src/benchmark.c **** int dhrystone (void)
 1989              		.loc 1 193 0
 1990 0a50 5C108DE2 		add	r1, sp, #92
 1991              	.LBE523:
 1992              	.LBE530:
 1993              	.LBE538:
 1994              	.LBB539:
 1995              	.LBB514:
 1996              	.LBB508:
 136:../src/benchmark.c ****       int pos = 0;
 1997              		.loc 1 136 0
 1998 0a54 0200A0E1 		mov	r0, r2
 1999              	.LVL257:
 2000              	.L117:
 2001              	.LBE508:
 2002              	.LBE514:
 2003              	.LBE539:
 2004              	.LBB540:
 2005              	.LBB531:
 2006              	.LBB524:
 156:../src/benchmark.c ****           unit  = units[i];
 2007              		.loc 1 156 0
 2008 0a58 0430B1E5 		ldr	r3, [r1, #4]!
 2009              	.LVL258:
 159:../src/benchmark.c ****           while (number >= unit)
 2010              		.loc 1 159 0
 2011 0a5c 0E0053E1 		cmp	r3, lr
 2012 0a60 BE0300CA 		bgt	.L113
 2013 0a64 0020A0E3 		mov	r2, #0
 2014              	.LVL259:
 2015              	.L114:
 162:../src/benchmark.c ****               number -= unit;
 2016              		.loc 1 162 0
 2017 0a68 0EE063E0 		rsb	lr, r3, lr
 2018              	.LVL260:
 159:../src/benchmark.c ****           while (number >= unit)
 2019              		.loc 1 159 0
 2020 0a6c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2021              		.loc 1 161 0
 2022 0a70 012082E2 		add	r2, r2, #1
 2023              	.LVL261:
 159:../src/benchmark.c ****           while (number >= unit)
 2024              		.loc 1 159 0
 2025 0a74 FBFFFFDA 		ble	.L114
 2026              	.LVL262:
 2027              	.L115:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2028              		.loc 1 166 0
 2029 0a78 88408DE2 		add	r4, sp, #136
 2030 0a7c 003084E0 		add	r3, r4, r0
 2031              	.LVL263:
 2032 0a80 302082E2 		add	r2, r2, #48
 2033 0a84 782043E5 		strb	r2, [r3, #-120]
 2034 0a88 010080E2 		add	r0, r0, #1
 2035              	.LVL264:
 2036 0a8c 0120A0E3 		mov	r2, #1
 2037              	.LVL265:
 2038              	.L116:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2039              		.loc 1 154 0
 2040 0a90 04509DE5 		ldr	r5, [sp, #4]
 2041 0a94 050051E1 		cmp	r1, r5
 2042 0a98 EEFFFF1A 		bne	.L117
 168:../src/benchmark.c ****       str[pos] = '\0';
 2043              		.loc 1 168 0
 2044 0a9c 88708DE2 		add	r7, sp, #136
 2045 0aa0 000087E0 		add	r0, r7, r0
 2046              	.LVL266:
 2047 0aa4 0030A0E3 		mov	r3, #0
 2048 0aa8 783040E5 		strb	r3, [r0, #-120]
 2049              	.LVL267:
 2050              	.L118:
 2051              	.LBE524:
 2052              	.LBE531:
 2053              	.LBE540:
 353:../src/benchmark.c ****   puts_UART( buffer );
 2054              		.loc 1 353 0
 2055 0aac 10008DE2 		add	r0, sp, #16
 2056              	.LVL268:
 2057 0ab0 00C08DE5 		str	ip, [sp, #0]
 2058 0ab4 FEFFFFEB 		bl	puts_UART
 2059              	.LVL269:
 354:../src/benchmark.c ****   puts_UART ("        should be:   (implementation-dependent)\n");
 2060              		.loc 1 354 0
 2061 0ab8 F4061FE5 		ldr	r0, .L425+120
 2062 0abc FEFFFFEB 		bl	puts_UART
 2063              	.LVL270:
 355:../src/benchmark.c ****   puts_UART ("  Discr:             %d\n");
 2064              		.loc 1 355 0
 2065 0ac0 E8061FE5 		ldr	r0, .L425+140
 2066 0ac4 FEFFFFEB 		bl	puts_UART
 2067              	.LVL271:
 356:../src/benchmark.c ****   int_to_a(buffer, Ptr_Glob->Discr);
 2068              		.loc 1 356 0
 2069 0ac8 003099E5 		ldr	r3, [r9, #0]
 2070 0acc 04E0D3E5 		ldrb	lr, [r3, #4]	@ zero_extendqisi2
 2071              	.LVL272:
 2072              	.LBB541:
 2073              	.LBB542:
 133:../src/benchmark.c ****   if (number > 0)
 2074              		.loc 1 133 0
 2075 0ad0 00005EE3 		cmp	lr, #0
 2076 0ad4 00C09DE5 		ldr	ip, [sp, #0]
 2077 0ad8 3104000A 		beq	.L120
 2078              	.LVL273:
 2079              	.LBB543:
 139:../src/benchmark.c ****       const int units[] =
 2080              		.loc 1 139 0
 2081 0adc E0561FE5 		ldr	r5, .L425+176
 2082 0ae0 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2083 0ae4 60408DE2 		add	r4, sp, #96
 2084 0ae8 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2085 0aec 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2086 0af0 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2087 0af4 030095E8 		ldmia	r5, {r0, r1}
 2088              	.LBE543:
 2089              	.LBE542:
 2090              	.LBE541:
 2091              	.LBB555:
 2092              	.LBB532:
 2093              	.LBB525:
 138:../src/benchmark.c ****       int digitfound = 0;
 2094              		.loc 1 138 0
 2095 0af8 0020A0E3 		mov	r2, #0
 2096              	.LBE525:
 2097              	.LBE532:
 2098              	.LBE555:
 2099              	.LBB556:
 2100              	.LBB549:
 2101              	.LBB544:
 139:../src/benchmark.c ****       const int units[] =
 2102              		.loc 1 139 0
 2103 0afc 030084E8 		stmia	r4, {r0, r1}
 2104              	.LVL274:
 193:../src/benchmark.c **** int dhrystone (void)
 2105              		.loc 1 193 0
 2106 0b00 5C108DE2 		add	r1, sp, #92
 2107              	.LBE544:
 2108              	.LBE549:
 2109              	.LBE556:
 2110              	.LBB557:
 2111              	.LBB533:
 2112              	.LBB526:
 136:../src/benchmark.c ****       int pos = 0;
 2113              		.loc 1 136 0
 2114 0b04 0200A0E1 		mov	r0, r2
 2115              	.LVL275:
 2116              	.L125:
 2117              	.LBE526:
 2118              	.LBE533:
 2119              	.LBE557:
 2120              	.LBB558:
 2121              	.LBB550:
 2122              	.LBB545:
 156:../src/benchmark.c ****           unit  = units[i];
 2123              		.loc 1 156 0
 2124 0b08 0430B1E5 		ldr	r3, [r1, #4]!
 2125              	.LVL276:
 159:../src/benchmark.c ****           while (number >= unit)
 2126              		.loc 1 159 0
 2127 0b0c 0E0053E1 		cmp	r3, lr
 2128 0b10 8E0300CA 		bgt	.L121
 2129 0b14 0020A0E3 		mov	r2, #0
 2130              	.LVL277:
 2131              	.L122:
 162:../src/benchmark.c ****               number -= unit;
 2132              		.loc 1 162 0
 2133 0b18 0EE063E0 		rsb	lr, r3, lr
 2134              	.LVL278:
 159:../src/benchmark.c ****           while (number >= unit)
 2135              		.loc 1 159 0
 2136 0b1c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2137              		.loc 1 161 0
 2138 0b20 012082E2 		add	r2, r2, #1
 2139              	.LVL279:
 159:../src/benchmark.c ****           while (number >= unit)
 2140              		.loc 1 159 0
 2141 0b24 FBFFFFDA 		ble	.L122
 2142              	.LVL280:
 2143              	.L123:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2144              		.loc 1 166 0
 2145 0b28 88408DE2 		add	r4, sp, #136
 2146 0b2c 003084E0 		add	r3, r4, r0
 2147              	.LVL281:
 2148 0b30 302082E2 		add	r2, r2, #48
 2149 0b34 782043E5 		strb	r2, [r3, #-120]
 2150 0b38 010080E2 		add	r0, r0, #1
 2151              	.LVL282:
 2152 0b3c 0120A0E3 		mov	r2, #1
 2153              	.LVL283:
 2154              	.L124:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2155              		.loc 1 154 0
 2156 0b40 04509DE5 		ldr	r5, [sp, #4]
 2157 0b44 050051E1 		cmp	r1, r5
 2158 0b48 EEFFFF1A 		bne	.L125
 168:../src/benchmark.c ****       str[pos] = '\0';
 2159              		.loc 1 168 0
 2160 0b4c 88708DE2 		add	r7, sp, #136
 2161 0b50 000087E0 		add	r0, r7, r0
 2162              	.LVL284:
 2163 0b54 0030A0E3 		mov	r3, #0
 2164 0b58 783040E5 		strb	r3, [r0, #-120]
 2165              	.LVL285:
 2166              	.L126:
 2167              	.LBE545:
 2168              	.LBE550:
 2169              	.LBE558:
 357:../src/benchmark.c ****   puts_UART( buffer );
 2170              		.loc 1 357 0
 2171 0b5c 10008DE2 		add	r0, sp, #16
 2172              	.LVL286:
 2173 0b60 00C08DE5 		str	ip, [sp, #0]
 2174 0b64 FEFFFFEB 		bl	puts_UART
 2175              	.LVL287:
 358:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 2176              		.loc 1 358 0
 2177 0b68 74071FE5 		ldr	r0, .L425+168
 2178 0b6c FEFFFFEB 		bl	puts_UART
 2179              	.LVL288:
 359:../src/benchmark.c ****   puts_UART( "0" );
 2180              		.loc 1 359 0
 2181 0b70 A8071FE5 		ldr	r0, .L425+124
 2182 0b74 FEFFFFEB 		bl	puts_UART
 2183              	.LVL289:
 360:../src/benchmark.c ****   puts_UART ("  Enum_Comp:         %d\n");
 2184              		.loc 1 360 0
 2185 0b78 9C071FE5 		ldr	r0, .L425+144
 2186 0b7c FEFFFFEB 		bl	puts_UART
 2187              	.LVL290:
 361:../src/benchmark.c ****   int_to_a(buffer, Ptr_Glob->variant.var_1.Enum_Comp);
 2188              		.loc 1 361 0
 2189 0b80 003099E5 		ldr	r3, [r9, #0]
 2190 0b84 08E0D3E5 		ldrb	lr, [r3, #8]	@ zero_extendqisi2
 2191              	.LVL291:
 2192              	.LBB559:
 2193              	.LBB560:
 133:../src/benchmark.c ****   if (number > 0)
 2194              		.loc 1 133 0
 2195 0b88 00005EE3 		cmp	lr, #0
 2196 0b8c 00C09DE5 		ldr	ip, [sp, #0]
 2197 0b90 FF03000A 		beq	.L127
 2198              	.LVL292:
 2199              	.LBB561:
 139:../src/benchmark.c ****       const int units[] =
 2200              		.loc 1 139 0
 2201 0b94 98571FE5 		ldr	r5, .L425+176
 2202 0b98 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2203 0b9c 60408DE2 		add	r4, sp, #96
 2204 0ba0 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2205 0ba4 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2206 0ba8 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2207 0bac 030095E8 		ldmia	r5, {r0, r1}
 2208              	.LBE561:
 2209              	.LBE560:
 2210              	.LBE559:
 2211              	.LBB575:
 2212              	.LBB551:
 2213              	.LBB546:
 138:../src/benchmark.c ****       int digitfound = 0;
 2214              		.loc 1 138 0
 2215 0bb0 0020A0E3 		mov	r2, #0
 2216              	.LBE546:
 2217              	.LBE551:
 2218              	.LBE575:
 2219              	.LBB576:
 2220              	.LBB568:
 2221              	.LBB562:
 139:../src/benchmark.c ****       const int units[] =
 2222              		.loc 1 139 0
 2223 0bb4 030084E8 		stmia	r4, {r0, r1}
 2224              	.LVL293:
 193:../src/benchmark.c **** int dhrystone (void)
 2225              		.loc 1 193 0
 2226 0bb8 5C108DE2 		add	r1, sp, #92
 2227              	.LBE562:
 2228              	.LBE568:
 2229              	.LBE576:
 2230              	.LBB577:
 2231              	.LBB552:
 2232              	.LBB547:
 136:../src/benchmark.c ****       int pos = 0;
 2233              		.loc 1 136 0
 2234 0bbc 0200A0E1 		mov	r0, r2
 2235              	.LVL294:
 2236              	.L132:
 2237              	.LBE547:
 2238              	.LBE552:
 2239              	.LBE577:
 2240              	.LBB578:
 2241              	.LBB569:
 2242              	.LBB563:
 156:../src/benchmark.c ****           unit  = units[i];
 2243              		.loc 1 156 0
 2244 0bc0 0430B1E5 		ldr	r3, [r1, #4]!
 2245              	.LVL295:
 159:../src/benchmark.c ****           while (number >= unit)
 2246              		.loc 1 159 0
 2247 0bc4 03005EE1 		cmp	lr, r3
 2248 0bc8 5C0300BA 		blt	.L128
 2249 0bcc 0020A0E3 		mov	r2, #0
 2250              	.LVL296:
 2251              	.L129:
 162:../src/benchmark.c ****               number -= unit;
 2252              		.loc 1 162 0
 2253 0bd0 0EE063E0 		rsb	lr, r3, lr
 2254              	.LVL297:
 159:../src/benchmark.c ****           while (number >= unit)
 2255              		.loc 1 159 0
 2256 0bd4 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2257              		.loc 1 161 0
 2258 0bd8 012082E2 		add	r2, r2, #1
 2259              	.LVL298:
 159:../src/benchmark.c ****           while (number >= unit)
 2260              		.loc 1 159 0
 2261 0bdc FBFFFFDA 		ble	.L129
 2262              	.LVL299:
 2263              	.L130:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2264              		.loc 1 166 0
 2265 0be0 88408DE2 		add	r4, sp, #136
 2266 0be4 003084E0 		add	r3, r4, r0
 2267              	.LVL300:
 2268 0be8 302082E2 		add	r2, r2, #48
 2269 0bec 782043E5 		strb	r2, [r3, #-120]
 2270 0bf0 010080E2 		add	r0, r0, #1
 2271              	.LVL301:
 2272 0bf4 0120A0E3 		mov	r2, #1
 2273              	.LVL302:
 2274              	.L131:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2275              		.loc 1 154 0
 2276 0bf8 04509DE5 		ldr	r5, [sp, #4]
 2277 0bfc 050051E1 		cmp	r1, r5
 2278 0c00 EEFFFF1A 		bne	.L132
 168:../src/benchmark.c ****       str[pos] = '\0';
 2279              		.loc 1 168 0
 2280 0c04 88708DE2 		add	r7, sp, #136
 2281 0c08 000087E0 		add	r0, r7, r0
 2282              	.LVL303:
 2283 0c0c 0030A0E3 		mov	r3, #0
 2284 0c10 783040E5 		strb	r3, [r0, #-120]
 2285              	.LVL304:
 2286              	.L133:
 2287              	.LBE563:
 2288              	.LBE569:
 2289              	.LBE578:
 362:../src/benchmark.c ****   puts_UART( buffer );
 2290              		.loc 1 362 0
 2291 0c14 10008DE2 		add	r0, sp, #16
 2292              	.LVL305:
 2293              	.LBB579:
 2294              	.LBB580:
 139:../src/benchmark.c ****       const int units[] =
 2295              		.loc 1 139 0
 2296 0c18 1C481FE5 		ldr	r4, .L425+176
 2297              	.LBE580:
 2298              	.LBE579:
 362:../src/benchmark.c ****   puts_UART( buffer );
 2299              		.loc 1 362 0
 2300 0c1c 00C08DE5 		str	ip, [sp, #0]
 2301 0c20 FEFFFFEB 		bl	puts_UART
 2302              	.LVL306:
 363:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 2303              		.loc 1 363 0
 2304 0c24 30081FE5 		ldr	r0, .L425+168
 2305 0c28 FEFFFFEB 		bl	puts_UART
 2306              	.LVL307:
 2307              	.LBB587:
 2308              	.LBB581:
 139:../src/benchmark.c ****       const int units[] =
 2309              		.loc 1 139 0
 2310 0c2c 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2311 0c30 60E08DE2 		add	lr, sp, #96
 2312 0c34 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2313 0c38 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2314 0c3c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2315 0c40 030094E8 		ldmia	r4, {r0, r1}
 2316              	.LBE581:
 2317              	.LBE587:
 2318              	.LBB588:
 2319              	.LBB570:
 2320              	.LBB564:
 136:../src/benchmark.c ****       int pos = 0;
 2321              		.loc 1 136 0
 2322 0c44 00C09DE5 		ldr	ip, [sp, #0]
 2323              	.LBE564:
 2324              	.LBE570:
 2325              	.LBE588:
 2326              	.LBB589:
 2327              	.LBB582:
 139:../src/benchmark.c ****       const int units[] =
 2328              		.loc 1 139 0
 2329 0c48 03008EE8 		stmia	lr, {r0, r1}
 2330              	.LVL308:
 2331              	.LBE582:
 2332              	.LBE589:
 2333              	.LBB590:
 2334              	.LBB571:
 2335              	.LBB565:
 138:../src/benchmark.c ****       int digitfound = 0;
 2336              		.loc 1 138 0
 2337 0c4c 0010A0E3 		mov	r1, #0
 2338              	.LBE565:
 2339              	.LBE571:
 2340              	.LBE590:
 2341              	.LBB591:
 2342              	.LBB583:
 193:../src/benchmark.c **** int dhrystone (void)
 2343              		.loc 1 193 0
 2344 0c50 5C008DE2 		add	r0, sp, #92
 2345              	.LBE583:
 2346              	.LBE591:
 2347              	.LBB592:
 2348              	.LBB572:
 2349              	.LBB566:
 2350 0c54 0230A0E3 		mov	r3, #2
 136:../src/benchmark.c ****       int pos = 0;
 2351              		.loc 1 136 0
 2352 0c58 01E0A0E1 		mov	lr, r1
 2353              	.LVL309:
 2354              	.L138:
 2355              	.LBE566:
 2356              	.LBE572:
 2357              	.LBE592:
 2358              	.LBB593:
 2359              	.LBB584:
 156:../src/benchmark.c ****           unit  = units[i];
 2360              		.loc 1 156 0
 2361 0c5c 0420B0E5 		ldr	r2, [r0, #4]!
 2362              	.LVL310:
 159:../src/benchmark.c ****           while (number >= unit)
 2363              		.loc 1 159 0
 2364 0c60 030052E1 		cmp	r2, r3
 2365 0c64 250300CA 		bgt	.L134
 2366 0c68 0010A0E3 		mov	r1, #0
 2367              	.LVL311:
 2368              	.L135:
 162:../src/benchmark.c ****               number -= unit;
 2369              		.loc 1 162 0
 2370 0c6c 033062E0 		rsb	r3, r2, r3
 2371              	.LVL312:
 159:../src/benchmark.c ****           while (number >= unit)
 2372              		.loc 1 159 0
 2373 0c70 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 2374              		.loc 1 161 0
 2375 0c74 011081E2 		add	r1, r1, #1
 2376              	.LVL313:
 159:../src/benchmark.c ****           while (number >= unit)
 2377              		.loc 1 159 0
 2378 0c78 FBFFFFDA 		ble	.L135
 2379              	.LVL314:
 2380              	.L136:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2381              		.loc 1 166 0
 2382 0c7c 88408DE2 		add	r4, sp, #136
 2383 0c80 0E2084E0 		add	r2, r4, lr
 2384              	.LVL315:
 2385 0c84 301081E2 		add	r1, r1, #48
 2386 0c88 781042E5 		strb	r1, [r2, #-120]
 2387 0c8c 01E08EE2 		add	lr, lr, #1
 2388              	.LVL316:
 2389 0c90 0110A0E3 		mov	r1, #1
 2390              	.LVL317:
 2391              	.L137:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2392              		.loc 1 154 0
 2393 0c94 04509DE5 		ldr	r5, [sp, #4]
 2394 0c98 050050E1 		cmp	r0, r5
 2395 0c9c EEFFFF1A 		bne	.L138
 168:../src/benchmark.c ****       str[pos] = '\0';
 2396              		.loc 1 168 0
 2397 0ca0 88708DE2 		add	r7, sp, #136
 2398 0ca4 0EE087E0 		add	lr, r7, lr
 2399              	.LVL318:
 2400 0ca8 0050A0E3 		mov	r5, #0
 2401 0cac 78504EE5 		strb	r5, [lr, #-120]
 2402              	.LBE584:
 2403              	.LBE593:
 365:../src/benchmark.c ****   puts_UART( buffer );
 2404              		.loc 1 365 0
 2405 0cb0 10008DE2 		add	r0, sp, #16
 2406              	.LVL319:
 2407 0cb4 00C08DE5 		str	ip, [sp, #0]
 2408 0cb8 FEFFFFEB 		bl	puts_UART
 2409              	.LVL320:
 366:../src/benchmark.c ****   puts_UART ("  Int_Comp:          %d\n");
 2410              		.loc 1 366 0
 2411 0cbc DC081FE5 		ldr	r0, .L425+148
 2412 0cc0 FEFFFFEB 		bl	puts_UART
 2413              	.LVL321:
 367:../src/benchmark.c ****   int_to_a(buffer,  Ptr_Glob->variant.var_1.Int_Comp);
 2414              		.loc 1 367 0
 2415 0cc4 003099E5 		ldr	r3, [r9, #0]
 2416 0cc8 0CE093E5 		ldr	lr, [r3, #12]
 2417              	.LVL322:
 2418              	.LBB594:
 2419              	.LBB595:
 133:../src/benchmark.c ****   if (number > 0)
 2420              		.loc 1 133 0
 2421 0ccc 05005EE1 		cmp	lr, r5
 2422 0cd0 00C09DE5 		ldr	ip, [sp, #0]
 2423 0cd4 7D0300DA 		ble	.L139
 2424              	.LVL323:
 2425              	.LBB596:
 139:../src/benchmark.c ****       const int units[] =
 2426              		.loc 1 139 0
 2427 0cd8 DC781FE5 		ldr	r7, .L425+176
 2428 0cdc 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2429 0ce0 60408DE2 		add	r4, sp, #96
 2430 0ce4 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2431 0ce8 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2432 0cec 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2433 0cf0 030097E8 		ldmia	r7, {r0, r1}
 2434 0cf4 030084E8 		stmia	r4, {r0, r1}
 2435              	.LVL324:
 193:../src/benchmark.c **** int dhrystone (void)
 2436              		.loc 1 193 0
 2437 0cf8 5C108DE2 		add	r1, sp, #92
 2438              	.LBE596:
 2439              	.LBE595:
 2440              	.LBE594:
 2441              	.LBB611:
 2442              	.LBB585:
 136:../src/benchmark.c ****       int pos = 0;
 2443              		.loc 1 136 0
 2444 0cfc 0500A0E1 		mov	r0, r5
 2445              	.LVL325:
 2446              	.L144:
 2447              	.LBE585:
 2448              	.LBE611:
 2449              	.LBB612:
 2450              	.LBB604:
 2451              	.LBB597:
 156:../src/benchmark.c ****           unit  = units[i];
 2452              		.loc 1 156 0
 2453 0d00 0430B1E5 		ldr	r3, [r1, #4]!
 2454              	.LVL326:
 159:../src/benchmark.c ****           while (number >= unit)
 2455              		.loc 1 159 0
 2456 0d04 0E0053E1 		cmp	r3, lr
 2457 0d08 2C0300CA 		bgt	.L140
 2458 0d0c 0020A0E3 		mov	r2, #0
 2459              	.LVL327:
 2460              	.L141:
 162:../src/benchmark.c ****               number -= unit;
 2461              		.loc 1 162 0
 2462 0d10 0EE063E0 		rsb	lr, r3, lr
 2463              	.LVL328:
 159:../src/benchmark.c ****           while (number >= unit)
 2464              		.loc 1 159 0
 2465 0d14 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2466              		.loc 1 161 0
 2467 0d18 012082E2 		add	r2, r2, #1
 2468              	.LVL329:
 159:../src/benchmark.c ****           while (number >= unit)
 2469              		.loc 1 159 0
 2470 0d1c FBFFFFDA 		ble	.L141
 2471              	.LVL330:
 2472              	.L142:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2473              		.loc 1 166 0
 2474 0d20 88408DE2 		add	r4, sp, #136
 2475 0d24 003084E0 		add	r3, r4, r0
 2476              	.LVL331:
 2477 0d28 302082E2 		add	r2, r2, #48
 2478 0d2c 782043E5 		strb	r2, [r3, #-120]
 2479 0d30 010080E2 		add	r0, r0, #1
 2480              	.LVL332:
 2481 0d34 0150A0E3 		mov	r5, #1
 2482              	.LVL333:
 2483              	.L143:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2484              		.loc 1 154 0
 2485 0d38 04709DE5 		ldr	r7, [sp, #4]
 2486 0d3c 070051E1 		cmp	r1, r7
 2487 0d40 EEFFFF1A 		bne	.L144
 168:../src/benchmark.c ****       str[pos] = '\0';
 2488              		.loc 1 168 0
 2489 0d44 88E08DE2 		add	lr, sp, #136
 2490              	.LVL334:
 2491 0d48 00008EE0 		add	r0, lr, r0
 2492              	.LVL335:
 2493 0d4c 0030A0E3 		mov	r3, #0
 2494 0d50 783040E5 		strb	r3, [r0, #-120]
 2495              	.LVL336:
 2496              	.L145:
 2497              	.LBE597:
 2498              	.LBE604:
 2499              	.LBE612:
 368:../src/benchmark.c ****   puts_UART( buffer );
 2500              		.loc 1 368 0
 2501 0d54 10008DE2 		add	r0, sp, #16
 2502              	.LVL337:
 2503              	.LBB613:
 2504              	.LBB614:
 139:../src/benchmark.c ****       const int units[] =
 2505              		.loc 1 139 0
 2506 0d58 5C491FE5 		ldr	r4, .L425+176
 2507              	.LBE614:
 2508              	.LBE613:
 368:../src/benchmark.c ****   puts_UART( buffer );
 2509              		.loc 1 368 0
 2510 0d5c 00C08DE5 		str	ip, [sp, #0]
 2511 0d60 FEFFFFEB 		bl	puts_UART
 2512              	.LVL338:
 369:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 2513              		.loc 1 369 0
 2514 0d64 70091FE5 		ldr	r0, .L425+168
 2515 0d68 FEFFFFEB 		bl	puts_UART
 2516              	.LVL339:
 2517              	.LBB621:
 2518              	.LBB615:
 139:../src/benchmark.c ****       const int units[] =
 2519              		.loc 1 139 0
 2520 0d6c 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2521 0d70 60E08DE2 		add	lr, sp, #96
 2522 0d74 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2523 0d78 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2524 0d7c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2525 0d80 030094E8 		ldmia	r4, {r0, r1}
 2526              	.LBE615:
 2527              	.LBE621:
 2528              	.LBB622:
 2529              	.LBB605:
 2530              	.LBB598:
 136:../src/benchmark.c ****       int pos = 0;
 2531              		.loc 1 136 0
 2532 0d84 00C09DE5 		ldr	ip, [sp, #0]
 2533              	.LBE598:
 2534              	.LBE605:
 2535              	.LBE622:
 2536              	.LBB623:
 2537              	.LBB616:
 139:../src/benchmark.c ****       const int units[] =
 2538              		.loc 1 139 0
 2539 0d88 03008EE8 		stmia	lr, {r0, r1}
 2540              	.LVL340:
 2541              	.LBE616:
 2542              	.LBE623:
 2543              	.LBB624:
 2544              	.LBB606:
 2545              	.LBB599:
 138:../src/benchmark.c ****       int digitfound = 0;
 2546              		.loc 1 138 0
 2547 0d8c 0010A0E3 		mov	r1, #0
 2548              	.LBE599:
 2549              	.LBE606:
 2550              	.LBE624:
 2551              	.LBB625:
 2552              	.LBB617:
 193:../src/benchmark.c **** int dhrystone (void)
 2553              		.loc 1 193 0
 2554 0d90 5C008DE2 		add	r0, sp, #92
 2555              	.LBE617:
 2556              	.LBE625:
 2557              	.LBB626:
 2558              	.LBB607:
 2559              	.LBB600:
 2560 0d94 1130A0E3 		mov	r3, #17
 136:../src/benchmark.c ****       int pos = 0;
 2561              		.loc 1 136 0
 2562 0d98 01E0A0E1 		mov	lr, r1
 2563              	.LVL341:
 2564              	.L151:
 2565              	.LBE600:
 2566              	.LBE607:
 2567              	.LBE626:
 2568              	.LBB627:
 2569              	.LBB618:
 156:../src/benchmark.c ****           unit  = units[i];
 2570              		.loc 1 156 0
 2571 0d9c 0420B0E5 		ldr	r2, [r0, #4]!
 2572              	.LVL342:
 159:../src/benchmark.c ****           while (number >= unit)
 2573              		.loc 1 159 0
 2574 0da0 030052E1 		cmp	r2, r3
 2575 0da4 D10200CA 		bgt	.L147
 2576 0da8 0010A0E3 		mov	r1, #0
 2577              	.LVL343:
 2578              	.L148:
 162:../src/benchmark.c ****               number -= unit;
 2579              		.loc 1 162 0
 2580 0dac 033062E0 		rsb	r3, r2, r3
 2581              	.LVL344:
 159:../src/benchmark.c ****           while (number >= unit)
 2582              		.loc 1 159 0
 2583 0db0 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 2584              		.loc 1 161 0
 2585 0db4 011081E2 		add	r1, r1, #1
 2586              	.LVL345:
 159:../src/benchmark.c ****           while (number >= unit)
 2587              		.loc 1 159 0
 2588 0db8 FBFFFFDA 		ble	.L148
 2589              	.LVL346:
 2590              	.L149:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2591              		.loc 1 166 0
 2592 0dbc 88408DE2 		add	r4, sp, #136
 2593 0dc0 0E2084E0 		add	r2, r4, lr
 2594              	.LVL347:
 2595 0dc4 301081E2 		add	r1, r1, #48
 2596 0dc8 781042E5 		strb	r1, [r2, #-120]
 2597 0dcc 01E08EE2 		add	lr, lr, #1
 2598              	.LVL348:
 2599 0dd0 0110A0E3 		mov	r1, #1
 2600              	.LVL349:
 2601              	.L150:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2602              		.loc 1 154 0
 2603 0dd4 04509DE5 		ldr	r5, [sp, #4]
 2604 0dd8 050050E1 		cmp	r0, r5
 2605 0ddc EEFFFF1A 		bne	.L151
 168:../src/benchmark.c ****       str[pos] = '\0';
 2606              		.loc 1 168 0
 2607 0de0 88708DE2 		add	r7, sp, #136
 2608 0de4 0EE087E0 		add	lr, r7, lr
 2609              	.LVL350:
 2610 0de8 0040A0E3 		mov	r4, #0
 2611 0dec 78404EE5 		strb	r4, [lr, #-120]
 2612              	.LBE618:
 2613              	.LBE627:
 371:../src/benchmark.c ****   puts_UART( buffer );
 2614              		.loc 1 371 0
 2615 0df0 10008DE2 		add	r0, sp, #16
 2616              	.LVL351:
 2617 0df4 00C08DE5 		str	ip, [sp, #0]
 2618 0df8 FEFFFFEB 		bl	puts_UART
 2619              	.LVL352:
 372:../src/benchmark.c ****   puts_UART ("  Str_Comp:          %s\n");
 2620              		.loc 1 372 0
 2621 0dfc 180A1FE5 		ldr	r0, .L425+152
 2622 0e00 FEFFFFEB 		bl	puts_UART
 2623              	.LVL353:
 373:../src/benchmark.c ****   puts_UART( Ptr_Glob->variant.var_1.Str_Comp );
 2624              		.loc 1 373 0
 2625 0e04 000099E5 		ldr	r0, [r9, #0]
 2626 0e08 100080E2 		add	r0, r0, #16
 2627 0e0c FEFFFFEB 		bl	puts_UART
 2628              	.LVL354:
 374:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
 2629              		.loc 1 374 0
 2630 0e10 240A1FE5 		ldr	r0, .L425+160
 2631 0e14 FEFFFFEB 		bl	puts_UART
 2632              	.LVL355:
 375:../src/benchmark.c ****   puts_UART ("Next_Ptr_Glob->\n");
 2633              		.loc 1 375 0
 2634 0e18 4C0A1FE5 		ldr	r0, .L425+128
 2635 0e1c FEFFFFEB 		bl	puts_UART
 2636              	.LVL356:
 376:../src/benchmark.c ****   puts_UART ("  Ptr_Comp:          %d\n");
 2637              		.loc 1 376 0
 2638 0e20 500A1FE5 		ldr	r0, .L425+132
 2639 0e24 FEFFFFEB 		bl	puts_UART
 2640              	.LVL357:
 377:../src/benchmark.c ****   int_to_a(buffer, (int) Next_Ptr_Glob->Ptr_Comp);
 2641              		.loc 1 377 0
 2642 0e28 40EA1FE5 		ldr	lr, .L425+156
 2643 0e2c 00309EE5 		ldr	r3, [lr, #0]
 2644 0e30 00E093E5 		ldr	lr, [r3, #0]
 2645              	.LVL358:
 2646              	.LBB628:
 2647              	.LBB629:
 133:../src/benchmark.c ****   if (number > 0)
 2648              		.loc 1 133 0
 2649 0e34 04005EE1 		cmp	lr, r4
 2650 0e38 00C09DE5 		ldr	ip, [sp, #0]
 2651 0e3c 1E0300DA 		ble	.L152
 2652              	.LVL359:
 2653              	.LBB630:
 139:../src/benchmark.c ****       const int units[] =
 2654              		.loc 1 139 0
 2655 0e40 447A1FE5 		ldr	r7, .L425+176
 2656 0e44 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2657 0e48 60508DE2 		add	r5, sp, #96
 2658 0e4c 0F00A5E8 		stmia	r5!, {r0, r1, r2, r3}
 2659 0e50 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2660 0e54 0F00A5E8 		stmia	r5!, {r0, r1, r2, r3}
 2661 0e58 030097E8 		ldmia	r7, {r0, r1}
 2662 0e5c 030085E8 		stmia	r5, {r0, r1}
 2663              	.LVL360:
 193:../src/benchmark.c **** int dhrystone (void)
 2664              		.loc 1 193 0
 2665 0e60 5C108DE2 		add	r1, sp, #92
 2666              	.LBE630:
 2667              	.LBE629:
 2668              	.LBE628:
 2669              	.LBB643:
 2670              	.LBB619:
 136:../src/benchmark.c ****       int pos = 0;
 2671              		.loc 1 136 0
 2672 0e64 0400A0E1 		mov	r0, r4
 2673              	.LVL361:
 2674              	.L157:
 2675              	.LBE619:
 2676              	.LBE643:
 2677              	.LBB644:
 2678              	.LBB637:
 2679              	.LBB631:
 156:../src/benchmark.c ****           unit  = units[i];
 2680              		.loc 1 156 0
 2681 0e68 0430B1E5 		ldr	r3, [r1, #4]!
 2682              	.LVL362:
 159:../src/benchmark.c ****           while (number >= unit)
 2683              		.loc 1 159 0
 2684 0e6c 0E0053E1 		cmp	r3, lr
 2685 0e70 CE0200CA 		bgt	.L153
 2686 0e74 0020A0E3 		mov	r2, #0
 2687              	.LVL363:
 2688              	.L154:
 162:../src/benchmark.c ****               number -= unit;
 2689              		.loc 1 162 0
 2690 0e78 0EE063E0 		rsb	lr, r3, lr
 2691              	.LVL364:
 159:../src/benchmark.c ****           while (number >= unit)
 2692              		.loc 1 159 0
 2693 0e7c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2694              		.loc 1 161 0
 2695 0e80 012082E2 		add	r2, r2, #1
 2696              	.LVL365:
 159:../src/benchmark.c ****           while (number >= unit)
 2697              		.loc 1 159 0
 2698 0e84 FBFFFFDA 		ble	.L154
 2699              	.LVL366:
 2700              	.L155:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2701              		.loc 1 166 0
 2702 0e88 88408DE2 		add	r4, sp, #136
 2703 0e8c 003084E0 		add	r3, r4, r0
 2704              	.LVL367:
 2705 0e90 302082E2 		add	r2, r2, #48
 2706 0e94 782043E5 		strb	r2, [r3, #-120]
 2707 0e98 010080E2 		add	r0, r0, #1
 2708              	.LVL368:
 2709 0e9c 0140A0E3 		mov	r4, #1
 2710              	.LVL369:
 2711              	.L156:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2712              		.loc 1 154 0
 2713 0ea0 04509DE5 		ldr	r5, [sp, #4]
 2714 0ea4 050051E1 		cmp	r1, r5
 2715 0ea8 EEFFFF1A 		bne	.L157
 168:../src/benchmark.c ****       str[pos] = '\0';
 2716              		.loc 1 168 0
 2717 0eac 88708DE2 		add	r7, sp, #136
 2718 0eb0 000087E0 		add	r0, r7, r0
 2719              	.LVL370:
 2720 0eb4 0030A0E3 		mov	r3, #0
 2721 0eb8 783040E5 		strb	r3, [r0, #-120]
 2722              	.LVL371:
 2723              	.L158:
 2724              	.LBE631:
 2725              	.LBE637:
 2726              	.LBE644:
 378:../src/benchmark.c ****   puts_UART( buffer );
 2727              		.loc 1 378 0
 2728 0ebc 10008DE2 		add	r0, sp, #16
 2729              	.LVL372:
 2730 0ec0 00C08DE5 		str	ip, [sp, #0]
 2731 0ec4 FEFFFFEB 		bl	puts_UART
 2732              	.LVL373:
 379:../src/benchmark.c ****   puts_UART ("        should be:   (implementation-dependent), same as above\n");
 2733              		.loc 1 379 0
 2734 0ec8 F40A1FE5 		ldr	r0, .L425+136
 2735 0ecc FEFFFFEB 		bl	puts_UART
 2736              	.LVL374:
 380:../src/benchmark.c ****   puts_UART ("  Discr:             %d\n");
 2737              		.loc 1 380 0
 2738 0ed0 F80A1FE5 		ldr	r0, .L425+140
 2739 0ed4 FEFFFFEB 		bl	puts_UART
 2740              	.LVL375:
 381:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->Discr);
 2741              		.loc 1 381 0
 2742 0ed8 F0EA1FE5 		ldr	lr, .L425+156
 2743 0edc 00309EE5 		ldr	r3, [lr, #0]
 2744 0ee0 04E0D3E5 		ldrb	lr, [r3, #4]	@ zero_extendqisi2
 2745              	.LVL376:
 2746              	.LBB645:
 2747              	.LBB646:
 133:../src/benchmark.c ****   if (number > 0)
 2748              		.loc 1 133 0
 2749 0ee4 00005EE3 		cmp	lr, #0
 2750 0ee8 00C09DE5 		ldr	ip, [sp, #0]
 2751 0eec 2403000A 		beq	.L160
 2752              	.LVL377:
 2753              	.LBB647:
 139:../src/benchmark.c ****       const int units[] =
 2754              		.loc 1 139 0
 2755 0ef0 F45A1FE5 		ldr	r5, .L425+176
 2756 0ef4 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2757 0ef8 60408DE2 		add	r4, sp, #96
 2758 0efc 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2759 0f00 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 2760 0f04 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2761 0f08 030095E8 		ldmia	r5, {r0, r1}
 2762              	.LBE647:
 2763              	.LBE646:
 2764              	.LBE645:
 2765              	.LBB657:
 2766              	.LBB638:
 2767              	.LBB632:
 138:../src/benchmark.c ****       int digitfound = 0;
 2768              		.loc 1 138 0
 2769 0f0c 0020A0E3 		mov	r2, #0
 2770              	.LBE632:
 2771              	.LBE638:
 2772              	.LBE657:
 2773              	.LBB658:
 2774              	.LBB652:
 2775              	.LBB648:
 139:../src/benchmark.c ****       const int units[] =
 2776              		.loc 1 139 0
 2777 0f10 030084E8 		stmia	r4, {r0, r1}
 2778              	.LVL378:
 193:../src/benchmark.c **** int dhrystone (void)
 2779              		.loc 1 193 0
 2780 0f14 5C108DE2 		add	r1, sp, #92
 2781              	.LBE648:
 2782              	.LBE652:
 2783              	.LBE658:
 2784              	.LBB659:
 2785              	.LBB639:
 2786              	.LBB633:
 136:../src/benchmark.c ****       int pos = 0;
 2787              		.loc 1 136 0
 2788 0f18 0200A0E1 		mov	r0, r2
 2789              	.LVL379:
 2790              	.L165:
 2791              	.LBE633:
 2792              	.LBE639:
 2793              	.LBE659:
 2794              	.LBB660:
 2795              	.LBB653:
 2796              	.LBB649:
 156:../src/benchmark.c ****           unit  = units[i];
 2797              		.loc 1 156 0
 2798 0f1c 0430B1E5 		ldr	r3, [r1, #4]!
 2799              	.LVL380:
 159:../src/benchmark.c ****           while (number >= unit)
 2800              		.loc 1 159 0
 2801 0f20 0E0053E1 		cmp	r3, lr
 2802 0f24 C10200CA 		bgt	.L161
 2803 0f28 0020A0E3 		mov	r2, #0
 2804              	.LVL381:
 2805              	.L162:
 162:../src/benchmark.c ****               number -= unit;
 2806              		.loc 1 162 0
 2807 0f2c 0EE063E0 		rsb	lr, r3, lr
 2808              	.LVL382:
 159:../src/benchmark.c ****           while (number >= unit)
 2809              		.loc 1 159 0
 2810 0f30 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2811              		.loc 1 161 0
 2812 0f34 012082E2 		add	r2, r2, #1
 2813              	.LVL383:
 159:../src/benchmark.c ****           while (number >= unit)
 2814              		.loc 1 159 0
 2815 0f38 FBFFFFDA 		ble	.L162
 2816              	.LVL384:
 2817              	.L163:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2818              		.loc 1 166 0
 2819 0f3c 88408DE2 		add	r4, sp, #136
 2820 0f40 003084E0 		add	r3, r4, r0
 2821              	.LVL385:
 2822 0f44 302082E2 		add	r2, r2, #48
 2823 0f48 782043E5 		strb	r2, [r3, #-120]
 2824 0f4c 010080E2 		add	r0, r0, #1
 2825              	.LVL386:
 2826 0f50 0120A0E3 		mov	r2, #1
 2827              	.LVL387:
 2828              	.L164:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2829              		.loc 1 154 0
 2830 0f54 04509DE5 		ldr	r5, [sp, #4]
 2831 0f58 050051E1 		cmp	r1, r5
 2832 0f5c EEFFFF1A 		bne	.L165
 168:../src/benchmark.c ****       str[pos] = '\0';
 2833              		.loc 1 168 0
 2834 0f60 88708DE2 		add	r7, sp, #136
 2835 0f64 000087E0 		add	r0, r7, r0
 2836              	.LVL388:
 2837 0f68 0030A0E3 		mov	r3, #0
 2838 0f6c 783040E5 		strb	r3, [r0, #-120]
 2839              	.LVL389:
 2840              	.L166:
 2841              	.LBE649:
 2842              	.LBE653:
 2843              	.LBE660:
 382:../src/benchmark.c ****   puts_UART( buffer );
 2844              		.loc 1 382 0
 2845 0f70 10008DE2 		add	r0, sp, #16
 2846              	.LVL390:
 2847 0f74 00C08DE5 		str	ip, [sp, #0]
 2848 0f78 FEFFFFEB 		bl	puts_UART
 2849              	.LVL391:
 383:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 2850              		.loc 1 383 0
 2851 0f7c 880B1FE5 		ldr	r0, .L425+168
 2852 0f80 FEFFFFEB 		bl	puts_UART
 2853              	.LVL392:
 2854              	.LBB661:
 2855              	.LBB662:
 173:../src/benchmark.c ****       str[1] = '\0';
 2856              		.loc 1 173 0
 2857 0f84 0050A0E3 		mov	r5, #0
 2858              	.LBE662:
 2859              	.LBE661:
 385:../src/benchmark.c ****   puts_UART( buffer );
 2860              		.loc 1 385 0
 2861 0f88 10008DE2 		add	r0, sp, #16
 2862              	.LVL393:
 2863              	.LBB664:
 2864              	.LBB663:
 172:../src/benchmark.c ****       str[0] = '0';
 2865              		.loc 1 172 0
 2866 0f8c 3040A0E3 		mov	r4, #48
 2867 0f90 1040CDE5 		strb	r4, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 2868              		.loc 1 173 0
 2869 0f94 1150CDE5 		strb	r5, [sp, #17]
 2870              	.LBE663:
 2871              	.LBE664:
 385:../src/benchmark.c ****   puts_UART( buffer );
 2872              		.loc 1 385 0
 2873 0f98 FEFFFFEB 		bl	puts_UART
 2874              	.LVL394:
 386:../src/benchmark.c ****   puts_UART ("  Enum_Comp:         %d\n");
 2875              		.loc 1 386 0
 2876 0f9c C00B1FE5 		ldr	r0, .L425+144
 2877 0fa0 FEFFFFEB 		bl	puts_UART
 2878              	.LVL395:
 387:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->variant.var_1.Enum_Comp);
 2879              		.loc 1 387 0
 2880 0fa4 BCEB1FE5 		ldr	lr, .L425+156
 2881 0fa8 00309EE5 		ldr	r3, [lr, #0]
 2882 0fac 08E0D3E5 		ldrb	lr, [r3, #8]	@ zero_extendqisi2
 2883              	.LVL396:
 2884              	.LBB665:
 2885              	.LBB666:
 133:../src/benchmark.c ****   if (number > 0)
 2886              		.loc 1 133 0
 2887 0fb0 05005EE1 		cmp	lr, r5
 2888 0fb4 00C09DE5 		ldr	ip, [sp, #0]
 2889 0fb8 EE02000A 		beq	.L167
 2890              	.LVL397:
 2891              	.LBB667:
 139:../src/benchmark.c ****       const int units[] =
 2892              		.loc 1 139 0
 2893 0fbc C07B1FE5 		ldr	r7, .L425+176
 2894 0fc0 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2895 0fc4 60408DE2 		add	r4, sp, #96
 2896 0fc8 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2897 0fcc 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 2898 0fd0 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 2899 0fd4 030097E8 		ldmia	r7, {r0, r1}
 2900 0fd8 030084E8 		stmia	r4, {r0, r1}
 2901              	.LVL398:
 193:../src/benchmark.c **** int dhrystone (void)
 2902              		.loc 1 193 0
 2903 0fdc 5C108DE2 		add	r1, sp, #92
 2904              	.LBE667:
 2905              	.LBE666:
 2906              	.LBE665:
 2907              	.LBB679:
 2908              	.LBB654:
 2909              	.LBB650:
 136:../src/benchmark.c ****       int pos = 0;
 2910              		.loc 1 136 0
 2911 0fe0 0500A0E1 		mov	r0, r5
 2912              	.LVL399:
 2913              	.L172:
 2914              	.LBE650:
 2915              	.LBE654:
 2916              	.LBE679:
 2917              	.LBB680:
 2918              	.LBB673:
 2919              	.LBB668:
 156:../src/benchmark.c ****           unit  = units[i];
 2920              		.loc 1 156 0
 2921 0fe4 0430B1E5 		ldr	r3, [r1, #4]!
 2922              	.LVL400:
 159:../src/benchmark.c ****           while (number >= unit)
 2923              		.loc 1 159 0
 2924 0fe8 0E0053E1 		cmp	r3, lr
 2925 0fec 8B0200CA 		bgt	.L168
 2926 0ff0 0020A0E3 		mov	r2, #0
 2927              	.LVL401:
 2928              	.L169:
 162:../src/benchmark.c ****               number -= unit;
 2929              		.loc 1 162 0
 2930 0ff4 0EE063E0 		rsb	lr, r3, lr
 2931              	.LVL402:
 159:../src/benchmark.c ****           while (number >= unit)
 2932              		.loc 1 159 0
 2933 0ff8 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 2934              		.loc 1 161 0
 2935 0ffc 012082E2 		add	r2, r2, #1
 2936              	.LVL403:
 159:../src/benchmark.c ****           while (number >= unit)
 2937              		.loc 1 159 0
 2938 1000 FBFFFFDA 		ble	.L169
 165:../src/benchmark.c ****           if (digit != 0) digitfound = 1;
 2939              		.loc 1 165 0
 2940 1004 0150A0E3 		mov	r5, #1
 2941              	.LVL404:
 2942              	.L170:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 2943              		.loc 1 166 0
 2944 1008 88408DE2 		add	r4, sp, #136
 2945 100c 003084E0 		add	r3, r4, r0
 2946              	.LVL405:
 2947 1010 302082E2 		add	r2, r2, #48
 2948 1014 782043E5 		strb	r2, [r3, #-120]
 2949 1018 010080E2 		add	r0, r0, #1
 2950              	.LVL406:
 2951              	.L171:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 2952              		.loc 1 154 0
 2953 101c 04709DE5 		ldr	r7, [sp, #4]
 2954 1020 070051E1 		cmp	r1, r7
 2955 1024 EEFFFF1A 		bne	.L172
 168:../src/benchmark.c ****       str[pos] = '\0';
 2956              		.loc 1 168 0
 2957 1028 88E08DE2 		add	lr, sp, #136
 2958              	.LVL407:
 2959 102c 00008EE0 		add	r0, lr, r0
 2960              	.LVL408:
 2961 1030 0030A0E3 		mov	r3, #0
 2962 1034 783040E5 		strb	r3, [r0, #-120]
 2963              	.LVL409:
 2964              	.L173:
 2965              	.LBE668:
 2966              	.LBE673:
 2967              	.LBE680:
 388:../src/benchmark.c ****   puts_UART( buffer );
 2968              		.loc 1 388 0
 2969 1038 10008DE2 		add	r0, sp, #16
 2970              	.LVL410:
 2971              	.LBB681:
 2972              	.LBB682:
 2973              	.LBB683:
 139:../src/benchmark.c ****       const int units[] =
 2974              		.loc 1 139 0
 2975 103c 404C1FE5 		ldr	r4, .L425+176
 2976              	.LBE683:
 2977              	.LBE682:
 2978              	.LBE681:
 388:../src/benchmark.c ****   puts_UART( buffer );
 2979              		.loc 1 388 0
 2980 1040 00C08DE5 		str	ip, [sp, #0]
 2981 1044 FEFFFFEB 		bl	puts_UART
 2982              	.LVL411:
 389:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 2983              		.loc 1 389 0
 2984 1048 540C1FE5 		ldr	r0, .L425+168
 2985 104c FEFFFFEB 		bl	puts_UART
 2986              	.LVL412:
 2987              	.LBB696:
 2988              	.LBB690:
 2989              	.LBB684:
 139:../src/benchmark.c ****       const int units[] =
 2990              		.loc 1 139 0
 2991 1050 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2992 1054 60E08DE2 		add	lr, sp, #96
 2993 1058 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2994 105c 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 2995 1060 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 2996 1064 030094E8 		ldmia	r4, {r0, r1}
 2997              	.LBE684:
 2998              	.LBE690:
 2999              	.LBE696:
 3000              	.LBB697:
 3001              	.LBB674:
 3002              	.LBB669:
 136:../src/benchmark.c ****       int pos = 0;
 3003              		.loc 1 136 0
 3004 1068 00C09DE5 		ldr	ip, [sp, #0]
 3005              	.LBE669:
 3006              	.LBE674:
 3007              	.LBE697:
 3008              	.LBB698:
 3009              	.LBB691:
 3010              	.LBB685:
 139:../src/benchmark.c ****       const int units[] =
 3011              		.loc 1 139 0
 3012 106c 03008EE8 		stmia	lr, {r0, r1}
 3013              	.LVL413:
 3014              	.LBE685:
 3015              	.LBE691:
 3016              	.LBE698:
 3017              	.LBB699:
 3018              	.LBB675:
 3019              	.LBB670:
 138:../src/benchmark.c ****       int digitfound = 0;
 3020              		.loc 1 138 0
 3021 1070 0010A0E3 		mov	r1, #0
 3022              	.LBE670:
 3023              	.LBE675:
 3024              	.LBE699:
 3025              	.LBB700:
 3026              	.LBB692:
 3027              	.LBB686:
 193:../src/benchmark.c **** int dhrystone (void)
 3028              		.loc 1 193 0
 3029 1074 5C008DE2 		add	r0, sp, #92
 3030              	.LBE686:
 3031              	.LBE692:
 3032              	.LBE700:
 3033              	.LBB701:
 3034              	.LBB676:
 3035              	.LBB671:
 3036 1078 0130A0E3 		mov	r3, #1
 136:../src/benchmark.c ****       int pos = 0;
 3037              		.loc 1 136 0
 3038 107c 01E0A0E1 		mov	lr, r1
 3039              	.LVL414:
 3040              	.L178:
 3041              	.LBE671:
 3042              	.LBE676:
 3043              	.LBE701:
 3044              	.LBB702:
 3045              	.LBB693:
 3046              	.LBB687:
 156:../src/benchmark.c ****           unit  = units[i];
 3047              		.loc 1 156 0
 3048 1080 0420B0E5 		ldr	r2, [r0, #4]!
 3049              	.LVL415:
 159:../src/benchmark.c ****           while (number >= unit)
 3050              		.loc 1 159 0
 3051 1084 030052E1 		cmp	r2, r3
 3052 1088 140200CA 		bgt	.L174
 3053 108c 0010A0E3 		mov	r1, #0
 3054              	.LVL416:
 3055              	.L175:
 162:../src/benchmark.c ****               number -= unit;
 3056              		.loc 1 162 0
 3057 1090 033062E0 		rsb	r3, r2, r3
 3058              	.LVL417:
 159:../src/benchmark.c ****           while (number >= unit)
 3059              		.loc 1 159 0
 3060 1094 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3061              		.loc 1 161 0
 3062 1098 011081E2 		add	r1, r1, #1
 3063              	.LVL418:
 159:../src/benchmark.c ****           while (number >= unit)
 3064              		.loc 1 159 0
 3065 109c FBFFFFDA 		ble	.L175
 3066              	.LVL419:
 3067              	.L176:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3068              		.loc 1 166 0
 3069 10a0 88408DE2 		add	r4, sp, #136
 3070 10a4 0E2084E0 		add	r2, r4, lr
 3071              	.LVL420:
 3072 10a8 301081E2 		add	r1, r1, #48
 3073 10ac 781042E5 		strb	r1, [r2, #-120]
 3074 10b0 01E08EE2 		add	lr, lr, #1
 3075              	.LVL421:
 3076 10b4 0110A0E3 		mov	r1, #1
 3077              	.LVL422:
 3078              	.L177:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3079              		.loc 1 154 0
 3080 10b8 04509DE5 		ldr	r5, [sp, #4]
 3081 10bc 050050E1 		cmp	r0, r5
 3082 10c0 EEFFFF1A 		bne	.L178
 168:../src/benchmark.c ****       str[pos] = '\0';
 3083              		.loc 1 168 0
 3084 10c4 88708DE2 		add	r7, sp, #136
 3085 10c8 0EE087E0 		add	lr, r7, lr
 3086              	.LVL423:
 3087 10cc 0050A0E3 		mov	r5, #0
 3088 10d0 78504EE5 		strb	r5, [lr, #-120]
 3089              	.LBE687:
 3090              	.LBE693:
 3091              	.LBE702:
 391:../src/benchmark.c ****   puts_UART( buffer );
 3092              		.loc 1 391 0
 3093 10d4 10008DE2 		add	r0, sp, #16
 3094              	.LVL424:
 3095 10d8 00C08DE5 		str	ip, [sp, #0]
 3096 10dc FEFFFFEB 		bl	puts_UART
 3097              	.LVL425:
 392:../src/benchmark.c ****   puts_UART ("  Int_Comp:          %d\n");
 3098              		.loc 1 392 0
 3099 10e0 000D1FE5 		ldr	r0, .L425+148
 3100 10e4 FEFFFFEB 		bl	puts_UART
 3101              	.LVL426:
 393:../src/benchmark.c ****   int_to_a(buffer, Next_Ptr_Glob->variant.var_1.Int_Comp);
 3102              		.loc 1 393 0
 3103 10e8 00ED1FE5 		ldr	lr, .L425+156
 3104 10ec 00309EE5 		ldr	r3, [lr, #0]
 3105 10f0 0CE093E5 		ldr	lr, [r3, #12]
 3106              	.LVL427:
 3107              	.LBB703:
 3108              	.LBB704:
 133:../src/benchmark.c ****   if (number > 0)
 3109              		.loc 1 133 0
 3110 10f4 05005EE1 		cmp	lr, r5
 3111 10f8 00C09DE5 		ldr	ip, [sp, #0]
 3112 10fc 690200DA 		ble	.L179
 3113              	.LVL428:
 3114              	.LBB705:
 139:../src/benchmark.c ****       const int units[] =
 3115              		.loc 1 139 0
 3116 1100 047D1FE5 		ldr	r7, .L425+176
 3117 1104 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 3118 1108 60408DE2 		add	r4, sp, #96
 3119 110c 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 3120 1110 0F00B7E8 		ldmia	r7!, {r0, r1, r2, r3}
 3121 1114 0F00A4E8 		stmia	r4!, {r0, r1, r2, r3}
 3122 1118 030097E8 		ldmia	r7, {r0, r1}
 3123 111c 030084E8 		stmia	r4, {r0, r1}
 3124              	.LVL429:
 193:../src/benchmark.c **** int dhrystone (void)
 3125              		.loc 1 193 0
 3126 1120 5C108DE2 		add	r1, sp, #92
 3127              	.LBE705:
 3128              	.LBE704:
 3129              	.LBE703:
 3130              	.LBB720:
 3131              	.LBB694:
 3132              	.LBB688:
 136:../src/benchmark.c ****       int pos = 0;
 3133              		.loc 1 136 0
 3134 1124 0500A0E1 		mov	r0, r5
 3135              	.LVL430:
 3136              	.L184:
 3137              	.LBE688:
 3138              	.LBE694:
 3139              	.LBE720:
 3140              	.LBB721:
 3141              	.LBB713:
 3142              	.LBB706:
 156:../src/benchmark.c ****           unit  = units[i];
 3143              		.loc 1 156 0
 3144 1128 0430B1E5 		ldr	r3, [r1, #4]!
 3145              	.LVL431:
 159:../src/benchmark.c ****           while (number >= unit)
 3146              		.loc 1 159 0
 3147 112c 0E0053E1 		cmp	r3, lr
 3148 1130 1A0200CA 		bgt	.L180
 3149 1134 0020A0E3 		mov	r2, #0
 3150              	.LVL432:
 3151              	.L181:
 162:../src/benchmark.c ****               number -= unit;
 3152              		.loc 1 162 0
 3153 1138 0EE063E0 		rsb	lr, r3, lr
 3154              	.LVL433:
 159:../src/benchmark.c ****           while (number >= unit)
 3155              		.loc 1 159 0
 3156 113c 0E0053E1 		cmp	r3, lr
 161:../src/benchmark.c ****               digit++;
 3157              		.loc 1 161 0
 3158 1140 012082E2 		add	r2, r2, #1
 3159              	.LVL434:
 159:../src/benchmark.c ****           while (number >= unit)
 3160              		.loc 1 159 0
 3161 1144 FBFFFFDA 		ble	.L181
 3162              	.LVL435:
 3163              	.L182:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3164              		.loc 1 166 0
 3165 1148 88408DE2 		add	r4, sp, #136
 3166 114c 003084E0 		add	r3, r4, r0
 3167              	.LVL436:
 3168 1150 302082E2 		add	r2, r2, #48
 3169 1154 782043E5 		strb	r2, [r3, #-120]
 3170 1158 010080E2 		add	r0, r0, #1
 3171              	.LVL437:
 3172 115c 0150A0E3 		mov	r5, #1
 3173              	.LVL438:
 3174              	.L183:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3175              		.loc 1 154 0
 3176 1160 04709DE5 		ldr	r7, [sp, #4]
 3177 1164 070051E1 		cmp	r1, r7
 3178 1168 EEFFFF1A 		bne	.L184
 168:../src/benchmark.c ****       str[pos] = '\0';
 3179              		.loc 1 168 0
 3180 116c 88E08DE2 		add	lr, sp, #136
 3181              	.LVL439:
 3182 1170 00008EE0 		add	r0, lr, r0
 3183              	.LVL440:
 3184 1174 0030A0E3 		mov	r3, #0
 3185 1178 783040E5 		strb	r3, [r0, #-120]
 3186              	.LVL441:
 3187              	.L185:
 3188              	.LBE706:
 3189              	.LBE713:
 3190              	.LBE721:
 394:../src/benchmark.c ****   puts_UART( buffer );
 3191              		.loc 1 394 0
 3192 117c 10008DE2 		add	r0, sp, #16
 3193              	.LVL442:
 3194              	.LBB722:
 3195              	.LBB723:
 139:../src/benchmark.c ****       const int units[] =
 3196              		.loc 1 139 0
 3197 1180 844D1FE5 		ldr	r4, .L425+176
 3198              	.LBE723:
 3199              	.LBE722:
 394:../src/benchmark.c ****   puts_UART( buffer );
 3200              		.loc 1 394 0
 3201 1184 00C08DE5 		str	ip, [sp, #0]
 3202 1188 FEFFFFEB 		bl	puts_UART
 3203              	.LVL443:
 395:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 3204              		.loc 1 395 0
 3205 118c 980D1FE5 		ldr	r0, .L425+168
 3206 1190 FEFFFFEB 		bl	puts_UART
 3207              	.LVL444:
 3208              	.LBB730:
 3209              	.LBB724:
 139:../src/benchmark.c ****       const int units[] =
 3210              		.loc 1 139 0
 3211 1194 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3212 1198 60E08DE2 		add	lr, sp, #96
 3213 119c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3214 11a0 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3215 11a4 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3216 11a8 030094E8 		ldmia	r4, {r0, r1}
 3217              	.LBE724:
 3218              	.LBE730:
 3219              	.LBB731:
 3220              	.LBB714:
 3221              	.LBB707:
 136:../src/benchmark.c ****       int pos = 0;
 3222              		.loc 1 136 0
 3223 11ac 00C09DE5 		ldr	ip, [sp, #0]
 3224              	.LBE707:
 3225              	.LBE714:
 3226              	.LBE731:
 3227              	.LBB732:
 3228              	.LBB725:
 139:../src/benchmark.c ****       const int units[] =
 3229              		.loc 1 139 0
 3230 11b0 03008EE8 		stmia	lr, {r0, r1}
 3231              	.LVL445:
 3232              	.LBE725:
 3233              	.LBE732:
 3234              	.LBB733:
 3235              	.LBB715:
 3236              	.LBB708:
 138:../src/benchmark.c ****       int digitfound = 0;
 3237              		.loc 1 138 0
 3238 11b4 0010A0E3 		mov	r1, #0
 3239              	.LBE708:
 3240              	.LBE715:
 3241              	.LBE733:
 3242              	.LBB734:
 3243              	.LBB726:
 193:../src/benchmark.c **** int dhrystone (void)
 3244              		.loc 1 193 0
 3245 11b8 5C008DE2 		add	r0, sp, #92
 3246              	.LBE726:
 3247              	.LBE734:
 3248              	.LBB735:
 3249              	.LBB716:
 3250              	.LBB709:
 3251 11bc 1230A0E3 		mov	r3, #18
 136:../src/benchmark.c ****       int pos = 0;
 3252              		.loc 1 136 0
 3253 11c0 01E0A0E1 		mov	lr, r1
 3254              	.LVL446:
 3255              	.L191:
 3256              	.LBE709:
 3257              	.LBE716:
 3258              	.LBE735:
 3259              	.LBB736:
 3260              	.LBB727:
 156:../src/benchmark.c ****           unit  = units[i];
 3261              		.loc 1 156 0
 3262 11c4 0420B0E5 		ldr	r2, [r0, #4]!
 3263              	.LVL447:
 159:../src/benchmark.c ****           while (number >= unit)
 3264              		.loc 1 159 0
 3265 11c8 030052E1 		cmp	r2, r3
 3266 11cc BF0100CA 		bgt	.L187
 3267 11d0 0010A0E3 		mov	r1, #0
 3268              	.LVL448:
 3269              	.L188:
 162:../src/benchmark.c ****               number -= unit;
 3270              		.loc 1 162 0
 3271 11d4 033062E0 		rsb	r3, r2, r3
 3272              	.LVL449:
 159:../src/benchmark.c ****           while (number >= unit)
 3273              		.loc 1 159 0
 3274 11d8 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3275              		.loc 1 161 0
 3276 11dc 011081E2 		add	r1, r1, #1
 3277              	.LVL450:
 159:../src/benchmark.c ****           while (number >= unit)
 3278              		.loc 1 159 0
 3279 11e0 FBFFFFDA 		ble	.L188
 3280              	.LVL451:
 3281              	.L189:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3282              		.loc 1 166 0
 3283 11e4 88408DE2 		add	r4, sp, #136
 3284 11e8 0E2084E0 		add	r2, r4, lr
 3285              	.LVL452:
 3286 11ec 301081E2 		add	r1, r1, #48
 3287 11f0 781042E5 		strb	r1, [r2, #-120]
 3288 11f4 01E08EE2 		add	lr, lr, #1
 3289              	.LVL453:
 3290 11f8 0110A0E3 		mov	r1, #1
 3291              	.LVL454:
 3292              	.L190:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3293              		.loc 1 154 0
 3294 11fc 04509DE5 		ldr	r5, [sp, #4]
 3295 1200 050050E1 		cmp	r0, r5
 3296 1204 EEFFFF1A 		bne	.L191
 168:../src/benchmark.c ****       str[pos] = '\0';
 3297              		.loc 1 168 0
 3298 1208 88708DE2 		add	r7, sp, #136
 3299 120c 0EE087E0 		add	lr, r7, lr
 3300              	.LVL455:
 3301 1210 0040A0E3 		mov	r4, #0
 3302 1214 78404EE5 		strb	r4, [lr, #-120]
 3303              	.LBE727:
 3304              	.LBE736:
 397:../src/benchmark.c ****   puts_UART( buffer );
 3305              		.loc 1 397 0
 3306 1218 10008DE2 		add	r0, sp, #16
 3307              	.LVL456:
 3308 121c 00C08DE5 		str	ip, [sp, #0]
 3309 1220 FEFFFFEB 		bl	puts_UART
 3310              	.LVL457:
 398:../src/benchmark.c ****   puts_UART ("  Str_Comp:          %s\n");
 3311              		.loc 1 398 0
 3312 1224 400E1FE5 		ldr	r0, .L425+152
 3313 1228 FEFFFFEB 		bl	puts_UART
 3314              	.LVL458:
 399:../src/benchmark.c ****   puts_UART ( Next_Ptr_Glob->variant.var_1.Str_Comp);
 3315              		.loc 1 399 0
 3316 122c 44EE1FE5 		ldr	lr, .L425+156
 3317 1230 00009EE5 		ldr	r0, [lr, #0]
 3318 1234 100080E2 		add	r0, r0, #16
 3319 1238 FEFFFFEB 		bl	puts_UART
 3320              	.LVL459:
 400:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
 3321              		.loc 1 400 0
 3322 123c 500E1FE5 		ldr	r0, .L425+160
 3323 1240 FEFFFFEB 		bl	puts_UART
 3324              	.LVL460:
 401:../src/benchmark.c ****   puts_UART ("Int_1_Loc:           %d\n");
 3325              		.loc 1 401 0
 3326 1244 540E1FE5 		ldr	r0, .L425+164
 3327 1248 FEFFFFEB 		bl	puts_UART
 3328              	.LVL461:
 3329              	.LBB737:
 3330              	.LBB738:
 133:../src/benchmark.c ****   if (number > 0)
 3331              		.loc 1 133 0
 3332 124c 04005BE1 		cmp	fp, r4
 3333 1250 00C09DE5 		ldr	ip, [sp, #0]
 3334 1254 0E0200DA 		ble	.L192
 3335              	.LVL462:
 3336              	.LBB739:
 139:../src/benchmark.c ****       const int units[] =
 3337              		.loc 1 139 0
 3338 1258 5C5E1FE5 		ldr	r5, .L425+176
 3339 125c 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 3340 1260 60E08DE2 		add	lr, sp, #96
 3341 1264 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3342 1268 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 3343 126c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3344 1270 030095E8 		ldmia	r5, {r0, r1}
 3345 1274 03008EE8 		stmia	lr, {r0, r1}
 3346              	.LVL463:
 193:../src/benchmark.c **** int dhrystone (void)
 3347              		.loc 1 193 0
 3348 1278 5C108DE2 		add	r1, sp, #92
 3349              	.LBE739:
 3350              	.LBE738:
 3351              	.LBE737:
 3352              	.LBB754:
 3353              	.LBB728:
 136:../src/benchmark.c ****       int pos = 0;
 3354              		.loc 1 136 0
 3355 127c 0400A0E1 		mov	r0, r4
 3356              	.LVL464:
 3357              	.L197:
 3358              	.LBE728:
 3359              	.LBE754:
 3360              	.LBB755:
 3361              	.LBB747:
 3362              	.LBB740:
 156:../src/benchmark.c ****           unit  = units[i];
 3363              		.loc 1 156 0
 3364 1280 0430B1E5 		ldr	r3, [r1, #4]!
 3365              	.LVL465:
 159:../src/benchmark.c ****           while (number >= unit)
 3366              		.loc 1 159 0
 3367 1284 0B0053E1 		cmp	r3, fp
 3368 1288 E00100CA 		bgt	.L193
 3369 128c 0020A0E3 		mov	r2, #0
 3370              	.LVL466:
 3371              	.L194:
 193:../src/benchmark.c **** int dhrystone (void)
 3372              		.loc 1 193 0
 3373 1290 0BB063E0 		rsb	fp, r3, fp
 3374              	.LVL467:
 159:../src/benchmark.c ****           while (number >= unit)
 3375              		.loc 1 159 0
 3376 1294 03005BE1 		cmp	fp, r3
 161:../src/benchmark.c ****               digit++;
 3377              		.loc 1 161 0
 3378 1298 012082E2 		add	r2, r2, #1
 3379              	.LVL468:
 159:../src/benchmark.c ****           while (number >= unit)
 3380              		.loc 1 159 0
 3381 129c FBFFFFAA 		bge	.L194
 3382              	.LVL469:
 3383              	.L195:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3384              		.loc 1 166 0
 3385 12a0 88408DE2 		add	r4, sp, #136
 3386 12a4 003084E0 		add	r3, r4, r0
 3387              	.LVL470:
 3388 12a8 302082E2 		add	r2, r2, #48
 3389 12ac 782043E5 		strb	r2, [r3, #-120]
 3390 12b0 010080E2 		add	r0, r0, #1
 3391              	.LVL471:
 3392 12b4 0140A0E3 		mov	r4, #1
 3393              	.LVL472:
 3394              	.L196:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3395              		.loc 1 154 0
 3396 12b8 04509DE5 		ldr	r5, [sp, #4]
 3397 12bc 050051E1 		cmp	r1, r5
 3398 12c0 EEFFFF1A 		bne	.L197
 168:../src/benchmark.c ****       str[pos] = '\0';
 3399              		.loc 1 168 0
 3400 12c4 88708DE2 		add	r7, sp, #136
 3401 12c8 000087E0 		add	r0, r7, r0
 3402              	.LVL473:
 3403 12cc 0030A0E3 		mov	r3, #0
 3404 12d0 783040E5 		strb	r3, [r0, #-120]
 3405              	.LVL474:
 3406              	.L198:
 3407              	.LBE740:
 3408              	.LBE747:
 3409              	.LBE755:
 403:../src/benchmark.c ****   puts_UART( buffer );
 3410              		.loc 1 403 0
 3411 12d4 10008DE2 		add	r0, sp, #16
 3412              	.LVL475:
 3413              	.LBB756:
 3414              	.LBB757:
 139:../src/benchmark.c ****       const int units[] =
 3415              		.loc 1 139 0
 3416 12d8 DC4E1FE5 		ldr	r4, .L425+176
 3417              	.LBE757:
 3418              	.LBE756:
 403:../src/benchmark.c ****   puts_UART( buffer );
 3419              		.loc 1 403 0
 3420 12dc 00C08DE5 		str	ip, [sp, #0]
 3421 12e0 FEFFFFEB 		bl	puts_UART
 3422              	.LVL476:
 404:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 3423              		.loc 1 404 0
 3424 12e4 F00E1FE5 		ldr	r0, .L425+168
 3425 12e8 FEFFFFEB 		bl	puts_UART
 3426              	.LVL477:
 3427              	.LBB765:
 3428              	.LBB758:
 139:../src/benchmark.c ****       const int units[] =
 3429              		.loc 1 139 0
 3430 12ec 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3431 12f0 60E08DE2 		add	lr, sp, #96
 3432 12f4 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3433 12f8 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3434 12fc 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3435 1300 030094E8 		ldmia	r4, {r0, r1}
 3436              	.LBE758:
 3437              	.LBE765:
 3438              	.LBB766:
 3439              	.LBB748:
 3440              	.LBB741:
 136:../src/benchmark.c ****       int pos = 0;
 3441              		.loc 1 136 0
 3442 1304 00C09DE5 		ldr	ip, [sp, #0]
 3443              	.LBE741:
 3444              	.LBE748:
 3445              	.LBE766:
 3446              	.LBB767:
 3447              	.LBB759:
 139:../src/benchmark.c ****       const int units[] =
 3448              		.loc 1 139 0
 3449 1308 03008EE8 		stmia	lr, {r0, r1}
 3450              	.LVL478:
 3451              	.LBE759:
 3452              	.LBE767:
 3453              	.LBB768:
 3454              	.LBB749:
 3455              	.LBB742:
 138:../src/benchmark.c ****       int digitfound = 0;
 3456              		.loc 1 138 0
 3457 130c 0010A0E3 		mov	r1, #0
 3458              	.LBE742:
 3459              	.LBE749:
 3460              	.LBE768:
 3461              	.LBB769:
 3462              	.LBB760:
 193:../src/benchmark.c **** int dhrystone (void)
 3463              		.loc 1 193 0
 3464 1310 5C008DE2 		add	r0, sp, #92
 3465              	.LBE760:
 3466              	.LBE769:
 3467              	.LBB770:
 3468              	.LBB750:
 3469              	.LBB743:
 3470 1314 0530A0E3 		mov	r3, #5
 136:../src/benchmark.c ****       int pos = 0;
 3471              		.loc 1 136 0
 3472 1318 01E0A0E1 		mov	lr, r1
 3473              	.LVL479:
 3474              	.L204:
 3475              	.LBE743:
 3476              	.LBE750:
 3477              	.LBE770:
 3478              	.LBB771:
 3479              	.LBB761:
 156:../src/benchmark.c ****           unit  = units[i];
 3480              		.loc 1 156 0
 3481 131c 0420B0E5 		ldr	r2, [r0, #4]!
 3482              	.LVL480:
 159:../src/benchmark.c ****           while (number >= unit)
 3483              		.loc 1 159 0
 3484 1320 030052E1 		cmp	r2, r3
 3485 1324 650100CA 		bgt	.L200
 3486 1328 0010A0E3 		mov	r1, #0
 3487              	.LVL481:
 3488              	.L201:
 162:../src/benchmark.c ****               number -= unit;
 3489              		.loc 1 162 0
 3490 132c 033062E0 		rsb	r3, r2, r3
 3491              	.LVL482:
 159:../src/benchmark.c ****           while (number >= unit)
 3492              		.loc 1 159 0
 3493 1330 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3494              		.loc 1 161 0
 3495 1334 011081E2 		add	r1, r1, #1
 3496              	.LVL483:
 159:../src/benchmark.c ****           while (number >= unit)
 3497              		.loc 1 159 0
 3498 1338 FBFFFFDA 		ble	.L201
 3499              	.LVL484:
 3500              	.L202:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3501              		.loc 1 166 0
 3502 133c 88408DE2 		add	r4, sp, #136
 3503 1340 0E2084E0 		add	r2, r4, lr
 3504              	.LVL485:
 3505 1344 301081E2 		add	r1, r1, #48
 3506 1348 781042E5 		strb	r1, [r2, #-120]
 3507 134c 01E08EE2 		add	lr, lr, #1
 3508              	.LVL486:
 3509 1350 0110A0E3 		mov	r1, #1
 3510              	.LVL487:
 3511              	.L203:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3512              		.loc 1 154 0
 3513 1354 04509DE5 		ldr	r5, [sp, #4]
 3514 1358 050050E1 		cmp	r0, r5
 3515 135c EEFFFF1A 		bne	.L204
 168:../src/benchmark.c ****       str[pos] = '\0';
 3516              		.loc 1 168 0
 3517 1360 88708DE2 		add	r7, sp, #136
 3518 1364 0EE087E0 		add	lr, r7, lr
 3519              	.LVL488:
 3520 1368 0050A0E3 		mov	r5, #0
 3521 136c 78504EE5 		strb	r5, [lr, #-120]
 3522              	.LBE761:
 3523              	.LBE771:
 406:../src/benchmark.c ****   puts_UART( buffer );
 3524              		.loc 1 406 0
 3525 1370 10008DE2 		add	r0, sp, #16
 3526              	.LVL489:
 3527 1374 00C08DE5 		str	ip, [sp, #0]
 3528 1378 FEFFFFEB 		bl	puts_UART
 3529              	.LVL490:
 407:../src/benchmark.c ****   puts_UART ("Int_2_Loc:           %d\n" );
 3530              		.loc 1 407 0
 3531 137c 840F1FE5 		ldr	r0, .L425+172
 3532 1380 FEFFFFEB 		bl	puts_UART
 3533              	.LVL491:
 3534              	.LBB772:
 3535              	.LBB773:
 133:../src/benchmark.c ****   if (number > 0)
 3536              		.loc 1 133 0
 3537 1384 00C09DE5 		ldr	ip, [sp, #0]
 3538 1388 05005CE1 		cmp	ip, r5
 3539 138c BB0100DA 		ble	.L205
 3540              	.LVL492:
 3541              	.LBB774:
 139:../src/benchmark.c ****       const int units[] =
 3542              		.loc 1 139 0
 3543 1390 944F1FE5 		ldr	r4, .L425+176
 3544 1394 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3545 1398 60E08DE2 		add	lr, sp, #96
 3546 139c 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3547 13a0 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3548 13a4 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3549 13a8 030094E8 		ldmia	r4, {r0, r1}
 3550              	.LBE774:
 3551              	.LBE773:
 3552              	.LBE772:
 3553              	.LBB789:
 3554              	.LBB762:
 138:../src/benchmark.c ****       int digitfound = 0;
 3555              		.loc 1 138 0
 3556 13ac 0520A0E1 		mov	r2, r5
 3557              	.LBE762:
 3558              	.LBE789:
 3559              	.LBB790:
 3560              	.LBB782:
 3561              	.LBB775:
 139:../src/benchmark.c ****       const int units[] =
 3562              		.loc 1 139 0
 3563 13b0 03008EE8 		stmia	lr, {r0, r1}
 3564              	.LVL493:
 193:../src/benchmark.c **** int dhrystone (void)
 3565              		.loc 1 193 0
 3566 13b4 5C108DE2 		add	r1, sp, #92
 3567              	.LBE775:
 3568              	.LBE782:
 3569              	.LBE790:
 3570              	.LBB791:
 3571              	.LBB763:
 136:../src/benchmark.c ****       int pos = 0;
 3572              		.loc 1 136 0
 3573 13b8 0500A0E1 		mov	r0, r5
 3574              	.LVL494:
 3575              	.L210:
 3576              	.LBE763:
 3577              	.LBE791:
 3578              	.LBB792:
 3579              	.LBB783:
 3580              	.LBB776:
 156:../src/benchmark.c ****           unit  = units[i];
 3581              		.loc 1 156 0
 3582 13bc 0430B1E5 		ldr	r3, [r1, #4]!
 3583              	.LVL495:
 159:../src/benchmark.c ****           while (number >= unit)
 3584              		.loc 1 159 0
 3585 13c0 0C0053E1 		cmp	r3, ip
 3586 13c4 8D0100CA 		bgt	.L206
 3587 13c8 0020A0E3 		mov	r2, #0
 3588              	.LVL496:
 3589              	.L207:
 193:../src/benchmark.c **** int dhrystone (void)
 3590              		.loc 1 193 0
 3591 13cc 0CC063E0 		rsb	ip, r3, ip
 3592              	.LVL497:
 159:../src/benchmark.c ****           while (number >= unit)
 3593              		.loc 1 159 0
 3594 13d0 03005CE1 		cmp	ip, r3
 161:../src/benchmark.c ****               digit++;
 3595              		.loc 1 161 0
 3596 13d4 012082E2 		add	r2, r2, #1
 3597              	.LVL498:
 159:../src/benchmark.c ****           while (number >= unit)
 3598              		.loc 1 159 0
 3599 13d8 FBFFFFAA 		bge	.L207
 3600              	.LVL499:
 3601              	.L208:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3602              		.loc 1 166 0
 3603 13dc 88E08DE2 		add	lr, sp, #136
 3604 13e0 00308EE0 		add	r3, lr, r0
 3605              	.LVL500:
 3606 13e4 302082E2 		add	r2, r2, #48
 3607 13e8 782043E5 		strb	r2, [r3, #-120]
 3608 13ec 010080E2 		add	r0, r0, #1
 3609              	.LVL501:
 3610 13f0 0120A0E3 		mov	r2, #1
 3611              	.LVL502:
 3612              	.L209:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3613              		.loc 1 154 0
 3614 13f4 04409DE5 		ldr	r4, [sp, #4]
 3615 13f8 040051E1 		cmp	r1, r4
 3616 13fc EEFFFF1A 		bne	.L210
 168:../src/benchmark.c ****       str[pos] = '\0';
 3617              		.loc 1 168 0
 3618 1400 88508DE2 		add	r5, sp, #136
 3619 1404 000085E0 		add	r0, r5, r0
 3620              	.LVL503:
 3621 1408 0030A0E3 		mov	r3, #0
 3622 140c 783040E5 		strb	r3, [r0, #-120]
 3623              	.LVL504:
 3624              	.L211:
 3625              	.LBE776:
 3626              	.LBE783:
 3627              	.LBE792:
 409:../src/benchmark.c ****   puts_UART( buffer );
 3628              		.loc 1 409 0
 3629 1410 10008DE2 		add	r0, sp, #16
 3630              	.LVL505:
 3631 1414 FEFFFFEB 		bl	puts_UART
 3632              	.LVL506:
 410:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 3633              		.loc 1 410 0
 3634 1418 E8089FE5 		ldr	r0, .L427
 3635 141c FEFFFFEB 		bl	puts_UART
 3636              	.LVL507:
 3637              	.LBB793:
 3638              	.LBB794:
 139:../src/benchmark.c ****       const int units[] =
 3639              		.loc 1 139 0
 3640 1420 E4E89FE5 		ldr	lr, .L427+4
 3641 1424 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3642 1428 60C08DE2 		add	ip, sp, #96
 3643 142c 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3644 1430 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3645 1434 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3646 1438 03009EE8 		ldmia	lr, {r0, r1}
 3647 143c 03008CE8 		stmia	ip, {r0, r1}
 3648              	.LVL508:
 3649              	.LBE794:
 3650              	.LBE793:
 3651              	.LBB801:
 3652              	.LBB784:
 3653              	.LBB777:
 138:../src/benchmark.c ****       int digitfound = 0;
 3654              		.loc 1 138 0
 3655 1440 0010A0E3 		mov	r1, #0
 3656              	.LBE777:
 3657              	.LBE784:
 3658              	.LBE801:
 3659              	.LBB802:
 3660              	.LBB795:
 193:../src/benchmark.c **** int dhrystone (void)
 3661              		.loc 1 193 0
 3662 1444 5C008DE2 		add	r0, sp, #92
 3663              	.LBE795:
 3664              	.LBE802:
 3665              	.LBB803:
 3666              	.LBB785:
 3667              	.LBB778:
 3668 1448 0D30A0E3 		mov	r3, #13
 136:../src/benchmark.c ****       int pos = 0;
 3669              		.loc 1 136 0
 3670 144c 01C0A0E1 		mov	ip, r1
 3671              	.LVL509:
 3672              	.L217:
 3673              	.LBE778:
 3674              	.LBE785:
 3675              	.LBE803:
 3676              	.LBB804:
 3677              	.LBB796:
 156:../src/benchmark.c ****           unit  = units[i];
 3678              		.loc 1 156 0
 3679 1450 0420B0E5 		ldr	r2, [r0, #4]!
 3680              	.LVL510:
 159:../src/benchmark.c ****           while (number >= unit)
 3681              		.loc 1 159 0
 3682 1454 030052E1 		cmp	r2, r3
 3683 1458 140100CA 		bgt	.L213
 3684 145c 0010A0E3 		mov	r1, #0
 3685              	.LVL511:
 3686              	.L214:
 162:../src/benchmark.c ****               number -= unit;
 3687              		.loc 1 162 0
 3688 1460 033062E0 		rsb	r3, r2, r3
 3689              	.LVL512:
 159:../src/benchmark.c ****           while (number >= unit)
 3690              		.loc 1 159 0
 3691 1464 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3692              		.loc 1 161 0
 3693 1468 011081E2 		add	r1, r1, #1
 3694              	.LVL513:
 159:../src/benchmark.c ****           while (number >= unit)
 3695              		.loc 1 159 0
 3696 146c FBFFFFDA 		ble	.L214
 3697              	.LVL514:
 3698              	.L215:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3699              		.loc 1 166 0
 3700 1470 88708DE2 		add	r7, sp, #136
 3701 1474 0C2087E0 		add	r2, r7, ip
 3702              	.LVL515:
 3703 1478 301081E2 		add	r1, r1, #48
 3704 147c 781042E5 		strb	r1, [r2, #-120]
 3705 1480 01C08CE2 		add	ip, ip, #1
 3706              	.LVL516:
 3707 1484 0110A0E3 		mov	r1, #1
 3708              	.LVL517:
 3709              	.L216:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3710              		.loc 1 154 0
 3711 1488 04409DE5 		ldr	r4, [sp, #4]
 3712 148c 040050E1 		cmp	r0, r4
 3713 1490 EEFFFF1A 		bne	.L217
 168:../src/benchmark.c ****       str[pos] = '\0';
 3714              		.loc 1 168 0
 3715 1494 88508DE2 		add	r5, sp, #136
 3716 1498 0CC085E0 		add	ip, r5, ip
 3717              	.LVL518:
 3718 149c 0040A0E3 		mov	r4, #0
 3719 14a0 78404CE5 		strb	r4, [ip, #-120]
 3720              	.LBE796:
 3721              	.LBE804:
 412:../src/benchmark.c ****   puts_UART( buffer );
 3722              		.loc 1 412 0
 3723 14a4 10008DE2 		add	r0, sp, #16
 3724              	.LVL519:
 3725 14a8 FEFFFFEB 		bl	puts_UART
 3726              	.LVL520:
 413:../src/benchmark.c ****   puts_UART ("Int_3_Loc:           %d\n");
 3727              		.loc 1 413 0
 3728 14ac 5C089FE5 		ldr	r0, .L427+8
 3729 14b0 FEFFFFEB 		bl	puts_UART
 3730              	.LVL521:
 3731              	.LBB805:
 3732              	.LBB806:
 139:../src/benchmark.c ****       const int units[] =
 3733              		.loc 1 139 0
 3734 14b4 50E89FE5 		ldr	lr, .L427+4
 3735 14b8 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3736 14bc 60C08DE2 		add	ip, sp, #96
 3737 14c0 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3738 14c4 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3739 14c8 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3740 14cc 03009EE8 		ldmia	lr, {r0, r1}
 3741              	.LBE806:
 3742              	.LBE805:
 3743              	.LBB814:
 3744              	.LBB797:
 193:../src/benchmark.c **** int dhrystone (void)
 3745              		.loc 1 193 0
 3746 14d0 0730A0E3 		mov	r3, #7
 3747              	.LBE797:
 3748              	.LBE814:
 3749              	.LBB815:
 3750              	.LBB807:
 139:../src/benchmark.c ****       const int units[] =
 3751              		.loc 1 139 0
 3752 14d4 03008CE8 		stmia	ip, {r0, r1}
 3753              	.LVL522:
 3754              	.LBE807:
 3755              	.LBE815:
 3756              	.LBB816:
 3757              	.LBB798:
 138:../src/benchmark.c ****       int digitfound = 0;
 3758              		.loc 1 138 0
 3759 14d8 0410A0E1 		mov	r1, r4
 3760              	.LBE798:
 3761              	.LBE816:
 3762              	.LBB817:
 3763              	.LBB808:
 193:../src/benchmark.c **** int dhrystone (void)
 3764              		.loc 1 193 0
 3765 14dc 5C008DE2 		add	r0, sp, #92
 3766              	.LBE808:
 3767              	.LBE817:
 3768              	.LBB818:
 3769              	.LBB799:
 136:../src/benchmark.c ****       int pos = 0;
 3770              		.loc 1 136 0
 3771 14e0 04C0A0E1 		mov	ip, r4
 3772              	.LVL523:
 3773              	.L222:
 3774              	.LBE799:
 3775              	.LBE818:
 3776              	.LBB819:
 3777              	.LBB809:
 156:../src/benchmark.c ****           unit  = units[i];
 3778              		.loc 1 156 0
 3779 14e4 0420B0E5 		ldr	r2, [r0, #4]!
 3780              	.LVL524:
 159:../src/benchmark.c ****           while (number >= unit)
 3781              		.loc 1 159 0
 3782 14e8 030052E1 		cmp	r2, r3
 3783 14ec 570100CA 		bgt	.L218
 3784 14f0 0010A0E3 		mov	r1, #0
 3785              	.LVL525:
 3786              	.L219:
 193:../src/benchmark.c **** int dhrystone (void)
 3787              		.loc 1 193 0
 3788 14f4 033062E0 		rsb	r3, r2, r3
 3789              	.LVL526:
 159:../src/benchmark.c ****           while (number >= unit)
 3790              		.loc 1 159 0
 3791 14f8 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3792              		.loc 1 161 0
 3793 14fc 011081E2 		add	r1, r1, #1
 3794              	.LVL527:
 159:../src/benchmark.c ****           while (number >= unit)
 3795              		.loc 1 159 0
 3796 1500 FBFFFFDA 		ble	.L219
 3797              	.LVL528:
 3798              	.L220:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3799              		.loc 1 166 0
 3800 1504 88708DE2 		add	r7, sp, #136
 3801 1508 0C2087E0 		add	r2, r7, ip
 3802              	.LVL529:
 3803 150c 301081E2 		add	r1, r1, #48
 3804 1510 781042E5 		strb	r1, [r2, #-120]
 3805 1514 01C08CE2 		add	ip, ip, #1
 3806              	.LVL530:
 3807 1518 0110A0E3 		mov	r1, #1
 3808              	.LVL531:
 3809              	.L221:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3810              		.loc 1 154 0
 3811 151c 04409DE5 		ldr	r4, [sp, #4]
 3812 1520 040050E1 		cmp	r0, r4
 3813 1524 EEFFFF1A 		bne	.L222
 168:../src/benchmark.c ****       str[pos] = '\0';
 3814              		.loc 1 168 0
 3815 1528 88508DE2 		add	r5, sp, #136
 3816 152c 0CC085E0 		add	ip, r5, ip
 3817              	.LVL532:
 3818 1530 0040A0E3 		mov	r4, #0
 3819 1534 78404CE5 		strb	r4, [ip, #-120]
 3820              	.LBE809:
 3821              	.LBE819:
 415:../src/benchmark.c ****   puts_UART( buffer );
 3822              		.loc 1 415 0
 3823 1538 10008DE2 		add	r0, sp, #16
 3824              	.LVL533:
 3825 153c FEFFFFEB 		bl	puts_UART
 3826              	.LVL534:
 416:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 3827              		.loc 1 416 0
 3828 1540 C0079FE5 		ldr	r0, .L427
 3829 1544 FEFFFFEB 		bl	puts_UART
 3830              	.LVL535:
 3831              	.LBB820:
 3832              	.LBB821:
 139:../src/benchmark.c ****       const int units[] =
 3833              		.loc 1 139 0
 3834 1548 BCE79FE5 		ldr	lr, .L427+4
 3835 154c 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3836 1550 60C08DE2 		add	ip, sp, #96
 3837 1554 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3838 1558 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 3839 155c 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 3840 1560 03009EE8 		ldmia	lr, {r0, r1}
 3841              	.LBE821:
 3842              	.LBE820:
 3843              	.LBB828:
 3844              	.LBB810:
 193:../src/benchmark.c **** int dhrystone (void)
 3845              		.loc 1 193 0
 3846 1564 0730A0E3 		mov	r3, #7
 3847              	.LBE810:
 3848              	.LBE828:
 3849              	.LBB829:
 3850              	.LBB822:
 139:../src/benchmark.c ****       const int units[] =
 3851              		.loc 1 139 0
 3852 1568 03008CE8 		stmia	ip, {r0, r1}
 3853              	.LVL536:
 3854              	.LBE822:
 3855              	.LBE829:
 3856              	.LBB830:
 3857              	.LBB811:
 138:../src/benchmark.c ****       int digitfound = 0;
 3858              		.loc 1 138 0
 3859 156c 0410A0E1 		mov	r1, r4
 3860              	.LBE811:
 3861              	.LBE830:
 3862              	.LBB831:
 3863              	.LBB823:
 193:../src/benchmark.c **** int dhrystone (void)
 3864              		.loc 1 193 0
 3865 1570 5C008DE2 		add	r0, sp, #92
 3866              	.LBE823:
 3867              	.LBE831:
 3868              	.LBB832:
 3869              	.LBB812:
 136:../src/benchmark.c ****       int pos = 0;
 3870              		.loc 1 136 0
 3871 1574 04C0A0E1 		mov	ip, r4
 3872              	.LVL537:
 3873              	.L227:
 3874              	.LBE812:
 3875              	.LBE832:
 3876              	.LBB833:
 3877              	.LBB824:
 156:../src/benchmark.c ****           unit  = units[i];
 3878              		.loc 1 156 0
 3879 1578 0420B0E5 		ldr	r2, [r0, #4]!
 3880              	.LVL538:
 159:../src/benchmark.c ****           while (number >= unit)
 3881              		.loc 1 159 0
 3882 157c 030052E1 		cmp	r2, r3
 3883 1580 C60000CA 		bgt	.L223
 3884 1584 0010A0E3 		mov	r1, #0
 3885              	.LVL539:
 3886              	.L224:
 162:../src/benchmark.c ****               number -= unit;
 3887              		.loc 1 162 0
 3888 1588 033062E0 		rsb	r3, r2, r3
 3889              	.LVL540:
 159:../src/benchmark.c ****           while (number >= unit)
 3890              		.loc 1 159 0
 3891 158c 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 3892              		.loc 1 161 0
 3893 1590 011081E2 		add	r1, r1, #1
 3894              	.LVL541:
 159:../src/benchmark.c ****           while (number >= unit)
 3895              		.loc 1 159 0
 3896 1594 FBFFFFDA 		ble	.L224
 3897              	.LVL542:
 3898              	.L225:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3899              		.loc 1 166 0
 3900 1598 88708DE2 		add	r7, sp, #136
 3901 159c 0C2087E0 		add	r2, r7, ip
 3902              	.LVL543:
 3903 15a0 301081E2 		add	r1, r1, #48
 3904 15a4 781042E5 		strb	r1, [r2, #-120]
 3905 15a8 01C08CE2 		add	ip, ip, #1
 3906              	.LVL544:
 3907 15ac 0110A0E3 		mov	r1, #1
 3908              	.LVL545:
 3909              	.L226:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 3910              		.loc 1 154 0
 3911 15b0 04409DE5 		ldr	r4, [sp, #4]
 3912 15b4 040050E1 		cmp	r0, r4
 3913 15b8 EEFFFF1A 		bne	.L227
 168:../src/benchmark.c ****       str[pos] = '\0';
 3914              		.loc 1 168 0
 3915 15bc 88508DE2 		add	r5, sp, #136
 3916 15c0 0CC085E0 		add	ip, r5, ip
 3917              	.LVL546:
 3918 15c4 0050A0E3 		mov	r5, #0
 3919 15c8 78504CE5 		strb	r5, [ip, #-120]
 3920              	.LBE824:
 3921              	.LBE833:
 418:../src/benchmark.c ****   puts_UART( buffer );
 3922              		.loc 1 418 0
 3923 15cc 10008DE2 		add	r0, sp, #16
 3924              	.LVL547:
 3925 15d0 FEFFFFEB 		bl	puts_UART
 3926              	.LVL548:
 419:../src/benchmark.c ****   puts_UART ("Enum_Loc:            %d\n");
 3927              		.loc 1 419 0
 3928 15d4 38079FE5 		ldr	r0, .L427+12
 3929 15d8 FEFFFFEB 		bl	puts_UART
 3930              	.LVL549:
 3931              	.LBB834:
 3932              	.LBB835:
 133:../src/benchmark.c ****   if (number > 0)
 3933              		.loc 1 133 0
 3934 15dc 00C056E2 		subs	ip, r6, #0
 3935 15e0 5C01000A 		beq	.L228
 3936              	.LVL550:
 3937              	.LBB836:
 139:../src/benchmark.c ****       const int units[] =
 3938              		.loc 1 139 0
 3939 15e4 20479FE5 		ldr	r4, .L427+4
 3940 15e8 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3941 15ec 60E08DE2 		add	lr, sp, #96
 3942 15f0 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3943 15f4 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 3944 15f8 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 3945 15fc 030094E8 		ldmia	r4, {r0, r1}
 3946              	.LBE836:
 3947              	.LBE835:
 3948              	.LBE834:
 3949              	.LBB848:
 3950              	.LBB825:
 138:../src/benchmark.c ****       int digitfound = 0;
 3951              		.loc 1 138 0
 3952 1600 0520A0E1 		mov	r2, r5
 3953              	.LBE825:
 3954              	.LBE848:
 3955              	.LBB849:
 3956              	.LBB842:
 3957              	.LBB837:
 139:../src/benchmark.c ****       const int units[] =
 3958              		.loc 1 139 0
 3959 1604 03008EE8 		stmia	lr, {r0, r1}
 3960              	.LVL551:
 193:../src/benchmark.c **** int dhrystone (void)
 3961              		.loc 1 193 0
 3962 1608 5C108DE2 		add	r1, sp, #92
 3963              	.LBE837:
 3964              	.LBE842:
 3965              	.LBE849:
 3966              	.LBB850:
 3967              	.LBB826:
 136:../src/benchmark.c ****       int pos = 0;
 3968              		.loc 1 136 0
 3969 160c 0500A0E1 		mov	r0, r5
 3970              	.LVL552:
 3971              	.L233:
 3972              	.LBE826:
 3973              	.LBE850:
 3974              	.LBB851:
 3975              	.LBB843:
 3976              	.LBB838:
 156:../src/benchmark.c ****           unit  = units[i];
 3977              		.loc 1 156 0
 3978 1610 0430B1E5 		ldr	r3, [r1, #4]!
 3979              	.LVL553:
 159:../src/benchmark.c ****           while (number >= unit)
 3980              		.loc 1 159 0
 3981 1614 0C0053E1 		cmp	r3, ip
 3982 1618 080100CA 		bgt	.L229
 3983 161c 0020A0E3 		mov	r2, #0
 3984              	.LVL554:
 3985              	.L230:
 162:../src/benchmark.c ****               number -= unit;
 3986              		.loc 1 162 0
 3987 1620 0CC063E0 		rsb	ip, r3, ip
 3988              	.LVL555:
 159:../src/benchmark.c ****           while (number >= unit)
 3989              		.loc 1 159 0
 3990 1624 0C0053E1 		cmp	r3, ip
 161:../src/benchmark.c ****               digit++;
 3991              		.loc 1 161 0
 3992 1628 012082E2 		add	r2, r2, #1
 3993              	.LVL556:
 159:../src/benchmark.c ****           while (number >= unit)
 3994              		.loc 1 159 0
 3995 162c FBFFFFDA 		ble	.L230
 3996              	.LVL557:
 3997              	.L231:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 3998              		.loc 1 166 0
 3999 1630 88708DE2 		add	r7, sp, #136
 4000 1634 003087E0 		add	r3, r7, r0
 4001              	.LVL558:
 4002 1638 302082E2 		add	r2, r2, #48
 4003 163c 782043E5 		strb	r2, [r3, #-120]
 4004 1640 010080E2 		add	r0, r0, #1
 4005              	.LVL559:
 4006 1644 0120A0E3 		mov	r2, #1
 4007              	.LVL560:
 4008              	.L232:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 4009              		.loc 1 154 0
 4010 1648 04409DE5 		ldr	r4, [sp, #4]
 4011 164c 040051E1 		cmp	r1, r4
 4012 1650 EEFFFF1A 		bne	.L233
 168:../src/benchmark.c ****       str[pos] = '\0';
 4013              		.loc 1 168 0
 4014 1654 88508DE2 		add	r5, sp, #136
 4015 1658 000085E0 		add	r0, r5, r0
 4016              	.LVL561:
 4017 165c 0030A0E3 		mov	r3, #0
 4018 1660 783040E5 		strb	r3, [r0, #-120]
 4019              	.LVL562:
 4020              	.L234:
 4021              	.LBE838:
 4022              	.LBE843:
 4023              	.LBE851:
 421:../src/benchmark.c ****   puts_UART( buffer );
 4024              		.loc 1 421 0
 4025 1664 10008DE2 		add	r0, sp, #16
 4026              	.LVL563:
 4027 1668 FEFFFFEB 		bl	puts_UART
 4028              	.LVL564:
 422:../src/benchmark.c ****   puts_UART ("        should be:   %d\n");
 4029              		.loc 1 422 0
 4030 166c 94069FE5 		ldr	r0, .L427
 4031 1670 FEFFFFEB 		bl	puts_UART
 4032              	.LVL565:
 4033              	.LBB852:
 4034              	.LBB853:
 4035              	.LBB854:
 139:../src/benchmark.c ****       const int units[] =
 4036              		.loc 1 139 0
 4037 1674 90E69FE5 		ldr	lr, .L427+4
 4038 1678 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 4039 167c 60C08DE2 		add	ip, sp, #96
 4040 1680 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 4041 1684 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 4042 1688 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 4043 168c 03009EE8 		ldmia	lr, {r0, r1}
 4044 1690 03008CE8 		stmia	ip, {r0, r1}
 4045              	.LVL566:
 4046              	.LBE854:
 4047              	.LBE853:
 4048              	.LBE852:
 4049              	.LBB867:
 4050              	.LBB844:
 4051              	.LBB839:
 138:../src/benchmark.c ****       int digitfound = 0;
 4052              		.loc 1 138 0
 4053 1694 0010A0E3 		mov	r1, #0
 4054              	.LBE839:
 4055              	.LBE844:
 4056              	.LBE867:
 4057              	.LBB868:
 4058              	.LBB861:
 4059              	.LBB855:
 193:../src/benchmark.c **** int dhrystone (void)
 4060              		.loc 1 193 0
 4061 1698 5C008DE2 		add	r0, sp, #92
 4062              	.LBE855:
 4063              	.LBE861:
 4064              	.LBE868:
 4065              	.LBB869:
 4066              	.LBB845:
 4067              	.LBB840:
 4068 169c 0130A0E3 		mov	r3, #1
 136:../src/benchmark.c ****       int pos = 0;
 4069              		.loc 1 136 0
 4070 16a0 01C0A0E1 		mov	ip, r1
 4071              	.LVL567:
 4072              	.L239:
 4073              	.LBE840:
 4074              	.LBE845:
 4075              	.LBE869:
 4076              	.LBB870:
 4077              	.LBB862:
 4078              	.LBB856:
 156:../src/benchmark.c ****           unit  = units[i];
 4079              		.loc 1 156 0
 4080 16a4 0420B0E5 		ldr	r2, [r0, #4]!
 4081              	.LVL568:
 159:../src/benchmark.c ****           while (number >= unit)
 4082              		.loc 1 159 0
 4083 16a8 030052E1 		cmp	r2, r3
 4084 16ac 770000CA 		bgt	.L235
 4085 16b0 0010A0E3 		mov	r1, #0
 4086              	.LVL569:
 4087              	.L236:
 162:../src/benchmark.c ****               number -= unit;
 4088              		.loc 1 162 0
 4089 16b4 033062E0 		rsb	r3, r2, r3
 4090              	.LVL570:
 159:../src/benchmark.c ****           while (number >= unit)
 4091              		.loc 1 159 0
 4092 16b8 030052E1 		cmp	r2, r3
 161:../src/benchmark.c ****               digit++;
 4093              		.loc 1 161 0
 4094 16bc 011081E2 		add	r1, r1, #1
 4095              	.LVL571:
 159:../src/benchmark.c ****           while (number >= unit)
 4096              		.loc 1 159 0
 4097 16c0 FBFFFFDA 		ble	.L236
 4098              	.LVL572:
 4099              	.L237:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 4100              		.loc 1 166 0
 4101 16c4 88708DE2 		add	r7, sp, #136
 4102 16c8 0C2087E0 		add	r2, r7, ip
 4103              	.LVL573:
 4104 16cc 301081E2 		add	r1, r1, #48
 4105 16d0 781042E5 		strb	r1, [r2, #-120]
 4106 16d4 01C08CE2 		add	ip, ip, #1
 4107              	.LVL574:
 4108 16d8 0110A0E3 		mov	r1, #1
 4109              	.LVL575:
 4110              	.L238:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 4111              		.loc 1 154 0
 4112 16dc 04409DE5 		ldr	r4, [sp, #4]
 4113 16e0 040050E1 		cmp	r0, r4
 4114 16e4 EEFFFF1A 		bne	.L239
 168:../src/benchmark.c ****       str[pos] = '\0';
 4115              		.loc 1 168 0
 4116 16e8 88508DE2 		add	r5, sp, #136
 4117 16ec 0CC085E0 		add	ip, r5, ip
 4118              	.LVL576:
 4119 16f0 0040A0E3 		mov	r4, #0
 4120 16f4 78404CE5 		strb	r4, [ip, #-120]
 4121              	.LBE856:
 4122              	.LBE862:
 4123              	.LBE870:
 424:../src/benchmark.c ****   puts_UART( buffer );
 4124              		.loc 1 424 0
 4125 16f8 10008DE2 		add	r0, sp, #16
 4126              	.LVL577:
 4127 16fc FEFFFFEB 		bl	puts_UART
 4128              	.LVL578:
 425:../src/benchmark.c ****   puts_UART ("Str_1_Loc:           %s\n");
 4129              		.loc 1 425 0
 4130 1700 10069FE5 		ldr	r0, .L427+16
 4131 1704 FEFFFFEB 		bl	puts_UART
 4132              	.LVL579:
 426:../src/benchmark.c ****   puts_UART( Str_1_Loc );
 4133              		.loc 1 426 0
 4134 1708 20008DE2 		add	r0, sp, #32
 4135              	.LVL580:
 4136 170c FEFFFFEB 		bl	puts_UART
 4137              	.LVL581:
 427:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, 1'ST STRING\n");
 4138              		.loc 1 427 0
 4139 1710 04069FE5 		ldr	r0, .L427+20
 4140 1714 FEFFFFEB 		bl	puts_UART
 4141              	.LVL582:
 428:../src/benchmark.c ****   puts_UART ("Str_2_Loc:           %s\n");
 4142              		.loc 1 428 0
 4143 1718 00069FE5 		ldr	r0, .L427+24
 4144 171c FEFFFFEB 		bl	puts_UART
 4145              	.LVL583:
 429:../src/benchmark.c ****   puts_UART( Str_2_Loc );
 4146              		.loc 1 429 0
 4147 1720 40008DE2 		add	r0, sp, #64
 4148              	.LVL584:
 4149 1724 FEFFFFEB 		bl	puts_UART
 4150              	.LVL585:
 430:../src/benchmark.c ****   puts_UART ("        should be:   DHRYSTONE PROGRAM, 2'ND STRING\n");
 4151              		.loc 1 430 0
 4152 1728 F4059FE5 		ldr	r0, .L427+28
 4153 172c FEFFFFEB 		bl	puts_UART
 4154              	.LVL586:
 431:../src/benchmark.c ****   puts_UART ("\n");
 4155              		.loc 1 431 0
 4156 1730 F0059FE5 		ldr	r0, .L427+32
 4157 1734 FEFFFFEB 		bl	puts_UART
 4158              	.LVL587:
 434:../src/benchmark.c ****   puts_UART("Test runned successfully !!!\n");
 4159              		.loc 1 434 0
 4160 1738 EC059FE5 		ldr	r0, .L427+36
 4161 173c FEFFFFEB 		bl	puts_UART
 4162              	.LVL588:
 436:../src/benchmark.c ****   puts_UART ("LOOPS: ");
 4163              		.loc 1 436 0
 4164 1740 E8059FE5 		ldr	r0, .L427+40
 4165 1744 FEFFFFEB 		bl	puts_UART
 4166              	.LVL589:
 4167              	.LBB871:
 4168              	.LBB872:
 139:../src/benchmark.c ****       const int units[] =
 4169              		.loc 1 139 0
 4170 1748 BCE59FE5 		ldr	lr, .L427+4
 4171 174c 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 4172 1750 60C08DE2 		add	ip, sp, #96
 4173 1754 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 4174 1758 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 4175 175c 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 4176 1760 03009EE8 		ldmia	lr, {r0, r1}
 4177              	.LBE872:
 4178              	.LBE871:
 4179              	.LBB879:
 4180              	.LBB863:
 4181              	.LBB857:
 136:../src/benchmark.c ****       int pos = 0;
 4182              		.loc 1 136 0
 4183 1764 0C309DE5 		ldr	r3, [sp, #12]
 4184              	.LBE857:
 4185              	.LBE863:
 4186              	.LBE879:
 4187              	.LBB880:
 4188              	.LBB873:
 139:../src/benchmark.c ****       const int units[] =
 4189              		.loc 1 139 0
 4190 1768 03008CE8 		stmia	ip, {r0, r1}
 4191              	.LVL590:
 4192              	.LBE873:
 4193              	.LBE880:
 4194              	.LBB881:
 4195              	.LBB864:
 4196              	.LBB858:
 138:../src/benchmark.c ****       int digitfound = 0;
 4197              		.loc 1 138 0
 4198 176c 0420A0E1 		mov	r2, r4
 4199              	.LBE858:
 4200              	.LBE864:
 4201              	.LBE881:
 4202              	.LBB882:
 4203              	.LBB874:
 193:../src/benchmark.c **** int dhrystone (void)
 4204              		.loc 1 193 0
 4205 1770 5C108DE2 		add	r1, sp, #92
 4206              	.LBE874:
 4207              	.LBE882:
 4208              	.LBB883:
 4209              	.LBB865:
 4210              	.LBB859:
 136:../src/benchmark.c ****       int pos = 0;
 4211              		.loc 1 136 0
 4212 1774 0400A0E1 		mov	r0, r4
 4213              	.LVL591:
 4214              	.L244:
 4215              	.LBE859:
 4216              	.LBE865:
 4217              	.LBE883:
 4218              	.LBB884:
 4219              	.LBB875:
 156:../src/benchmark.c ****           unit  = units[i];
 4220              		.loc 1 156 0
 4221 1778 04C0B1E5 		ldr	ip, [r1, #4]!
 4222              	.LVL592:
 159:../src/benchmark.c ****           while (number >= unit)
 4223              		.loc 1 159 0
 4224 177c 03005CE1 		cmp	ip, r3
 4225 1780 BA0000CA 		bgt	.L240
 4226 1784 0020A0E3 		mov	r2, #0
 4227              	.LVL593:
 4228              	.L241:
 162:../src/benchmark.c ****               number -= unit;
 4229              		.loc 1 162 0
 4230 1788 03306CE0 		rsb	r3, ip, r3
 4231              	.LVL594:
 159:../src/benchmark.c ****           while (number >= unit)
 4232              		.loc 1 159 0
 4233 178c 03005CE1 		cmp	ip, r3
 161:../src/benchmark.c ****               digit++;
 4234              		.loc 1 161 0
 4235 1790 012082E2 		add	r2, r2, #1
 4236              	.LVL595:
 159:../src/benchmark.c ****           while (number >= unit)
 4237              		.loc 1 159 0
 4238 1794 FBFFFFDA 		ble	.L241
 4239              	.LVL596:
 4240              	.L242:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 4241              		.loc 1 166 0
 4242 1798 88708DE2 		add	r7, sp, #136
 4243 179c 00C087E0 		add	ip, r7, r0
 4244              	.LVL597:
 4245 17a0 302082E2 		add	r2, r2, #48
 4246 17a4 78204CE5 		strb	r2, [ip, #-120]
 4247 17a8 010080E2 		add	r0, r0, #1
 4248              	.LVL598:
 4249 17ac 0120A0E3 		mov	r2, #1
 4250              	.LVL599:
 4251              	.L243:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 4252              		.loc 1 154 0
 4253 17b0 04C09DE5 		ldr	ip, [sp, #4]
 4254 17b4 0C0051E1 		cmp	r1, ip
 4255 17b8 EEFFFF1A 		bne	.L244
 168:../src/benchmark.c ****       str[pos] = '\0';
 4256              		.loc 1 168 0
 4257 17bc 88E08DE2 		add	lr, sp, #136
 4258 17c0 00308EE0 		add	r3, lr, r0
 4259              	.LVL600:
 4260 17c4 0050A0E3 		mov	r5, #0
 4261 17c8 785043E5 		strb	r5, [r3, #-120]
 4262              	.LBE875:
 4263              	.LBE884:
 438:../src/benchmark.c ****   puts_UART( buffer );
 4264              		.loc 1 438 0
 4265 17cc 10008DE2 		add	r0, sp, #16
 4266              	.LVL601:
 4267 17d0 FEFFFFEB 		bl	puts_UART
 4268              	.LVL602:
 439:../src/benchmark.c ****   puts_UART ("\n");
 4269              		.loc 1 439 0
 4270 17d4 4C059FE5 		ldr	r0, .L427+32
 4271 17d8 FEFFFFEB 		bl	puts_UART
 4272              	.LVL603:
 441:../src/benchmark.c ****   puts_UART ("TIME : ");
 4273              		.loc 1 441 0
 4274 17dc 50059FE5 		ldr	r0, .L427+44
 4275 17e0 FEFFFFEB 		bl	puts_UART
 4276              	.LVL604:
 4277              	.LBB885:
 4278              	.LBB886:
 133:../src/benchmark.c ****   if (number > 0)
 4279              		.loc 1 133 0
 4280 17e4 08C09DE5 		ldr	ip, [sp, #8]
 4281 17e8 00005CE3 		cmp	ip, #0
 4282 17ec 160100DA 		ble	.L245
 4283              	.LVL605:
 4284              	.LBB887:
 139:../src/benchmark.c ****       const int units[] =
 4285              		.loc 1 139 0
 4286 17f0 14459FE5 		ldr	r4, .L427+4
 4287 17f4 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 4288 17f8 60E08DE2 		add	lr, sp, #96
 4289 17fc 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 4290 1800 0F00B4E8 		ldmia	r4!, {r0, r1, r2, r3}
 4291 1804 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 4292 1808 030094E8 		ldmia	r4, {r0, r1}
 4293              	.LBE887:
 4294              	.LBE886:
 4295              	.LBE885:
 4296              	.LBB897:
 4297              	.LBB876:
 138:../src/benchmark.c ****       int digitfound = 0;
 4298              		.loc 1 138 0
 4299 180c 0520A0E1 		mov	r2, r5
 4300              	.LBE876:
 4301              	.LBE897:
 4302              	.LBB898:
 4303              	.LBB893:
 4304              	.LBB888:
 139:../src/benchmark.c ****       const int units[] =
 4305              		.loc 1 139 0
 4306 1810 03008EE8 		stmia	lr, {r0, r1}
 4307              	.LVL606:
 193:../src/benchmark.c **** int dhrystone (void)
 4308              		.loc 1 193 0
 4309 1814 5C108DE2 		add	r1, sp, #92
 4310              	.LBE888:
 4311              	.LBE893:
 4312              	.LBE898:
 4313              	.LBB899:
 4314              	.LBB877:
 136:../src/benchmark.c ****       int pos = 0;
 4315              		.loc 1 136 0
 4316 1818 0500A0E1 		mov	r0, r5
 4317              	.LVL607:
 4318              	.L250:
 4319              	.LBE877:
 4320              	.LBE899:
 4321              	.LBB900:
 4322              	.LBB894:
 4323              	.LBB889:
 156:../src/benchmark.c ****           unit  = units[i];
 4324              		.loc 1 156 0
 4325 181c 0430B1E5 		ldr	r3, [r1, #4]!
 4326              	.LVL608:
 159:../src/benchmark.c ****           while (number >= unit)
 4327              		.loc 1 159 0
 4328 1820 0C0053E1 		cmp	r3, ip
 4329 1824 8D0000CA 		bgt	.L246
 4330 1828 0020A0E3 		mov	r2, #0
 4331              	.LVL609:
 4332              	.L247:
 162:../src/benchmark.c ****               number -= unit;
 4333              		.loc 1 162 0
 4334 182c 0CC063E0 		rsb	ip, r3, ip
 4335              	.LVL610:
 159:../src/benchmark.c ****           while (number >= unit)
 4336              		.loc 1 159 0
 4337 1830 0C0053E1 		cmp	r3, ip
 161:../src/benchmark.c ****               digit++;
 4338              		.loc 1 161 0
 4339 1834 012082E2 		add	r2, r2, #1
 4340              	.LVL611:
 159:../src/benchmark.c ****           while (number >= unit)
 4341              		.loc 1 159 0
 4342 1838 FBFFFFDA 		ble	.L247
 4343              	.LVL612:
 4344              	.L248:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 4345              		.loc 1 166 0
 4346 183c 88408DE2 		add	r4, sp, #136
 4347 1840 003084E0 		add	r3, r4, r0
 4348              	.LVL613:
 4349 1844 302082E2 		add	r2, r2, #48
 4350 1848 782043E5 		strb	r2, [r3, #-120]
 4351 184c 010080E2 		add	r0, r0, #1
 4352              	.LVL614:
 4353 1850 0120A0E3 		mov	r2, #1
 4354              	.LVL615:
 4355              	.L249:
 154:../src/benchmark.c ****       for (i = 0; i < 10; ++i)
 4356              		.loc 1 154 0
 4357 1854 04509DE5 		ldr	r5, [sp, #4]
 4358 1858 050051E1 		cmp	r1, r5
 4359 185c EEFFFF1A 		bne	.L250
 168:../src/benchmark.c ****       str[pos] = '\0';
 4360              		.loc 1 168 0
 4361 1860 88708DE2 		add	r7, sp, #136
 4362 1864 000087E0 		add	r0, r7, r0
 4363              	.LVL616:
 4364 1868 0030A0E3 		mov	r3, #0
 4365 186c 783040E5 		strb	r3, [r0, #-120]
 4366              	.LVL617:
 4367              	.L251:
 4368              	.LBE889:
 4369              	.LBE894:
 4370              	.LBE900:
 443:../src/benchmark.c ****   puts_UART( buffer );
 4371              		.loc 1 443 0
 4372 1870 10008DE2 		add	r0, sp, #16
 4373              	.LVL618:
 4374 1874 FEFFFFEB 		bl	puts_UART
 4375              	.LVL619:
 444:../src/benchmark.c ****   puts_UART ("\n");
 4376              		.loc 1 444 0
 4377 1878 A8049FE5 		ldr	r0, .L427+32
 4378 187c FEFFFFEB 		bl	puts_UART
 4379              	.LVL620:
 447:../src/benchmark.c **** }
 4380              		.loc 1 447 0
 4381 1880 0000A0E3 		mov	r0, #0
 4382 1884 8CD08DE2 		add	sp, sp, #140
 4383 1888 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4384 188c 1EFF2FE1 		bx	lr
 4385              	.LVL621:
 4386              	.L235:
 4387              	.LBB901:
 4388              	.LBB866:
 4389              	.LBB860:
 166:../src/benchmark.c ****           if (digitfound) str[pos++] = digit + '0' ;
 4390              		.loc 1 166 0
 4391 1890 000051E3 		cmp	r1, #0
 4392 1894 90FFFF0A 		beq	.L238
 4393 1898 0010A0E3 		mov	r1, #0
 4394              	.LVL622:
 4395 189c 88FFFFEA 		b	.L237
 4396              	.LVL623:
 4397              	.L223:
 4398              	.LBE860:
 4399              	.LBE866:
 4400              	.LBE901:
 4401              	.LBB902:
 4402              	.LBB827:
 4403 18a0 000051E3 		cmp	r1, #0
 4404 18a4 41FFFF0A 		beq	.L226
 4405 18a8 0010A0E3 		mov	r1, #0
 4406              	.LVL624:
 4407 18ac 39FFFFEA 		b	.L225
 4408              	.LVL625:
 4409              	.L213:
 4410              	.LBE827:
 4411              	.LBE902:
 4412              	.LBB903:
 4413              	.LBB800:
 4414 18b0 000051E3 		cmp	r1, #0
 4415 18b4 F3FEFF0A 		beq	.L216
 4416 18b8 0010A0E3 		mov	r1, #0
 4417              	.LVL626:
 4418 18bc EBFEFFEA 		b	.L215
 4419              	.LVL627:
 4420              	.L200:
 4421              	.LBE800:
 4422              	.LBE903:
 4423              	.LBB904:
 4424              	.LBB764:
 4425 18c0 000051E3 		cmp	r1, #0
 4426 18c4 A2FEFF0A 		beq	.L203
 4427 18c8 0010A0E3 		mov	r1, #0
 4428              	.LVL628:
 4429 18cc 9AFEFFEA 		b	.L202
 4430              	.LVL629:
 4431              	.L187:
 4432              	.LBE764:
 4433              	.LBE904:
 4434              	.LBB905:
 4435              	.LBB729:
 4436 18d0 000051E3 		cmp	r1, #0
 4437 18d4 48FEFF0A 		beq	.L190
 4438 18d8 0010A0E3 		mov	r1, #0
 4439              	.LVL630:
 4440 18dc 40FEFFEA 		b	.L189
 4441              	.LVL631:
 4442              	.L174:
 4443              	.LBE729:
 4444              	.LBE905:
 4445              	.LBB906:
 4446              	.LBB695:
 4447              	.LBB689:
 4448 18e0 000051E3 		cmp	r1, #0
 4449 18e4 F3FDFF0A 		beq	.L177
 4450 18e8 0010A0E3 		mov	r1, #0
 4451              	.LVL632:
 4452 18ec EBFDFFEA 		b	.L176
 4453              	.LVL633:
 4454              	.L147:
 4455              	.LBE689:
 4456              	.LBE695:
 4457              	.LBE906:
 4458              	.LBB907:
 4459              	.LBB620:
 4460 18f0 000051E3 		cmp	r1, #0
 4461 18f4 36FDFF0A 		beq	.L150
 4462 18f8 0010A0E3 		mov	r1, #0
 4463              	.LVL634:
 4464 18fc 2EFDFFEA 		b	.L149
 4465              	.LVL635:
 4466              	.L134:
 4467              	.LBE620:
 4468              	.LBE907:
 4469              	.LBB908:
 4470              	.LBB586:
 4471 1900 000051E3 		cmp	r1, #0
 4472 1904 E2FCFF0A 		beq	.L137
 4473 1908 0010A0E3 		mov	r1, #0
 4474              	.LVL636:
 4475 190c DAFCFFEA 		b	.L136
 4476              	.LVL637:
 4477              	.L99:
 4478              	.LBE586:
 4479              	.LBE908:
 4480              	.LBB909:
 4481              	.LBB495:
 4482 1910 000051E3 		cmp	r1, #0
 4483 1914 07FCFF0A 		beq	.L102
 4484 1918 0010A0E3 		mov	r1, #0
 4485              	.LVL638:
 4486 191c FFFBFFEA 		b	.L101
 4487              	.LVL639:
 4488              	.L72:
 4489              	.LBE495:
 4490              	.LBE909:
 4491              	.LBB910:
 4492              	.LBB425:
 4493              	.LBB419:
 4494 1920 000051E3 		cmp	r1, #0
 4495 1924 58FBFF0A 		beq	.L75
 4496 1928 0010A0E3 		mov	r1, #0
 4497              	.LVL640:
 4498 192c 50FBFFEA 		b	.L74
 4499              	.LVL641:
 4500              	.L59:
 4501              	.LBE419:
 4502              	.LBE425:
 4503              	.LBE910:
 4504              	.LBB911:
 4505              	.LBB384:
 4506 1930 000051E3 		cmp	r1, #0
 4507 1934 04FBFF0A 		beq	.L62
 4508 1938 0010A0E3 		mov	r1, #0
 4509              	.LVL642:
 4510 193c FCFAFFEA 		b	.L61
 4511              	.LVL643:
 4512              	.L128:
 4513              	.LBE384:
 4514              	.LBE911:
 4515              	.LBB912:
 4516              	.LBB573:
 4517              	.LBB567:
 4518 1940 000052E3 		cmp	r2, #0
 4519 1944 ABFCFF0A 		beq	.L131
 4520 1948 0020A0E3 		mov	r2, #0
 4521              	.LVL644:
 4522 194c A3FCFFEA 		b	.L130
 4523              	.LVL645:
 4524              	.L121:
 4525              	.LBE567:
 4526              	.LBE573:
 4527              	.LBE912:
 4528              	.LBB913:
 4529              	.LBB553:
 4530              	.LBB548:
 4531 1950 000052E3 		cmp	r2, #0
 4532 1954 79FCFF0A 		beq	.L124
 4533 1958 0020A0E3 		mov	r2, #0
 4534              	.LVL646:
 4535 195c 71FCFFEA 		b	.L123
 4536              	.LVL647:
 4537              	.L113:
 4538              	.LBE548:
 4539              	.LBE553:
 4540              	.LBE913:
 4541              	.LBB914:
 4542              	.LBB534:
 4543              	.LBB527:
 4544 1960 000052E3 		cmp	r2, #0
 4545 1964 49FCFF0A 		beq	.L116
 4546 1968 0020A0E3 		mov	r2, #0
 4547              	.LVL648:
 4548 196c 41FCFFEA 		b	.L115
 4549              	.LVL649:
 4550              	.L105:
 4551              	.LBE527:
 4552              	.LBE534:
 4553              	.LBE914:
 4554              	.LBB915:
 4555              	.LBB515:
 4556              	.LBB509:
 4557 1970 000055E3 		cmp	r5, #0
 4558 1974 17FCFF0A 		beq	.L108
 4559 1978 0020A0E3 		mov	r2, #0
 4560 197c 0FFCFFEA 		b	.L107
 4561              	.LVL650:
 4562              	.L65:
 4563              	.LBE509:
 4564              	.LBE515:
 4565              	.LBE915:
 4566              	.LBB916:
 4567              	.LBB406:
 4568              	.LBB399:
 4569 1980 00005AE3 		cmp	sl, #0
 4570 1984 19FBFF0A 		beq	.L68
 4571 1988 0020A0E3 		mov	r2, #0
 4572 198c 11FBFFEA 		b	.L67
 4573              	.LVL651:
 4574              	.L52:
 4575              	.LBE399:
 4576              	.LBE406:
 4577              	.LBE916:
 4578              	.LBB917:
 4579              	.LBB372:
 4580              	.LBB364:
 4581 1990 000052E3 		cmp	r2, #0
 4582 1994 C5FAFF0A 		beq	.L55
 4583 1998 0020A0E3 		mov	r2, #0
 4584              	.LVL652:
 4585 199c BDFAFFEA 		b	.L54
 4586              	.LVL653:
 4587              	.L180:
 4588              	.LBE364:
 4589              	.LBE372:
 4590              	.LBE917:
 4591              	.LBB918:
 4592              	.LBB717:
 4593              	.LBB710:
 4594 19a0 000055E3 		cmp	r5, #0
 4595 19a4 EDFDFF0A 		beq	.L183
 4596 19a8 0020A0E3 		mov	r2, #0
 4597 19ac E5FDFFEA 		b	.L182
 4598              	.LVL654:
 4599              	.L153:
 4600              	.LBE710:
 4601              	.LBE717:
 4602              	.LBE918:
 4603              	.LBB919:
 4604              	.LBB640:
 4605              	.LBB634:
 4606 19b0 000054E3 		cmp	r4, #0
 4607 19b4 39FDFF0A 		beq	.L156
 4608 19b8 0020A0E3 		mov	r2, #0
 4609 19bc 31FDFFEA 		b	.L155
 4610              	.LVL655:
 4611              	.L140:
 4612              	.LBE634:
 4613              	.LBE640:
 4614              	.LBE919:
 4615              	.LBB920:
 4616              	.LBB608:
 4617              	.LBB601:
 4618 19c0 000055E3 		cmp	r5, #0
 4619 19c4 DBFCFF0A 		beq	.L143
 4620 19c8 0020A0E3 		mov	r2, #0
 4621 19cc D3FCFFEA 		b	.L142
 4622              	.LVL656:
 4623              	.L92:
 4624              	.LBE601:
 4625              	.LBE608:
 4626              	.LBE920:
 4627              	.LBB921:
 4628              	.LBB481:
 4629              	.LBB473:
 4630 19d0 000055E3 		cmp	r5, #0
 4631 19d4 B0FBFF0A 		beq	.L95
 4632 19d8 0020A0E3 		mov	r2, #0
 4633 19dc A9FBFFEA 		b	.L94
 4634              	.LVL657:
 4635              	.L85:
 4636              	.LBE473:
 4637              	.LBE481:
 4638              	.LBE921:
 4639              	.LBB922:
 4640              	.LBB459:
 4641              	.LBB454:
 4642 19e0 000052E3 		cmp	r2, #0
 4643 19e4 7FFBFF0A 		beq	.L88
 4644 19e8 0020A0E3 		mov	r2, #0
 4645              	.LVL658:
 4646 19ec 77FBFFEA 		b	.L87
 4647              	.LVL659:
 4648              	.L78:
 4649              	.LBE454:
 4650              	.LBE459:
 4651              	.LBE922:
 4652              	.LBB923:
 4653              	.LBB443:
 4654              	.LBB439:
 4655 19f0 00005AE3 		cmp	sl, #0
 4656 19f4 4DFBFF0A 		beq	.L81
 4657 19f8 0020A0E3 		mov	r2, #0
 4658 19fc 45FBFFEA 		b	.L80
 4659              	.LVL660:
 4660              	.L206:
 4661              	.LBE439:
 4662              	.LBE443:
 4663              	.LBE923:
 4664              	.LBB924:
 4665              	.LBB786:
 4666              	.LBB779:
 4667 1a00 000052E3 		cmp	r2, #0
 4668 1a04 7AFEFF0A 		beq	.L209
 4669 1a08 0020A0E3 		mov	r2, #0
 4670              	.LVL661:
 4671 1a0c 72FEFFEA 		b	.L208
 4672              	.LVL662:
 4673              	.L193:
 4674              	.LBE779:
 4675              	.LBE786:
 4676              	.LBE924:
 4677              	.LBB925:
 4678              	.LBB751:
 4679              	.LBB744:
 4680 1a10 000054E3 		cmp	r4, #0
 4681 1a14 27FEFF0A 		beq	.L196
 4682 1a18 0020A0E3 		mov	r2, #0
 4683 1a1c 1FFEFFEA 		b	.L195
 4684              	.LVL663:
 4685              	.L168:
 4686              	.LBE744:
 4687              	.LBE751:
 4688              	.LBE925:
 4689              	.LBB926:
 4690              	.LBB677:
 4691              	.LBB672:
 4692 1a20 000055E3 		cmp	r5, #0
 4693 1a24 7CFDFF0A 		beq	.L171
 4694 1a28 0020A0E3 		mov	r2, #0
 4695 1a2c 75FDFFEA 		b	.L170
 4696              	.LVL664:
 4697              	.L161:
 4698              	.LBE672:
 4699              	.LBE677:
 4700              	.LBE926:
 4701              	.LBB927:
 4702              	.LBB655:
 4703              	.LBB651:
 4704 1a30 000052E3 		cmp	r2, #0
 4705 1a34 46FDFF0A 		beq	.L164
 4706 1a38 0020A0E3 		mov	r2, #0
 4707              	.LVL665:
 4708 1a3c 3EFDFFEA 		b	.L163
 4709              	.LVL666:
 4710              	.L229:
 4711              	.LBE651:
 4712              	.LBE655:
 4713              	.LBE927:
 4714              	.LBB928:
 4715              	.LBB846:
 4716              	.LBB841:
 4717 1a40 000052E3 		cmp	r2, #0
 4718 1a44 FFFEFF0A 		beq	.L232
 4719 1a48 0020A0E3 		mov	r2, #0
 4720              	.LVL667:
 4721 1a4c F7FEFFEA 		b	.L231
 4722              	.LVL668:
 4723              	.L218:
 4724              	.LBE841:
 4725              	.LBE846:
 4726              	.LBE928:
 4727              	.LBB929:
 4728              	.LBB813:
 4729 1a50 000051E3 		cmp	r1, #0
 4730 1a54 B0FEFF0A 		beq	.L221
 4731 1a58 0010A0E3 		mov	r1, #0
 4732              	.LVL669:
 4733 1a5c A8FEFFEA 		b	.L220
 4734              	.LVL670:
 4735              	.L246:
 4736              	.LBE813:
 4737              	.LBE929:
 4738              	.LBB930:
 4739              	.LBB895:
 4740              	.LBB890:
 4741 1a60 000052E3 		cmp	r2, #0
 4742 1a64 7AFFFF0A 		beq	.L249
 4743 1a68 0020A0E3 		mov	r2, #0
 4744              	.LVL671:
 4745 1a6c 72FFFFEA 		b	.L248
 4746              	.LVL672:
 4747              	.L240:
 4748              	.LBE890:
 4749              	.LBE895:
 4750              	.LBE930:
 4751              	.LBB931:
 4752              	.LBB878:
 4753 1a70 000052E3 		cmp	r2, #0
 4754 1a74 4DFFFF0A 		beq	.L243
 4755 1a78 0020A0E3 		mov	r2, #0
 4756              	.LVL673:
 4757 1a7c 45FFFFEA 		b	.L242
 4758              	.LVL674:
 4759              	.L205:
 4760              	.LBE878:
 4761              	.LBE931:
 4762              	.LBB932:
 4763              	.LBB787:
 170:../src/benchmark.c ****   else if (number == 0)
 4764              		.loc 1 170 0
 4765 1a80 4B00001A 		bne	.L212
 172:../src/benchmark.c ****       str[0] = '0';
 4766              		.loc 1 172 0
 4767 1a84 3030A0E3 		mov	r3, #48
 4768 1a88 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4769              		.loc 1 173 0
 4770 1a8c 11C0CDE5 		strb	ip, [sp, #17]
 4771 1a90 5EFEFFEA 		b	.L211
 4772              	.LVL675:
 4773              	.L192:
 4774              	.LBE787:
 4775              	.LBE932:
 4776              	.LBB933:
 4777              	.LBB752:
 170:../src/benchmark.c ****   else if (number == 0)
 4778              		.loc 1 170 0
 4779 1a94 6400001A 		bne	.L199
 172:../src/benchmark.c ****       str[0] = '0';
 4780              		.loc 1 172 0
 4781 1a98 3030A0E3 		mov	r3, #48
 4782 1a9c 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4783              		.loc 1 173 0
 4784 1aa0 11B0CDE5 		strb	fp, [sp, #17]
 4785 1aa4 0AFEFFEA 		b	.L198
 4786              	.LVL676:
 4787              	.L179:
 4788              	.LBE752:
 4789              	.LBE933:
 4790              	.LBB934:
 4791              	.LBB718:
 170:../src/benchmark.c ****   else if (number == 0)
 4792              		.loc 1 170 0
 4793 1aa8 5700001A 		bne	.L186
 172:../src/benchmark.c ****       str[0] = '0';
 4794              		.loc 1 172 0
 4795 1aac 3030A0E3 		mov	r3, #48
 4796 1ab0 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4797              		.loc 1 173 0
 4798 1ab4 11E0CDE5 		strb	lr, [sp, #17]
 4799 1ab8 AFFDFFEA 		b	.L185
 4800              	.LVL677:
 4801              	.L152:
 4802              	.LBE718:
 4803              	.LBE934:
 4804              	.LBB935:
 4805              	.LBB641:
 170:../src/benchmark.c ****   else if (number == 0)
 4806              		.loc 1 170 0
 4807 1abc 4A00001A 		bne	.L159
 172:../src/benchmark.c ****       str[0] = '0';
 4808              		.loc 1 172 0
 4809 1ac0 3030A0E3 		mov	r3, #48
 4810 1ac4 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4811              		.loc 1 173 0
 4812 1ac8 11E0CDE5 		strb	lr, [sp, #17]
 4813 1acc FAFCFFEA 		b	.L158
 4814              	.LVL678:
 4815              	.L139:
 4816              	.LBE641:
 4817              	.LBE935:
 4818              	.LBB936:
 4819              	.LBB609:
 170:../src/benchmark.c ****   else if (number == 0)
 4820              		.loc 1 170 0
 4821 1ad0 3D00001A 		bne	.L146
 172:../src/benchmark.c ****       str[0] = '0';
 4822              		.loc 1 172 0
 4823 1ad4 3030A0E3 		mov	r3, #48
 4824 1ad8 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4825              		.loc 1 173 0
 4826 1adc 11E0CDE5 		strb	lr, [sp, #17]
 4827 1ae0 9BFCFFEA 		b	.L145
 4828              	.LVL679:
 4829              	.L112:
 4830              	.LBE609:
 4831              	.LBE936:
 4832              	.LBB937:
 4833              	.LBB535:
 170:../src/benchmark.c ****   else if (number == 0)
 4834              		.loc 1 170 0
 4835 1ae4 7F00001A 		bne	.L119
 172:../src/benchmark.c ****       str[0] = '0';
 4836              		.loc 1 172 0
 4837 1ae8 3030A0E3 		mov	r3, #48
 4838 1aec 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4839              		.loc 1 173 0
 4840 1af0 11E0CDE5 		strb	lr, [sp, #17]
 4841 1af4 ECFBFFEA 		b	.L118
 4842              	.LVL680:
 4843              	.L104:
 4844              	.LBE535:
 4845              	.LBE937:
 4846              	.LBB938:
 4847              	.LBB516:
 170:../src/benchmark.c ****   else if (number == 0)
 4848              		.loc 1 170 0
 4849 1af8 7200001A 		bne	.L111
 172:../src/benchmark.c ****       str[0] = '0';
 4850              		.loc 1 172 0
 4851 1afc 3030A0E3 		mov	r3, #48
 4852 1b00 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4853              		.loc 1 173 0
 4854 1b04 11E0CDE5 		strb	lr, [sp, #17]
 4855 1b08 B9FBFFEA 		b	.L110
 4856              	.LVL681:
 4857              	.L91:
 4858              	.LBE516:
 4859              	.LBE938:
 4860              	.LBB939:
 4861              	.LBB482:
 170:../src/benchmark.c ****   else if (number == 0)
 4862              		.loc 1 170 0
 4863 1b0c 6500001A 		bne	.L98
 172:../src/benchmark.c ****       str[0] = '0';
 4864              		.loc 1 172 0
 4865 1b10 3030A0E3 		mov	r3, #48
 4866 1b14 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4867              		.loc 1 173 0
 4868 1b18 11E0CDE5 		strb	lr, [sp, #17]
 4869 1b1c 65FBFFEA 		b	.L97
 4870              	.LVL682:
 4871              	.L64:
 4872              	.LBE482:
 4873              	.LBE939:
 4874              	.LBB940:
 4875              	.LBB407:
 170:../src/benchmark.c ****   else if (number == 0)
 4876              		.loc 1 170 0
 4877 1b20 5800001A 		bne	.L71
 172:../src/benchmark.c ****       str[0] = '0';
 4878              		.loc 1 172 0
 4879 1b24 3030A0E3 		mov	r3, #48
 4880 1b28 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4881              		.loc 1 173 0
 4882 1b2c 11E0CDE5 		strb	lr, [sp, #17]
 4883 1b30 B5FAFFEA 		b	.L70
 4884              	.LVL683:
 4885              	.L424:
 4886              	.LBE407:
 4887              	.LBE940:
 4888              	.LBB941:
 4889              	.LBB373:
 170:../src/benchmark.c ****   else if (number == 0)
 4890              		.loc 1 170 0
 4891 1b34 4B00001A 		bne	.L58
 172:../src/benchmark.c ****       str[0] = '0';
 4892              		.loc 1 172 0
 4893 1b38 3030A0E3 		mov	r3, #48
 4894 1b3c 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4895              		.loc 1 173 0
 4896 1b40 11E0CDE5 		strb	lr, [sp, #17]
 4897 1b44 60FAFFEA 		b	.L57
 4898              	.LVL684:
 4899              	.L77:
 4900              	.LBE373:
 4901              	.LBE941:
 4902              	.LBB942:
 4903              	.LBB444:
 172:../src/benchmark.c ****       str[0] = '0';
 4904              		.loc 1 172 0
 4905 1b48 3030A0E3 		mov	r3, #48
 4906 1b4c 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4907              		.loc 1 173 0
 4908 1b50 11E0CDE5 		strb	lr, [sp, #17]
 4909 1b54 FCFAFFEA 		b	.L83
 4910              	.LVL685:
 4911              	.L228:
 4912              	.LBE444:
 4913              	.LBE942:
 4914              	.LBB943:
 4915              	.LBB847:
 172:../src/benchmark.c ****       str[0] = '0';
 4916              		.loc 1 172 0
 4917 1b58 3030A0E3 		mov	r3, #48
 4918 1b5c 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4919              		.loc 1 173 0
 4920 1b60 1160CDE5 		strb	r6, [sp, #17]
 4921 1b64 BEFEFFEA 		b	.L234
 4922              	.LVL686:
 4923              	.L84:
 4924              	.LBE847:
 4925              	.LBE943:
 4926              	.LBB944:
 4927              	.LBB460:
 172:../src/benchmark.c ****       str[0] = '0';
 4928              		.loc 1 172 0
 4929 1b68 3030A0E3 		mov	r3, #48
 4930 1b6c 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4931              		.loc 1 173 0
 4932 1b70 11E0CDE5 		strb	lr, [sp, #17]
 4933 1b74 22FBFFEA 		b	.L90
 4934              	.LVL687:
 4935              	.L167:
 4936              	.LBE460:
 4937              	.LBE944:
 4938              	.LBB945:
 4939              	.LBB678:
 172:../src/benchmark.c ****       str[0] = '0';
 4940              		.loc 1 172 0
 4941 1b78 1040CDE5 		strb	r4, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4942              		.loc 1 173 0
 4943 1b7c 11E0CDE5 		strb	lr, [sp, #17]
 4944 1b80 2CFDFFEA 		b	.L173
 4945              	.LVL688:
 4946              	.L160:
 4947              	.LBE678:
 4948              	.LBE945:
 4949              	.LBB946:
 4950              	.LBB656:
 172:../src/benchmark.c ****       str[0] = '0';
 4951              		.loc 1 172 0
 4952 1b84 3030A0E3 		mov	r3, #48
 4953 1b88 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4954              		.loc 1 173 0
 4955 1b8c 11E0CDE5 		strb	lr, [sp, #17]
 4956 1b90 F6FCFFEA 		b	.L166
 4957              	.LVL689:
 4958              	.L127:
 4959              	.LBE656:
 4960              	.LBE946:
 4961              	.LBB947:
 4962              	.LBB574:
 172:../src/benchmark.c ****       str[0] = '0';
 4963              		.loc 1 172 0
 4964 1b94 3030A0E3 		mov	r3, #48
 4965 1b98 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4966              		.loc 1 173 0
 4967 1b9c 11E0CDE5 		strb	lr, [sp, #17]
 4968 1ba0 1BFCFFEA 		b	.L133
 4969              	.LVL690:
 4970              	.L120:
 4971              	.LBE574:
 4972              	.LBE947:
 4973              	.LBB948:
 4974              	.LBB554:
 172:../src/benchmark.c ****       str[0] = '0';
 4975              		.loc 1 172 0
 4976 1ba4 3030A0E3 		mov	r3, #48
 4977 1ba8 1030CDE5 		strb	r3, [sp, #16]
 173:../src/benchmark.c ****       str[1] = '\0';
 4978              		.loc 1 173 0
 4979 1bac 11E0CDE5 		strb	lr, [sp, #17]
 4980 1bb0 E9FBFFEA 		b	.L126
 4981              	.LVL691:
 4982              	.L212:
 4983              	.LBE554:
 4984              	.LBE948:
 4985              	.LBB949:
 4986              	.LBB788:
 4987              	.LBB780:
 4988              	.LBB781:
 177:../src/benchmark.c ****       str[0] = '-';
 4989              		.loc 1 177 0
 4990 1bb4 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 4991              		.loc 1 178 0
 4992 1bb8 11008DE2 		add	r0, sp, #17
 4993 1bbc 00106CE2 		rsb	r1, ip, #0
 177:../src/benchmark.c ****       str[0] = '-';
 4994              		.loc 1 177 0
 4995 1bc0 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 4996              		.loc 1 178 0
 4997 1bc4 FEFFFFEB 		bl	int_to_a
 4998              	.LVL692:
 4999 1bc8 10FEFFEA 		b	.L211
 5000              	.LVL693:
 5001              	.L146:
 5002              	.LBE781:
 5003              	.LBE780:
 5004              	.LBE788:
 5005              	.LBE949:
 5006              	.LBB950:
 5007              	.LBB610:
 5008              	.LBB602:
 5009              	.LBB603:
 177:../src/benchmark.c ****       str[0] = '-';
 5010              		.loc 1 177 0
 5011 1bcc 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5012              		.loc 1 178 0
 5013 1bd0 11008DE2 		add	r0, sp, #17
 5014 1bd4 00106EE2 		rsb	r1, lr, #0
 5015 1bd8 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5016              		.loc 1 177 0
 5017 1bdc 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5018              		.loc 1 178 0
 5019 1be0 FEFFFFEB 		bl	int_to_a
 5020              	.LVL694:
 5021 1be4 00C09DE5 		ldr	ip, [sp, #0]
 5022 1be8 59FCFFEA 		b	.L145
 5023              	.LVL695:
 5024              	.L159:
 5025              	.LBE603:
 5026              	.LBE602:
 5027              	.LBE610:
 5028              	.LBE950:
 5029              	.LBB951:
 5030              	.LBB642:
 5031              	.LBB635:
 5032              	.LBB636:
 177:../src/benchmark.c ****       str[0] = '-';
 5033              		.loc 1 177 0
 5034 1bec 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5035              		.loc 1 178 0
 5036 1bf0 11008DE2 		add	r0, sp, #17
 5037 1bf4 00106EE2 		rsb	r1, lr, #0
 5038 1bf8 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5039              		.loc 1 177 0
 5040 1bfc 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5041              		.loc 1 178 0
 5042 1c00 FEFFFFEB 		bl	int_to_a
 5043              	.LVL696:
 5044 1c04 00C09DE5 		ldr	ip, [sp, #0]
 5045 1c08 ABFCFFEA 		b	.L158
 5046              	.LVL697:
 5047              	.L186:
 5048              	.LBE636:
 5049              	.LBE635:
 5050              	.LBE642:
 5051              	.LBE951:
 5052              	.LBB952:
 5053              	.LBB719:
 5054              	.LBB711:
 5055              	.LBB712:
 177:../src/benchmark.c ****       str[0] = '-';
 5056              		.loc 1 177 0
 5057 1c0c 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5058              		.loc 1 178 0
 5059 1c10 11008DE2 		add	r0, sp, #17
 5060 1c14 00106EE2 		rsb	r1, lr, #0
 5061 1c18 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5062              		.loc 1 177 0
 5063 1c1c 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5064              		.loc 1 178 0
 5065 1c20 FEFFFFEB 		bl	int_to_a
 5066              	.LVL698:
 5067 1c24 00C09DE5 		ldr	ip, [sp, #0]
 5068 1c28 53FDFFEA 		b	.L185
 5069              	.LVL699:
 5070              	.L199:
 5071              	.LBE712:
 5072              	.LBE711:
 5073              	.LBE719:
 5074              	.LBE952:
 5075              	.LBB953:
 5076              	.LBB753:
 5077              	.LBB745:
 5078              	.LBB746:
 177:../src/benchmark.c ****       str[0] = '-';
 5079              		.loc 1 177 0
 5080 1c2c 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5081              		.loc 1 178 0
 5082 1c30 11008DE2 		add	r0, sp, #17
 5083 1c34 00106BE2 		rsb	r1, fp, #0
 5084 1c38 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5085              		.loc 1 177 0
 5086 1c3c 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5087              		.loc 1 178 0
 5088 1c40 FEFFFFEB 		bl	int_to_a
 5089              	.LVL700:
 5090 1c44 00C09DE5 		ldr	ip, [sp, #0]
 5091 1c48 A1FDFFEA 		b	.L198
 5092              	.LVL701:
 5093              	.L245:
 5094              	.LBE746:
 5095              	.LBE745:
 5096              	.LBE753:
 5097              	.LBE953:
 5098              	.LBB954:
 5099              	.LBB896:
 5100              	.LBB891:
 5101              	.LBB892:
 5102 1c4c 08C09DE5 		ldr	ip, [sp, #8]
 5103              	.LVL702:
 177:../src/benchmark.c ****       str[0] = '-';
 5104              		.loc 1 177 0
 5105 1c50 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5106              		.loc 1 178 0
 5107 1c54 11008DE2 		add	r0, sp, #17
 5108 1c58 00106CE2 		rsb	r1, ip, #0
 177:../src/benchmark.c ****       str[0] = '-';
 5109              		.loc 1 177 0
 5110 1c5c 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5111              		.loc 1 178 0
 5112 1c60 FEFFFFEB 		bl	int_to_a
 5113              	.LVL703:
 5114 1c64 01FFFFEA 		b	.L251
 5115              	.LVL704:
 5116              	.L58:
 5117              	.LBE892:
 5118              	.LBE891:
 5119              	.LBE896:
 5120              	.LBE954:
 5121              	.LBB955:
 5122              	.LBB374:
 5123              	.LBB365:
 5124              	.LBB366:
 177:../src/benchmark.c ****       str[0] = '-';
 5125              		.loc 1 177 0
 5126 1c68 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5127              		.loc 1 178 0
 5128 1c6c 11008DE2 		add	r0, sp, #17
 5129 1c70 00106EE2 		rsb	r1, lr, #0
 5130 1c74 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5131              		.loc 1 177 0
 5132 1c78 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5133              		.loc 1 178 0
 5134 1c7c FEFFFFEB 		bl	int_to_a
 5135              	.LVL705:
 5136 1c80 00C09DE5 		ldr	ip, [sp, #0]
 5137 1c84 10FAFFEA 		b	.L57
 5138              	.LVL706:
 5139              	.L71:
 5140              	.LBE366:
 5141              	.LBE365:
 5142              	.LBE374:
 5143              	.LBE955:
 5144              	.LBB956:
 5145              	.LBB408:
 5146              	.LBB400:
 5147              	.LBB401:
 177:../src/benchmark.c ****       str[0] = '-';
 5148              		.loc 1 177 0
 5149 1c88 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5150              		.loc 1 178 0
 5151 1c8c 11008DE2 		add	r0, sp, #17
 5152 1c90 00106EE2 		rsb	r1, lr, #0
 5153 1c94 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5154              		.loc 1 177 0
 5155 1c98 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5156              		.loc 1 178 0
 5157 1c9c FEFFFFEB 		bl	int_to_a
 5158              	.LVL707:
 5159 1ca0 00C09DE5 		ldr	ip, [sp, #0]
 5160 1ca4 58FAFFEA 		b	.L70
 5161              	.LVL708:
 5162              	.L98:
 5163              	.LBE401:
 5164              	.LBE400:
 5165              	.LBE408:
 5166              	.LBE956:
 5167              	.LBB957:
 5168              	.LBB483:
 5169              	.LBB474:
 5170              	.LBB475:
 177:../src/benchmark.c ****       str[0] = '-';
 5171              		.loc 1 177 0
 5172 1ca8 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5173              		.loc 1 178 0
 5174 1cac 11008DE2 		add	r0, sp, #17
 5175 1cb0 00106EE2 		rsb	r1, lr, #0
 5176 1cb4 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5177              		.loc 1 177 0
 5178 1cb8 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5179              		.loc 1 178 0
 5180 1cbc FEFFFFEB 		bl	int_to_a
 5181              	.LVL709:
 5182 1cc0 00C09DE5 		ldr	ip, [sp, #0]
 5183 1cc4 FBFAFFEA 		b	.L97
 5184              	.LVL710:
 5185              	.L111:
 5186              	.LBE475:
 5187              	.LBE474:
 5188              	.LBE483:
 5189              	.LBE957:
 5190              	.LBB958:
 5191              	.LBB517:
 5192              	.LBB510:
 5193              	.LBB511:
 177:../src/benchmark.c ****       str[0] = '-';
 5194              		.loc 1 177 0
 5195 1cc8 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5196              		.loc 1 178 0
 5197 1ccc 11008DE2 		add	r0, sp, #17
 5198 1cd0 00106EE2 		rsb	r1, lr, #0
 5199 1cd4 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5200              		.loc 1 177 0
 5201 1cd8 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5202              		.loc 1 178 0
 5203 1cdc FEFFFFEB 		bl	int_to_a
 5204              	.LVL711:
 5205 1ce0 00C09DE5 		ldr	ip, [sp, #0]
 5206 1ce4 42FBFFEA 		b	.L110
 5207              	.LVL712:
 5208              	.L119:
 5209              	.LBE511:
 5210              	.LBE510:
 5211              	.LBE517:
 5212              	.LBE958:
 5213              	.LBB959:
 5214              	.LBB536:
 5215              	.LBB528:
 5216              	.LBB529:
 177:../src/benchmark.c ****       str[0] = '-';
 5217              		.loc 1 177 0
 5218 1ce8 2D30A0E3 		mov	r3, #45
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5219              		.loc 1 178 0
 5220 1cec 11008DE2 		add	r0, sp, #17
 5221 1cf0 00106EE2 		rsb	r1, lr, #0
 5222 1cf4 00C08DE5 		str	ip, [sp, #0]
 177:../src/benchmark.c ****       str[0] = '-';
 5223              		.loc 1 177 0
 5224 1cf8 1030CDE5 		strb	r3, [sp, #16]
 178:../src/benchmark.c ****       int_to_a(str+1, -number);
 5225              		.loc 1 178 0
 5226 1cfc FEFFFFEB 		bl	int_to_a
 5227              	.LVL713:
 5228 1d00 00C09DE5 		ldr	ip, [sp, #0]
 5229 1d04 68FBFFEA 		b	.L118
 5230              	.L428:
 5231              		.align	2
 5232              	.L427:
 5233 1d08 E0000000 		.word	.LC8
 5234 1d0c 00000000 		.word	.LANCHOR0
 5235 1d10 64030000 		.word	.LC31
 5236 1d14 80030000 		.word	.LC32
 5237 1d18 9C030000 		.word	.LC33
 5238 1d1c B8030000 		.word	.LC34
 5239 1d20 F0030000 		.word	.LC35
 5240 1d24 0C040000 		.word	.LC36
 5241 1d28 40000000 		.word	.LC3
 5242 1d2c 44040000 		.word	.LC37
 5243 1d30 64040000 		.word	.LC38
 5244 1d34 6C040000 		.word	.LC39
 5245              	.LBE529:
 5246              	.LBE528:
 5247              	.LBE536:
 5248              	.LBE959:
 5249              		.cfi_endproc
 5250              	.LFE2:
 5252              		.section	.text.start_benchmark,"ax",%progbits
 5253              		.align	2
 5254              		.global	start_benchmark
 5256              	start_benchmark:
 5257              	.LFB1:
 187:../src/benchmark.c **** {
 5258              		.loc 1 187 0
 5259              		.cfi_startproc
 5260              		@ Function supports interworking.
 5261              		@ args = 0, pretend = 0, frame = 0
 5262              		@ frame_needed = 0, uses_anonymous_args = 0
 5263              		@ link register save eliminated.
 189:../src/benchmark.c **** }
 5264              		.loc 1 189 0
 188:../src/benchmark.c ****   dhrystone();
 5265              		.loc 1 188 0
 5266 0000 FEFFFFEA 		b	dhrystone
 5267              	.LVL714:
 5268              		.cfi_endproc
 5269              	.LFE1:
 5271              		.section	.text.Proc_2,"ax",%progbits
 5272              		.align	2
 5273              		.global	Proc_2
 5275              	Proc_2:
 5276              	.LFB4:
 484:../src/benchmark.c **** {
 5277              		.loc 1 484 0
 5278              		.cfi_startproc
 5279              		@ Function supports interworking.
 5280              		@ args = 0, pretend = 0, frame = 0
 5281              		@ frame_needed = 0, uses_anonymous_args = 0
 5282              		@ link register save eliminated.
 5283              	.LVL715:
 490:../src/benchmark.c ****     if (Ch_1_Glob == 'A')
 5284              		.loc 1 490 0
 5285 0000 20309FE5 		ldr	r3, .L432
 5286 0004 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5287 0008 410053E3 		cmp	r3, #65
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 5288              		.loc 1 494 0
 5289 000c 18209F05 		ldreq	r2, .L432+4
 488:../src/benchmark.c ****   Int_Loc = *Int_Par_Ref + 10;
 5290              		.loc 1 488 0
 5291 0010 003090E5 		ldr	r3, [r0, #0]
 5292              	.LVL716:
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 5293              		.loc 1 494 0
 5294 0014 00209205 		ldreq	r2, [r2, #0]
 493:../src/benchmark.c ****         Int_Loc -= 1;
 5295              		.loc 1 493 0
 5296 0018 09308302 		addeq	r3, r3, #9
 5297              	.LVL717:
 494:../src/benchmark.c ****         *Int_Par_Ref = Int_Loc - Int_Glob;
 5298              		.loc 1 494 0
 5299 001c 03306200 		rsbeq	r3, r2, r3
 5300 0020 00308005 		streq	r3, [r0, #0]
 5301              	.LVL718:
 5302 0024 1EFF2FE1 		bx	lr
 5303              	.L433:
 5304              		.align	2
 5305              	.L432:
 5306 0028 00000000 		.word	Ch_1_Glob
 5307 002c 00000000 		.word	Int_Glob
 5308              		.cfi_endproc
 5309              	.LFE4:
 5311              		.section	.text.Proc_3,"ax",%progbits
 5312              		.align	2
 5313              		.global	Proc_3
 5315              	Proc_3:
 5316              	.LFB5:
 505:../src/benchmark.c **** {
 5317              		.loc 1 505 0
 5318              		.cfi_startproc
 5319              		@ Function supports interworking.
 5320              		@ args = 0, pretend = 0, frame = 0
 5321              		@ frame_needed = 0, uses_anonymous_args = 0
 5322              		@ link register save eliminated.
 5323              	.LVL719:
 506:../src/benchmark.c ****   if (Ptr_Glob != NULL)
 5324              		.loc 1 506 0
 5325 0000 24209FE5 		ldr	r2, .L437
 5326 0004 003092E5 		ldr	r3, [r2, #0]
 5327 0008 000053E3 		cmp	r3, #0
 508:../src/benchmark.c ****     *Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
 5328              		.loc 1 508 0
 5329 000c 00309315 		ldrne	r3, [r3, #0]
 5330 0010 00308015 		strne	r3, [r0, #0]
 5331 0014 00309215 		ldrne	r3, [r2, #0]
 5332              	.LVL720:
 5333              	.LBB960:
 5334              	.LBB961:
 581:../src/benchmark.c ****   *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
 5335              		.loc 1 581 0
 5336 0018 10209FE5 		ldr	r2, .L437+4
 5337 001c 002092E5 		ldr	r2, [r2, #0]
 5338              	.LVL721:
 5339 0020 0C2082E2 		add	r2, r2, #12
 5340              	.LVL722:
 5341 0024 0C2083E5 		str	r2, [r3, #12]
 5342 0028 1EFF2FE1 		bx	lr
 5343              	.L438:
 5344              		.align	2
 5345              	.L437:
 5346 002c 00000000 		.word	Ptr_Glob
 5347 0030 00000000 		.word	Int_Glob
 5348              	.LBE961:
 5349              	.LBE960:
 5350              		.cfi_endproc
 5351              	.LFE5:
 5353              		.section	.text.Proc_4,"ax",%progbits
 5354              		.align	2
 5355              		.global	Proc_4
 5357              	Proc_4:
 5358              	.LFB6:
 516:../src/benchmark.c **** {
 5359              		.loc 1 516 0
 5360              		.cfi_startproc
 5361              		@ Function supports interworking.
 5362              		@ args = 0, pretend = 0, frame = 0
 5363              		@ frame_needed = 0, uses_anonymous_args = 0
 5364              		@ link register save eliminated.
 5365              	.LVL723:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 5366              		.loc 1 520 0
 5367 0000 24309FE5 		ldr	r3, .L440
 519:../src/benchmark.c ****   Bool_Loc = Ch_1_Glob == 'A';
 5368              		.loc 1 519 0
 5369 0004 24109FE5 		ldr	r1, .L440+4
 5370              	.LVL724:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 5371              		.loc 1 520 0
 5372 0008 002093E5 		ldr	r2, [r3, #0]
 519:../src/benchmark.c ****   Bool_Loc = Ch_1_Glob == 'A';
 5373              		.loc 1 519 0
 5374 000c 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 5375              	.LVL725:
 520:../src/benchmark.c ****   Bool_Glob = Bool_Loc | Bool_Glob;
 5376              		.loc 1 520 0
 5377 0010 410051E3 		cmp	r1, #65
 5378 0014 01208203 		orreq	r2, r2, #1
 5379 0018 002083E5 		str	r2, [r3, #0]
 521:../src/benchmark.c ****   Ch_2_Glob = 'B';
 5380              		.loc 1 521 0
 5381 001c 10309FE5 		ldr	r3, .L440+8
 5382 0020 4220A0E3 		mov	r2, #66
 5383 0024 0020C3E5 		strb	r2, [r3, #0]
 5384 0028 1EFF2FE1 		bx	lr
 5385              	.L441:
 5386              		.align	2
 5387              	.L440:
 5388 002c 00000000 		.word	Bool_Glob
 5389 0030 00000000 		.word	Ch_1_Glob
 5390 0034 00000000 		.word	Ch_2_Glob
 5391              		.cfi_endproc
 5392              	.LFE6:
 5394              		.section	.text.Proc_5,"ax",%progbits
 5395              		.align	2
 5396              		.global	Proc_5
 5398              	Proc_5:
 5399              	.LFB7:
 528:../src/benchmark.c **** {
 5400              		.loc 1 528 0
 5401              		.cfi_startproc
 5402              		@ Function supports interworking.
 5403              		@ args = 0, pretend = 0, frame = 0
 5404              		@ frame_needed = 0, uses_anonymous_args = 0
 5405              		@ link register save eliminated.
 529:../src/benchmark.c ****   Ch_1_Glob = 'A';
 5406              		.loc 1 529 0
 5407 0000 14309FE5 		ldr	r3, .L443
 5408 0004 4120A0E3 		mov	r2, #65
 5409 0008 0020C3E5 		strb	r2, [r3, #0]
 530:../src/benchmark.c ****   Bool_Glob = false;
 5410              		.loc 1 530 0
 5411 000c 0C309FE5 		ldr	r3, .L443+4
 5412 0010 0020A0E3 		mov	r2, #0
 5413 0014 002083E5 		str	r2, [r3, #0]
 5414 0018 1EFF2FE1 		bx	lr
 5415              	.L444:
 5416              		.align	2
 5417              	.L443:
 5418 001c 00000000 		.word	Ch_1_Glob
 5419 0020 00000000 		.word	Bool_Glob
 5420              		.cfi_endproc
 5421              	.LFE7:
 5423              		.section	.text.Proc_6,"ax",%progbits
 5424              		.align	2
 5425              		.global	Proc_6
 5427              	Proc_6:
 5428              	.LFB8:
 538:../src/benchmark.c **** {
 5429              		.loc 1 538 0
 5430              		.cfi_startproc
 5431              		@ Function supports interworking.
 5432              		@ args = 0, pretend = 0, frame = 0
 5433              		@ frame_needed = 0, uses_anonymous_args = 0
 5434              		@ link register save eliminated.
 5435              	.LVL726:
 5436              	.LBB968:
 5437              	.LBB969:
 5438              		.loc 1 680 0
 5439 0000 020050E3 		cmp	r0, #2
 5440              	.LBE969:
 5441              	.LBE968:
 539:../src/benchmark.c ****   *Enum_Ref_Par = Enum_Val_Par;
 5442              		.loc 1 539 0
 5443 0004 0000C1E5 		strb	r0, [r1, #0]
 5444              	.LVL727:
 5445              	.LBB971:
 5446              	.LBB970:
 5447              		.loc 1 680 0
 5448 0008 1300000A 		beq	.L446
 5449 000c 0330A0E3 		mov	r3, #3
 5450 0010 0030C1E5 		strb	r3, [r1, #0]
 5451              	.LBE970:
 5452              	.LBE971:
 543:../src/benchmark.c ****   switch (Enum_Val_Par)
 5453              		.loc 1 543 0
 5454 0014 040050E3 		cmp	r0, #4
 5455 0018 00F19F97 		ldrls	pc, [pc, r0, asl #2]
 5456 001c 060000EA 		b	.L445
 5457              	.L451:
 5458 0020 50000000 		.word	.L455
 5459 0024 40000000 		.word	.L449
 5460 0028 5C000000 		.word	.L446
 5461 002c 3C000000 		.word	.L445
 5462 0030 34000000 		.word	.L450
 5463              	.L450:
 560:../src/benchmark.c ****     *Enum_Ref_Par = Ident_3;
 5464              		.loc 1 560 0
 5465 0034 0230A0E3 		mov	r3, #2
 5466 0038 0030C1E5 		strb	r3, [r1, #0]
 5467              	.L445:
 5468 003c 1EFF2FE1 		bx	lr
 5469              	.L449:
 5470              	.LVL728:
 5471              	.LBB972:
 5472              	.LBB973:
 549:../src/benchmark.c ****     if (Int_Glob > 100)
 5473              		.loc 1 549 0
 5474 0040 20309FE5 		ldr	r3, .L456
 5475 0044 003093E5 		ldr	r3, [r3, #0]
 5476 0048 640053E3 		cmp	r3, #100
 5477 004c 1EFF2FD1 		bxle	lr
 5478              	.LVL729:
 5479              	.L455:
 550:../src/benchmark.c ****       *Enum_Ref_Par = Ident_1;
 5480              		.loc 1 550 0
 5481 0050 0030A0E3 		mov	r3, #0
 5482 0054 0030C1E5 		strb	r3, [r1, #0]
 5483 0058 1EFF2FE1 		bx	lr
 5484              	.L446:
 5485              	.LBE973:
 5486              	.LBE972:
 555:../src/benchmark.c ****     *Enum_Ref_Par = Ident_2;
 5487              		.loc 1 555 0
 5488 005c 0130A0E3 		mov	r3, #1
 5489 0060 0030C1E5 		strb	r3, [r1, #0]
 556:../src/benchmark.c ****     break;
 5490              		.loc 1 556 0
 5491 0064 1EFF2FE1 		bx	lr
 5492              	.L457:
 5493              		.align	2
 5494              	.L456:
 5495 0068 00000000 		.word	Int_Glob
 5496              		.cfi_endproc
 5497              	.LFE8:
 5499              		.section	.text.Proc_7,"ax",%progbits
 5500              		.align	2
 5501              		.global	Proc_7
 5503              	Proc_7:
 5504              	.LFB9:
 577:../src/benchmark.c **** {
 5505              		.loc 1 577 0
 5506              		.cfi_startproc
 5507              		@ Function supports interworking.
 5508              		@ args = 0, pretend = 0, frame = 0
 5509              		@ frame_needed = 0, uses_anonymous_args = 0
 5510              		@ link register save eliminated.
 5511              	.LVL730:
 580:../src/benchmark.c ****   Int_Loc = Int_1_Par_Val + 2;
 5512              		.loc 1 580 0
 5513 0000 020080E2 		add	r0, r0, #2
 5514              	.LVL731:
 581:../src/benchmark.c ****   *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
 5515              		.loc 1 581 0
 5516 0004 001081E0 		add	r1, r1, r0
 5517              	.LVL732:
 5518 0008 001082E5 		str	r1, [r2, #0]
 5519 000c 1EFF2FE1 		bx	lr
 5520              		.cfi_endproc
 5521              	.LFE9:
 5523              		.section	.text.Proc_8,"ax",%progbits
 5524              		.align	2
 5525              		.global	Proc_8
 5527              	Proc_8:
 5528              	.LFB10:
 593:../src/benchmark.c **** {
 5529              		.loc 1 593 0
 5530              		.cfi_startproc
 5531              		@ Function supports interworking.
 5532              		@ args = 0, pretend = 0, frame = 0
 5533              		@ frame_needed = 0, uses_anonymous_args = 0
 5534              		@ link register save eliminated.
 5535              	.LVL733:
 597:../src/benchmark.c ****   Int_Loc = Int_1_Par_Val + 5;
 5536              		.loc 1 597 0
 5537 0000 05C082E2 		add	ip, r2, #5
 5538              	.LVL734:
 593:../src/benchmark.c **** {
 5539              		.loc 1 593 0
 5540 0004 30002DE9 		stmfd	sp!, {r4, r5}
 5541              	.LCFI5:
 5542              		.cfi_def_cfa_offset 8
 5543              		.cfi_offset 4, -8
 5544              		.cfi_offset 5, -4
 602:../src/benchmark.c ****     Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
 5545              		.loc 1 602 0
 5546 0008 0C418CE0 		add	r4, ip, ip, asl #2
 5547 000c 044184E0 		add	r4, r4, r4, asl #2
 5548 0010 841181E0 		add	r1, r1, r4, asl #3
 5549              	.LVL735:
 600:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
 5550              		.loc 1 600 0
 5551 0014 235082E2 		add	r5, r2, #35
 599:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
 5552              		.loc 1 599 0
 5553 0018 064082E2 		add	r4, r2, #6
 598:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
 5554              		.loc 1 598 0
 5555 001c 0C3180E7 		str	r3, [r0, ip, asl #2]
 599:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
 5556              		.loc 1 599 0
 5557 0020 043180E7 		str	r3, [r0, r4, asl #2]
 600:../src/benchmark.c ****   Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
 5558              		.loc 1 600 0
 5559 0024 05C180E7 		str	ip, [r0, r5, asl #2]
 5560              	.LVL736:
 602:../src/benchmark.c ****     Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
 5561              		.loc 1 602 0
 5562 0028 0CC181E7 		str	ip, [r1, ip, asl #2]
 5563              	.LVL737:
 5564 002c 04C181E7 		str	ip, [r1, r4, asl #2]
 5565              	.LVL738:
 603:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
 5566              		.loc 1 603 0
 5567 0030 042082E2 		add	r2, r2, #4
 5568              	.LVL739:
 5569 0034 023191E7 		ldr	r3, [r1, r2, asl #2]
 5570              	.LVL740:
 5571 0038 013083E2 		add	r3, r3, #1
 5572 003c 023181E7 		str	r3, [r1, r2, asl #2]
 604:../src/benchmark.c ****   Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
 5573              		.loc 1 604 0
 5574 0040 0C3190E7 		ldr	r3, [r0, ip, asl #2]
 5575 0044 FA1E81E2 		add	r1, r1, #4000
 5576 0048 0C3181E7 		str	r3, [r1, ip, asl #2]
 605:../src/benchmark.c ****   Int_Glob = 5;
 5577              		.loc 1 605 0
 5578 004c 0C309FE5 		ldr	r3, .L460
 5579 0050 0520A0E3 		mov	r2, #5
 5580              	.LVL741:
 5581 0054 002083E5 		str	r2, [r3, #0]
 606:../src/benchmark.c **** } /* Proc_8 */
 5582              		.loc 1 606 0
 5583 0058 3000BDE8 		ldmfd	sp!, {r4, r5}
 5584 005c 1EFF2FE1 		bx	lr
 5585              	.L461:
 5586              		.align	2
 5587              	.L460:
 5588 0060 00000000 		.word	Int_Glob
 5589              		.cfi_endproc
 5590              	.LFE10:
 5592              		.section	.text.Func_1,"ax",%progbits
 5593              		.align	2
 5594              		.global	Func_1
 5596              	Func_1:
 5597              	.LFB11:
 615:../src/benchmark.c **** {
 5598              		.loc 1 615 0
 5599              		.cfi_startproc
 5600              		@ Function supports interworking.
 5601              		@ args = 0, pretend = 0, frame = 0
 5602              		@ frame_needed = 0, uses_anonymous_args = 0
 5603              		@ link register save eliminated.
 5604              	.LVL742:
 621:../src/benchmark.c ****   if (Ch_2_Loc != Ch_2_Par_Val)
 5605              		.loc 1 621 0
 5606 0000 010050E1 		cmp	r0, r1
 626:../src/benchmark.c ****       Ch_1_Glob = Ch_1_Loc;
 5607              		.loc 1 626 0
 5608 0004 10209F05 		ldreq	r2, .L465
 615:../src/benchmark.c **** {
 5609              		.loc 1 615 0
 5610 0008 0030A0E1 		mov	r3, r0
 5611              	.LVL743:
 626:../src/benchmark.c ****       Ch_1_Glob = Ch_1_Loc;
 5612              		.loc 1 626 0
 5613 000c 0030C205 		streqb	r3, [r2, #0]
 627:../src/benchmark.c ****       return (Ident_2);
 5614              		.loc 1 627 0
 5615 0010 0100A003 		moveq	r0, #1
 5616              	.LVL744:
 623:../src/benchmark.c ****     return (Ident_1);
 5617              		.loc 1 623 0
 5618 0014 0000A013 		movne	r0, #0
 629:../src/benchmark.c **** } /* Func_1 */
 5619              		.loc 1 629 0
 5620 0018 1EFF2FE1 		bx	lr
 5621              	.L466:
 5622              		.align	2
 5623              	.L465:
 5624 001c 00000000 		.word	Ch_1_Glob
 5625              		.cfi_endproc
 5626              	.LFE11:
 5628              		.section	.text.Func_2,"ax",%progbits
 5629              		.align	2
 5630              		.global	Func_2
 5632              	Func_2:
 5633              	.LFB12:
 637:../src/benchmark.c **** {
 5634              		.loc 1 637 0
 5635              		.cfi_startproc
 5636              		@ Function supports interworking.
 5637              		@ args = 0, pretend = 0, frame = 0
 5638              		@ frame_needed = 0, uses_anonymous_args = 0
 5639              	.LVL745:
 5640 0000 08402DE9 		stmfd	sp!, {r3, lr}
 5641              	.LCFI6:
 5642              		.cfi_def_cfa_offset 8
 5643              		.cfi_offset 3, -8
 5644              		.cfi_offset 14, -4
 5645 0004 0220D0E5 		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 5646 0008 0330D1E5 		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 5647 000c 030052E1 		cmp	r2, r3
 5648 0010 0800000A 		beq	.L472
 5649              	.LVL746:
 659:../src/benchmark.c ****       if (strcmp (Str_1_Par_Ref, Str_2_Par_Ref) > 0)
 5650              		.loc 1 659 0
 5651 0014 FEFFFFEB 		bl	strcmp
 5652              	.LVL747:
 5653 0018 000050E3 		cmp	r0, #0
 5654              	.LVL748:
 663:../src/benchmark.c ****           Int_Glob = Int_Loc;
 5655              		.loc 1 663 0
 5656 001c 18309FC5 		ldrgt	r3, .L473
 5657 0020 0A20A0C3 		movgt	r2, #10
 5658 0024 002083C5 		strgt	r2, [r3, #0]
 664:../src/benchmark.c ****           return (true);
 5659              		.loc 1 664 0
 5660 0028 0100A0C3 		movgt	r0, #1
 667:../src/benchmark.c ****         return (false);
 5661              		.loc 1 667 0
 5662 002c 0000A0D3 		movle	r0, #0
 669:../src/benchmark.c **** } /* Func_2 */
 5663              		.loc 1 669 0
 5664 0030 0840BDE8 		ldmfd	sp!, {r3, lr}
 5665 0034 1EFF2FE1 		bx	lr
 5666              	.LVL749:
 5667              	.L472:
 5668 0038 FEFFFFEA 		b	.L472
 5669              	.L474:
 5670              		.align	2
 5671              	.L473:
 5672 003c 00000000 		.word	Int_Glob
 5673              		.cfi_endproc
 5674              	.LFE12:
 5676              		.section	.text.Func_3,"ax",%progbits
 5677              		.align	2
 5678              		.global	Func_3
 5680              	Func_3:
 5681              	.LFB13:
 676:../src/benchmark.c **** {
 5682              		.loc 1 676 0
 5683              		.cfi_startproc
 5684              		@ Function supports interworking.
 5685              		@ args = 0, pretend = 0, frame = 0
 5686              		@ frame_needed = 0, uses_anonymous_args = 0
 5687              		@ link register save eliminated.
 5688              	.LVL750:
 681:../src/benchmark.c ****     /* then, executed */
 682:../src/benchmark.c ****     return (true);
 683:../src/benchmark.c ****   else /* not executed */
 684:../src/benchmark.c ****     return (false);
 685:../src/benchmark.c **** } /* Func_3 */
 5689              		.loc 1 685 0
 5690 0000 023050E2 		subs	r3, r0, #2
 5691 0004 000073E2 		rsbs	r0, r3, #0
 5692              	.LVL751:
 5693 0008 0300B0E0 		adcs	r0, r0, r3
 5694 000c 1EFF2FE1 		bx	lr
 5695              		.cfi_endproc
 5696              	.LFE13:
 5698              		.global	Reg
 5699              		.comm	Arr_2_Glob,10000,4
 5700              		.comm	Arr_1_Glob,200,4
 5701              		.comm	Ch_2_Glob,1,1
 5702              		.comm	Ch_1_Glob,1,1
 5703              		.comm	Bool_Glob,4,4
 5704              		.comm	Int_Glob,4,4
 5705              		.comm	Next_Ptr_Glob,4,4
 5706              		.comm	Ptr_Glob,4,4
 5707              		.section	.rodata
 5708              		.align	2
 5709              		.set	.LANCHOR0,. + 0
 5710              	.LC0:
 5711 0000 00CA9A3B 		.word	1000000000
 5712 0004 00E1F505 		.word	100000000
 5713 0008 80969800 		.word	10000000
 5714 000c 40420F00 		.word	1000000
 5715 0010 A0860100 		.word	100000
 5716 0014 10270000 		.word	10000
 5717 0018 E8030000 		.word	1000
 5718 001c 64000000 		.word	100
 5719 0020 0A000000 		.word	10
 5720 0024 01000000 		.word	1
 5721              		.section	.bss.Reg,"aw",%nobits
 5722              		.align	2
 5725              	Reg:
 5726 0000 00000000 		.space	4
 5727              		.section	.rodata.str1.4,"aMS",%progbits,1
 5728              		.align	2
 5729              	.LC1:
 5730 0000 44485259 		.ascii	"DHRYSTONE PROGRAM, SOME STRING\000"
 5730      53544F4E 
 5730      45205052 
 5730      4F475241 
 5730      4D2C2053 
 5731 001f 00       		.space	1
 5732              	.LC2:
 5733 0020 44485259 		.ascii	"DHRYSTONE PROGRAM, 1'ST STRING\000"
 5733      53544F4E 
 5733      45205052 
 5733      4F475241 
 5733      4D2C2031 
 5734 003f 00       		.space	1
 5735              	.LC3:
 5736 0040 0A00     		.ascii	"\012\000"
 5737 0042 0000     		.space	2
 5738              	.LC4:
 5739 0044 44687279 		.ascii	"Dhrystone Benchmark, Version 2.1 (Language: C)\012\000"
 5739      73746F6E 
 5739      65204265 
 5739      6E63686D 
 5739      61726B2C 
 5740              	.LC5:
 5741 0074 54686520 		.ascii	"The number of runs through the benchmark: \000"
 5741      6E756D62 
 5741      6572206F 
 5741      66207275 
 5741      6E732074 
 5742 009f 00       		.space	1
 5743              	.LC6:
 5744 00a0 44485259 		.ascii	"DHRYSTONE PROGRAM, 2'ND STRING\000"
 5744      53544F4E 
 5744      45205052 
 5744      4F475241 
 5744      4D2C2032 
 5745 00bf 00       		.space	1
 5746              	.LC7:
 5747 00c0 44485259 		.ascii	"DHRYSTONE PROGRAM, 3'RD STRING\000"
 5747      53544F4E 
 5747      45205052 
 5747      4F475241 
 5747      4D2C2033 
 5748 00df 00       		.space	1
 5749              	.LC8:
 5750 00e0 20202020 		.ascii	"        should be:   %d\012\000"
 5750      20202020 
 5750      73686F75 
 5750      6C642062 
 5750      653A2020 
 5751 00f9 000000   		.space	3
 5752              	.LC9:
 5753 00fc 426F6F6C 		.ascii	"Bool_Glob:           %d\012\000"
 5753      5F476C6F 
 5753      623A2020 
 5753      20202020 
 5753      20202020 
 5754 0115 000000   		.space	3
 5755              	.LC10:
 5756 0118 43685F31 		.ascii	"Ch_1_Glob:           %c\012\000"
 5756      5F476C6F 
 5756      623A2020 
 5756      20202020 
 5756      20202020 
 5757 0131 000000   		.space	3
 5758              	.LC11:
 5759 0134 20202020 		.ascii	"        should be:   %c\012\000"
 5759      20202020 
 5759      73686F75 
 5759      6C642062 
 5759      653A2020 
 5760 014d 000000   		.space	3
 5761              	.LC12:
 5762 0150 4100     		.ascii	"A\000"
 5763 0152 0000     		.space	2
 5764              	.LC13:
 5765 0154 43685F32 		.ascii	"Ch_2_Glob:           %c\012\000"
 5765      5F476C6F 
 5765      623A2020 
 5765      20202020 
 5765      20202020 
 5766 016d 000000   		.space	3
 5767              	.LC14:
 5768 0170 4200     		.ascii	"B\000"
 5769 0172 0000     		.space	2
 5770              	.LC15:
 5771 0174 4172725F 		.ascii	"Arr_1_Glob[8]:       %d\012\000"
 5771      315F476C 
 5771      6F625B38 
 5771      5D3A2020 
 5771      20202020 
 5772 018d 000000   		.space	3
 5773              	.LC16:
 5774 0190 4172725F 		.ascii	"Arr_2_Glob[8][7]:    %d\012\000"
 5774      325F476C 
 5774      6F625B38 
 5774      5D5B375D 
 5774      3A202020 
 5775 01a9 000000   		.space	3
 5776              	.LC17:
 5777 01ac 20202020 		.ascii	"        should be:   loops + 10\012\000"
 5777      20202020 
 5777      73686F75 
 5777      6C642062 
 5777      653A2020 
 5778 01cd 000000   		.space	3
 5779              	.LC18:
 5780 01d0 5074725F 		.ascii	"Ptr_Glob->\012\000"
 5780      476C6F62 
 5780      2D3E0A00 
 5781              	.LC19:
 5782 01dc 20205074 		.ascii	"  Ptr_Comp:          %d\012\000"
 5782      725F436F 
 5782      6D703A20 
 5782      20202020 
 5782      20202020 
 5783 01f5 000000   		.space	3
 5784              	.LC20:
 5785 01f8 20202020 		.ascii	"        should be:   (implementation-dependent)\012"
 5785      20202020 
 5785      73686F75 
 5785      6C642062 
 5785      653A2020 
 5786 0228 00       		.ascii	"\000"
 5787 0229 000000   		.space	3
 5788              	.LC21:
 5789 022c 20204469 		.ascii	"  Discr:             %d\012\000"
 5789      7363723A 
 5789      20202020 
 5789      20202020 
 5789      20202020 
 5790 0245 000000   		.space	3
 5791              	.LC22:
 5792 0248 3000     		.ascii	"0\000"
 5793 024a 0000     		.space	2
 5794              	.LC23:
 5795 024c 2020456E 		.ascii	"  Enum_Comp:         %d\012\000"
 5795      756D5F43 
 5795      6F6D703A 
 5795      20202020 
 5795      20202020 
 5796 0265 000000   		.space	3
 5797              	.LC24:
 5798 0268 2020496E 		.ascii	"  Int_Comp:          %d\012\000"
 5798      745F436F 
 5798      6D703A20 
 5798      20202020 
 5798      20202020 
 5799 0281 000000   		.space	3
 5800              	.LC25:
 5801 0284 20205374 		.ascii	"  Str_Comp:          %s\012\000"
 5801      725F436F 
 5801      6D703A20 
 5801      20202020 
 5801      20202020 
 5802 029d 000000   		.space	3
 5803              	.LC26:
 5804 02a0 20202020 		.ascii	"        should be:   DHRYSTONE PROGRAM, SOME STRING"
 5804      20202020 
 5804      73686F75 
 5804      6C642062 
 5804      653A2020 
 5805 02d3 0A00     		.ascii	"\012\000"
 5806 02d5 000000   		.space	3
 5807              	.LC27:
 5808 02d8 4E657874 		.ascii	"Next_Ptr_Glob->\012\000"
 5808      5F507472 
 5808      5F476C6F 
 5808      622D3E0A 
 5808      00
 5809 02e9 000000   		.space	3
 5810              	.LC28:
 5811 02ec 20202020 		.ascii	"        should be:   (implementation-dependent), sa"
 5811      20202020 
 5811      73686F75 
 5811      6C642062 
 5811      653A2020 
 5812 031f 6D652061 		.ascii	"me as above\012\000"
 5812      73206162 
 5812      6F76650A 
 5812      00
 5813              	.LC29:
 5814 032c 496E745F 		.ascii	"Int_1_Loc:           %d\012\000"
 5814      315F4C6F 
 5814      633A2020 
 5814      20202020 
 5814      20202020 
 5815 0345 000000   		.space	3
 5816              	.LC30:
 5817 0348 496E745F 		.ascii	"Int_2_Loc:           %d\012\000"
 5817      325F4C6F 
 5817      633A2020 
 5817      20202020 
 5817      20202020 
 5818 0361 000000   		.space	3
 5819              	.LC31:
 5820 0364 496E745F 		.ascii	"Int_3_Loc:           %d\012\000"
 5820      335F4C6F 
 5820      633A2020 
 5820      20202020 
 5820      20202020 
 5821 037d 000000   		.space	3
 5822              	.LC32:
 5823 0380 456E756D 		.ascii	"Enum_Loc:            %d\012\000"
 5823      5F4C6F63 
 5823      3A202020 
 5823      20202020 
 5823      20202020 
 5824 0399 000000   		.space	3
 5825              	.LC33:
 5826 039c 5374725F 		.ascii	"Str_1_Loc:           %s\012\000"
 5826      315F4C6F 
 5826      633A2020 
 5826      20202020 
 5826      20202020 
 5827 03b5 000000   		.space	3
 5828              	.LC34:
 5829 03b8 20202020 		.ascii	"        should be:   DHRYSTONE PROGRAM, 1'ST STRING"
 5829      20202020 
 5829      73686F75 
 5829      6C642062 
 5829      653A2020 
 5830 03eb 0A00     		.ascii	"\012\000"
 5831 03ed 000000   		.space	3
 5832              	.LC35:
 5833 03f0 5374725F 		.ascii	"Str_2_Loc:           %s\012\000"
 5833      325F4C6F 
 5833      633A2020 
 5833      20202020 
 5833      20202020 
 5834 0409 000000   		.space	3
 5835              	.LC36:
 5836 040c 20202020 		.ascii	"        should be:   DHRYSTONE PROGRAM, 2'ND STRING"
 5836      20202020 
 5836      73686F75 
 5836      6C642062 
 5836      653A2020 
 5837 043f 0A00     		.ascii	"\012\000"
 5838 0441 000000   		.space	3
 5839              	.LC37:
 5840 0444 54657374 		.ascii	"Test runned successfully !!!\012\000"
 5840      2072756E 
 5840      6E656420 
 5840      73756363 
 5840      65737366 
 5841 0462 0000     		.space	2
 5842              	.LC38:
 5843 0464 4C4F4F50 		.ascii	"LOOPS: \000"
 5843      533A2000 
 5844              	.LC39:
 5845 046c 54494D45 		.ascii	"TIME : \000"
 5845      203A2000 
 5846              	.LC40:
 5847 0474 45786563 		.ascii	"Execution ends\012\000"
 5847      7574696F 
 5847      6E20656E 
 5847      64730A00 
 5848              	.LC41:
 5849 0484 46696E61 		.ascii	"Final values of the variables used in the benchmark"
 5849      6C207661 
 5849      6C756573 
 5849      206F6620 
 5849      74686520 
 5850 04b7 3A0A00   		.ascii	":\012\000"
 5851 04ba 0000     		.space	2
 5852              	.LC42:
 5853 04bc 496E745F 		.ascii	"Int_Glob:            %d\012\000"
 5853      476C6F62 
 5853      3A202020 
 5853      20202020 
 5853      20202020 
 5854 04d5 000000   		.text
 5855              	.Letext0:
 5856              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.7.0/include/stddef.h"
 5857              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.7.0/../../../../arm-none-eabi/include/string.h"
 5858              		.file 4 "/usr/lib/gcc/arm-none-eabi/4.7.0/../../../../arm-none-eabi/include/stdlib.h"
 5859              		.file 5 "../src/../inc/uart.h"
 5860              		.file 6 "../src/../inc/timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 benchmark.c
     /tmp/ccO0jY7j.s:17     .text.int_to_a:0000000000000000 $a
     /tmp/ccO0jY7j.s:20     .text.int_to_a:0000000000000000 int_to_a
     /tmp/ccO0jY7j.s:168    .text.int_to_a:00000000000000e4 $d
     /tmp/ccO0jY7j.s:173    .text.Proc_1:0000000000000000 $a
     /tmp/ccO0jY7j.s:176    .text.Proc_1:0000000000000000 Proc_1
     /tmp/ccO0jY7j.s:318    .text.Proc_1:00000000000000c4 $d
     /tmp/ccO0jY7j.s:325    .text.Proc_1:00000000000000d8 $a
     /tmp/ccO0jY7j.s:367    .text.Proc_1:0000000000000114 $d
                            *COM*:0000000000000004 Ptr_Glob
                            *COM*:0000000000000004 Int_Glob
     /tmp/ccO0jY7j.s:375    .text.dhrystone:0000000000000000 $a
     /tmp/ccO0jY7j.s:378    .text.dhrystone:0000000000000000 dhrystone
     /tmp/ccO0jY7j.s:887    .text.dhrystone:0000000000000354 $d
                            *COM*:0000000000002710 Arr_2_Glob
                            *COM*:00000000000000c8 Arr_1_Glob
                            *COM*:0000000000000004 Bool_Glob
                            *COM*:0000000000000001 Ch_1_Glob
                            *COM*:0000000000000001 Ch_2_Glob
                            *COM*:0000000000000004 Next_Ptr_Glob
     /tmp/ccO0jY7j.s:934    .text.dhrystone:0000000000000408 $a
     /tmp/ccO0jY7j.s:5233   .text.dhrystone:0000000000001d08 $d
     /tmp/ccO0jY7j.s:5253   .text.start_benchmark:0000000000000000 $a
     /tmp/ccO0jY7j.s:5256   .text.start_benchmark:0000000000000000 start_benchmark
     /tmp/ccO0jY7j.s:5272   .text.Proc_2:0000000000000000 $a
     /tmp/ccO0jY7j.s:5275   .text.Proc_2:0000000000000000 Proc_2
     /tmp/ccO0jY7j.s:5306   .text.Proc_2:0000000000000028 $d
     /tmp/ccO0jY7j.s:5312   .text.Proc_3:0000000000000000 $a
     /tmp/ccO0jY7j.s:5315   .text.Proc_3:0000000000000000 Proc_3
     /tmp/ccO0jY7j.s:5346   .text.Proc_3:000000000000002c $d
     /tmp/ccO0jY7j.s:5354   .text.Proc_4:0000000000000000 $a
     /tmp/ccO0jY7j.s:5357   .text.Proc_4:0000000000000000 Proc_4
     /tmp/ccO0jY7j.s:5388   .text.Proc_4:000000000000002c $d
     /tmp/ccO0jY7j.s:5395   .text.Proc_5:0000000000000000 $a
     /tmp/ccO0jY7j.s:5398   .text.Proc_5:0000000000000000 Proc_5
     /tmp/ccO0jY7j.s:5418   .text.Proc_5:000000000000001c $d
     /tmp/ccO0jY7j.s:5424   .text.Proc_6:0000000000000000 $a
     /tmp/ccO0jY7j.s:5427   .text.Proc_6:0000000000000000 Proc_6
     /tmp/ccO0jY7j.s:5458   .text.Proc_6:0000000000000020 $d
     /tmp/ccO0jY7j.s:5465   .text.Proc_6:0000000000000034 $a
     /tmp/ccO0jY7j.s:5495   .text.Proc_6:0000000000000068 $d
     /tmp/ccO0jY7j.s:5500   .text.Proc_7:0000000000000000 $a
     /tmp/ccO0jY7j.s:5503   .text.Proc_7:0000000000000000 Proc_7
     /tmp/ccO0jY7j.s:5524   .text.Proc_8:0000000000000000 $a
     /tmp/ccO0jY7j.s:5527   .text.Proc_8:0000000000000000 Proc_8
     /tmp/ccO0jY7j.s:5588   .text.Proc_8:0000000000000060 $d
     /tmp/ccO0jY7j.s:5593   .text.Func_1:0000000000000000 $a
     /tmp/ccO0jY7j.s:5596   .text.Func_1:0000000000000000 Func_1
     /tmp/ccO0jY7j.s:5624   .text.Func_1:000000000000001c $d
     /tmp/ccO0jY7j.s:5629   .text.Func_2:0000000000000000 $a
     /tmp/ccO0jY7j.s:5632   .text.Func_2:0000000000000000 Func_2
     /tmp/ccO0jY7j.s:5672   .text.Func_2:000000000000003c $d
     /tmp/ccO0jY7j.s:5677   .text.Func_3:0000000000000000 $a
     /tmp/ccO0jY7j.s:5680   .text.Func_3:0000000000000000 Func_3
     /tmp/ccO0jY7j.s:5725   .bss.Reg:0000000000000000 Reg
     /tmp/ccO0jY7j.s:5708   .rodata:0000000000000000 $d
     /tmp/ccO0jY7j.s:5722   .bss.Reg:0000000000000000 $d
     /tmp/ccO0jY7j.s:5728   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.newlib.h.8.4b2338a4bcae55bd64283f2c77089b80
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.95dee4059009fe3ab635a191bb73dc66
                           .group:0000000000000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:0000000000000000 wm4.stddef.h.187.40b3a084f9bc2c020a9e00b9eabe9c14
                           .group:0000000000000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:0000000000000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.50.f5923f1950ced340a337f4676566f65a
                           .group:0000000000000000 wm4.cdefs.h.45.6b392759c8a421d1199268021d4987e3
                           .group:0000000000000000 wm4.stddef.h.235.d9f4f80b8c4429535175712282cda6a6
                           .group:0000000000000000 wm4.string.h.118.0034ce03f0efcb6576b1b96865c749d5
                           .group:0000000000000000 wm4.lpc213x.h.15.4e57150503f9987fca2e0f44b413182c
                           .group:0000000000000000 wm4.lpcTMR.h.15.5d8c6944123d2303f976236c185e5c9a
                           .group:0000000000000000 wm4.lpcUART.h.15.0f98b1282caa7bcace095134821cf321
                           .group:0000000000000000 wm4.lpcSCB.h.15.1012a370a86d3e047c485ab84e847f6f
                           .group:0000000000000000 wm4.lpcVIC.h.15.116b52310ce75ea4a204a3e3bc4de613
                           .group:0000000000000000 wm4.lpc213x.h.36.97cbc9815be9db61df6cc76641d23caf
                           .group:0000000000000000 wm4.irq.h.14.4cfdd196bd43dd901c13cb04b5c89d78
                           .group:0000000000000000 wm4.uart.h.7.c380785a0e53261b57a1cdd19735d46c

UNDEFINED SYMBOLS
malloc
puts_UART
reset_counter
strcmp
read_counter
